{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hasan sir project\\\\ChattersTwo\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = ({\n  fetchAgain\n}) => {\n  _s();\n  const [loggedUser, setLoggedUser] = useState({});\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [\"My Chats\", /*#__PURE__*/_jsxDEV(GroupChatModal, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          d: \"flex\",\n          fontSize: {\n            base: \"17px\",\n            md: \"10px\",\n            lg: \"17px\"\n          },\n          rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }, this),\n          children: \"New Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      flexDir: \"column\",\n      p: 3,\n      bg: \"#F8F8F8\",\n      w: \"100%\",\n      h: \"100%\",\n      borderRadius: \"lg\",\n      overflowY: \"hidden\",\n      children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        overflowY: \"scroll\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setSelectedChat(chat),\n          cursor: \"pointer\",\n          bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n          color: selectedChat === chat ? \"white\" : \"black\",\n          px: 3,\n          py: 2,\n          borderRadius: \"lg\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), chat.latestMessage && /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [chat.latestMessage.sender.name, \" : \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), chat.latestMessage.content.length > 50 ? chat.latestMessage.content.substring(0, 51) + \"...\" : chat.latestMessage.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this)]\n        }, chat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChats, \"o1Uzb8iC0RV+RRpyZEUL8aCrzPE=\", false, function () {\n  return [useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["AddIcon","Box","Stack","Text","useToast","axios","useEffect","useState","getSender","ChatLoading","GroupChatModal","Button","ChatState","jsxDEV","_jsxDEV","MyChats","fetchAgain","_s","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","display","base","md","flexDir","alignItems","p","bg","w","borderRadius","borderWidth","children","pb","px","fontSize","fontFamily","d","justifyContent","lg","rightIcon","fileName","_jsxFileName","lineNumber","columnNumber","h","overflowY","map","chat","onClick","cursor","color","py","isGroupChat","users","chatName","latestMessage","sender","name","content","length","substring","_id","_c","$RefreshReg$"],"sources":["E:/Hasan sir project/ChattersTwo/frontend/src/components/MyChats.js"],"sourcesContent":["import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState({});\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      display={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}