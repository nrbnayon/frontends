{"ast":null,"code":"import{FormControl}from\"@chakra-ui/form-control\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import\"./styles.css\";import{IconButton,Spinner,useToast}from\"@chakra-ui/react\";import{getSender,getSenderFull}from\"../config/ChatLogics\";import{useEffect,useState}from\"react\";import axios from\"axios\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import ProfileModal from\"./miscellaneous/ProfileModal\";import ScrollableChat from\"./ScrollableChat\";import Lottie from\"react-lottie\";import animationData from\"../animations/typing.json\";import io from\"socket.io-client\";import UpdateGroupChatModal from\"./miscellaneous/UpdateGroupChatModal\";import{ChatState}from\"../Context/ChatProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ENDPOINT=\"https://msg-n0bs.onrender.com\";var socket,selectedChatCompare;const SingleChat=_ref=>{let{fetchAgain,setFetchAgain}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[newMessage,setNewMessage]=useState(\"\");const[socketConnected,setSocketConnected]=useState(false);const[typing,setTyping]=useState(false);const[istyping,setIsTyping]=useState(false);const toast=useToast();const[typingText,setTypingText]=useState(\"\");const defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};const{selectedChat,setSelectedChat,user,notification,setNotification}=ChatState();const fetchMessages=async()=>{if(!selectedChat)return;try{const config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);const{data}=await axios.get(\"/api/message/\".concat(selectedChat._id),config);setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}};const sendMessage=async event=>{if(event.key===\"Enter\"&&newMessage){socket.emit(\"stop typing\",selectedChat._id);try{const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};setNewMessage(\"\");const{data}=await axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat},config);socket.emit(\"new message\",data);setMessages([...messages,data]);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});}}};useEffect(()=>{socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",()=>setSocketConnected(true));socket.on(\"typing\",inputText=>{console.log(\"Received typing event: \".concat(inputText));setTypingText(inputText);});socket.on(\"stop typing\",()=>setIsTyping(false));// eslint-disable-next-line\n},[]);useEffect(()=>{fetchMessages();selectedChatCompare=selectedChat;// eslint-disable-next-line\n},[selectedChat]);useEffect(()=>{socket.on(\"message recieved\",newMessageRecieved=>{if(!selectedChatCompare||// if chat is not selected or doesn't match current chat\nselectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved,...notification]);setFetchAgain(!fetchAgain);}}else{setMessages([...messages,newMessageRecieved]);}});socket.on(\"typing\",inputText=>{// Handle the broadcasted typing information (inputText)\nsetIsTyping(true);setTypingText(inputText);});});const typingHandler=e=>{const inputText=e.target.value;setNewMessage(inputText);if(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id,inputText);}let lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(()=>{var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",d:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{d:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>setSelectedChat(\"\")}),messages&&(!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchMessages:fetchMessages,fetchAgain:fetchAgain,setFetchAgain:setFetchAgain})]}))]}),/*#__PURE__*/_jsxs(Box,{d:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,id:\"first-name\",isRequired:true,mt:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",alignItems:\"center\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{marginRight:\"10px\",display:\"flex\"},children:[/*#__PURE__*/_jsx(\"div\",{children:typingText}),/*#__PURE__*/_jsx(Lottie,{options:defaultOptions,width:70,style:{marginBottom:15,marginLeft:8,background:\"transparent\"}})]})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message..\",value:newMessage,onChange:typingHandler})]})]})]}):/*#__PURE__*/ // to get socket.io on same page\n_jsx(Box,{d:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ENDPOINT","socket","selectedChatCompare","SingleChat","_ref","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","typingText","setTypingText","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","selectedChat","setSelectedChat","user","notification","setNotification","fetchMessages","config","headers","Authorization","concat","token","data","get","_id","emit","error","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","on","inputText","console","log","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","children","fontSize","base","md","pb","px","w","fontFamily","d","justifyContent","alignItems","icon","onClick","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","id","isRequired","mt","style","display","marginRight","options","width","marginBottom","marginLeft","background","variant","placeholder","onChange"],"sources":["E:/Hasan sir project/4/frontend/src/components/SingleChat.js"],"sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"https://msg-n0bs.onrender.com\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  const [typingText, setTypingText] = useState(\"\");\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", (inputText) => {\r\n      console.log(`Received typing event: ${inputText}`);\r\n      setTypingText(inputText);\r\n    });\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n    socket.on(\"typing\", (inputText) => {\r\n      // Handle the broadcasted typing information (inputText)\r\n      setIsTyping(true);\r\n      setTypingText(inputText);\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    const inputText = e.target.value;\r\n    setNewMessage(inputText);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id, inputText);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <div style={{ marginRight: \"10px\", display: \"flex\" }}>\r\n                    <div>{typingText}</div>\r\n                    <Lottie\r\n                      options={defaultOptions}\r\n                      width={70}\r\n                      style={{\r\n                        marginBottom: 15,\r\n                        marginLeft: 8,\r\n                        background: \"transparent\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}