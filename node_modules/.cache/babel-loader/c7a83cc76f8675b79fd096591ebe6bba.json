{"ast":null,"code":"import { createCallbackRef } from './createRef';\nimport { assignRef } from './assignRef';\n/**\r\n * Merges two or more refs together providing a single interface to set their value\r\n * @param {RefObject|Ref} refs\r\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\r\n *\r\n * @see {@link useMergeRefs} to be used in ReactComponents\r\n * @example\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   const ownRef = useRef();\r\n *   const domRef = mergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\r\n *   return <div ref={domRef}>...</div>\r\n * }\r\n */\n\nexport function mergeRefs(refs) {\n  return createCallbackRef(function (newValue) {\n    return refs.forEach(function (ref) {\n      return assignRef(ref, newValue);\n    });\n  });\n}","map":{"version":3,"sources":["E:/Hasan sir project/ChattersTwo/frontend/node_modules/use-callback-ref/dist/es2015/mergeRef.js"],"names":["createCallbackRef","assignRef","mergeRefs","refs","newValue","forEach","ref"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,aAAlC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,SAAOH,iBAAiB,CAAC,UAAUI,QAAV,EAAoB;AACzC,WAAOD,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AAAE,aAAOL,SAAS,CAACK,GAAD,EAAMF,QAAN,CAAhB;AAAkC,KAAhE,CAAP;AACH,GAFuB,CAAxB;AAGH","sourcesContent":["import { createCallbackRef } from './createRef';\r\nimport { assignRef } from './assignRef';\r\n/**\r\n * Merges two or more refs together providing a single interface to set their value\r\n * @param {RefObject|Ref} refs\r\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\r\n *\r\n * @see {@link useMergeRefs} to be used in ReactComponents\r\n * @example\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   const ownRef = useRef();\r\n *   const domRef = mergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\r\n *   return <div ref={domRef}>...</div>\r\n * }\r\n */\r\nexport function mergeRefs(refs) {\r\n    return createCallbackRef(function (newValue) {\r\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}