{"ast":null,"code":"import _toConsumableArray from\"E:/Hasan sir project/ChattersTwo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"E:/Hasan sir project/ChattersTwo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/Hasan sir project/ChattersTwo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/Hasan sir project/ChattersTwo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControl}from\"@chakra-ui/form-control\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import\"./styles.css\";import{IconButton,Spinner,useToast}from\"@chakra-ui/react\";import{getSender,getSenderFull}from\"../config/ChatLogics\";import{useEffect,useState}from\"react\";import axios from\"axios\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import ProfileModal from\"./miscellaneous/ProfileModal\";import ScrollableChat from\"./ScrollableChat\";import Lottie from\"react-lottie\";import animationData from\"../animations/typing.json\";import io from\"socket.io-client\";import UpdateGroupChatModal from\"./miscellaneous/UpdateGroupChatModal\";import{ChatState}from\"../Context/ChatProvider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT=\"http://localhost:8080\";var socket,selectedChatCompare;var SingleChat=function SingleChat(_ref){var fetchAgain=_ref.fetchAgain,setFetchAgain=_ref.setFetchAgain;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newMessage=_useState6[0],setNewMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),socketConnected=_useState8[0],setSocketConnected=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),typing=_useState10[0],setTyping=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),istyping=_useState12[0],setIsTyping=_useState12[1];var toast=useToast();var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),typingText=_useState14[0],setTypingText=_useState14[1];var defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};var _ChatState=ChatState(),selectedChat=_ChatState.selectedChat,setSelectedChat=_ChatState.setSelectedChat,user=_ChatState.user,notification=_ChatState.notification,setNotification=_ChatState.setNotification;var fetchMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(selectedChat){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.prev=2;config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);_context.next=7;return axios.get(\"/api/message/\".concat(selectedChat._id),config);case 7:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setMessages(data);setLoading(false);socket.emit(\"join chat\",selectedChat._id);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchMessages(){return _ref2.apply(this,arguments);};}();var sendMessage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(event.key===\"Enter\"&&newMessage)){_context2.next=16;break;}socket.emit(\"stop typing\",selectedChat._id);_context2.prev=2;config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};setNewMessage(\"\");_context2.next=7;return axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat},config);case 7:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;socket.emit(\"new message\",data);setMessages([].concat(_toConsumableArray(messages),[data]));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](2);toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[2,13]]);}));return function sendMessage(_x){return _ref3.apply(this,arguments);};}();useEffect(function(){socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",function(){return setSocketConnected(true);});socket.on(\"typing\",function(inputText){console.log(\"Received typing event: \".concat(inputText));setTypingText(inputText);});socket.on(\"stop typing\",function(){return setIsTyping(false);});// eslint-disable-next-line\n},[]);useEffect(function(){fetchMessages();selectedChatCompare=selectedChat;// eslint-disable-next-line\n},[selectedChat]);useEffect(function(){socket.on(\"message recieved\",function(newMessageRecieved){if(!selectedChatCompare||// if chat is not selected or doesn't match current chat\nselectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved].concat(_toConsumableArray(notification)));setFetchAgain(!fetchAgain);}}else{setMessages([].concat(_toConsumableArray(messages),[newMessageRecieved]));}});socket.on(\"typing\",function(inputText){// Handle the broadcasted typing information (inputText)\nsetIsTyping(true);setTypingText(inputText);});});var typingHandler=function typingHandler(e){var inputText=e.target.value;setNewMessage(inputText);if(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id,inputText);}var lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(function(){var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",d:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{d:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:function onClick(){return setSelectedChat(\"\");}}),messages&&(!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchMessages:fetchMessages,fetchAgain:fetchAgain,setFetchAgain:setFetchAgain})]}))]}),/*#__PURE__*/_jsxs(Box,{d:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,id:\"first-name\",isRequired:true,mt:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",alignItems:\"center\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{marginRight:\"10px\",display:\"flex\"},children:[/*#__PURE__*/_jsx(\"div\",{children:typingText}),/*#__PURE__*/_jsx(Lottie,{options:defaultOptions,width:70,style:{marginBottom:15,marginLeft:8,background:\"transparent\"}})]})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message..\",value:newMessage,onChange:typingHandler})]})]})]}):/*#__PURE__*/ // to get socket.io on same page\n_jsx(Box,{d:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"sources":["E:/Hasan sir project/ChattersTwo/frontend/src/components/SingleChat.js"],"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","Lottie","animationData","io","UpdateGroupChatModal","ChatState","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","typingText","setTypingText","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","selectedChat","setSelectedChat","user","notification","setNotification","fetchMessages","config","headers","Authorization","token","get","_id","data","emit","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","on","inputText","console","log","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","base","md","isGroupChat","users","chatName","toUpperCase","display","alignItems","marginRight","marginBottom","marginLeft","background"],"mappings":"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","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = \"http://localhost:8080\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n  const [typingText, setTypingText] = useState(\"\");\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          \"/api/message\",\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", (inputText) => {\r\n      console.log(`Received typing event: ${inputText}`);\r\n      setTypingText(inputText);\r\n    });\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n    socket.on(\"typing\", (inputText) => {\r\n      // Handle the broadcasted typing information (inputText)\r\n      setIsTyping(true);\r\n      setTypingText(inputText);\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    const inputText = e.target.value;\r\n    setNewMessage(inputText);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id, inputText);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"28px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Work sans\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <div style={{ marginRight: \"10px\", display: \"flex\" }}>\r\n                    <div>{typingText}</div>\r\n                    <Lottie\r\n                      options={defaultOptions}\r\n                      width={70}\r\n                      style={{\r\n                        marginBottom: 15,\r\n                        marginLeft: 8,\r\n                        background: \"transparent\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n"]},"metadata":{},"sourceType":"module"}