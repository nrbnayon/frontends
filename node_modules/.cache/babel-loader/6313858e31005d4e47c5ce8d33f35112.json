{"ast":null,"code":"import { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\";\n/* -------------------------------------------------------------------------------------------------\r\n The match width modifier sets the popper width to match the reference.\r\n It us useful for custom selects, autocomplete, etc.\r\n* -----------------------------------------------------------------------------------------------*/\n\nexport var matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: _ref => {\n    var {\n      state\n    } = _ref;\n    state.styles.popper.width = state.rects.reference.width + \"px\";\n  },\n  effect: _ref2 => {\n    var {\n      state\n    } = _ref2;\n    return () => {\n      var reference = state.elements.reference;\n      state.elements.popper.style.width = reference.offsetWidth + \"px\";\n    };\n  }\n};\n/* -------------------------------------------------------------------------------------------------\r\n  The transform origin modifier sets the css `transformOrigin` value of the popper\r\n  based on the dynamic placement state of the popper.\r\n  \r\n  Useful when we need to animate/transition the popper.\r\n* -----------------------------------------------------------------------------------------------*/\n\nexport var transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: _ref3 => {\n    var {\n      state\n    } = _ref3;\n    setTransformOrigin(state);\n  },\n  effect: _ref4 => {\n    var {\n      state\n    } = _ref4;\n    return () => {\n      setTransformOrigin(state);\n    };\n  }\n};\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\n/* -------------------------------------------------------------------------------------------------\r\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\r\n  styles generated by popper.js to properly position the arrow\r\n* -----------------------------------------------------------------------------------------------*/\n\nexport var positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: _ref5 => {\n    var {\n      state\n    } = _ref5;\n    setArrowStyles(state);\n  }\n};\nvar setArrowStyles = state => {\n  var _state$elements;\n  if (!state.placement) return;\n  var overrides = getArrowStyle(state.placement);\n  if ((_state$elements = state.elements) != null && _state$elements.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    var vars = {\n      [cssVars.arrowSizeHalf.var]: \"calc(\" + cssVars.arrowSize.varRef + \" / 2)\",\n      [cssVars.arrowOffset.var]: \"calc(\" + cssVars.arrowSizeHalf.varRef + \" * -1)\"\n    };\n    for (var property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\n/* -------------------------------------------------------------------------------------------------\r\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\r\n  the popper arrow tip.\r\n* -----------------------------------------------------------------------------------------------*/\n\nexport var innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: _ref6 => {\n    var {\n      state\n    } = _ref6;\n    setInnerArrowStyles(state);\n  },\n  effect: _ref7 => {\n    var {\n      state\n    } = _ref7;\n    return () => {\n      setInnerArrowStyles(state);\n    };\n  }\n};\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  var inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement)\n  });\n};","map":{"version":3,"names":["getBoxShadow","toTransformOrigin","cssVars","matchWidth","name","enabled","phase","requires","fn","_ref","state","styles","popper","width","rects","reference","effect","_ref2","elements","style","offsetWidth","transformOrigin","_ref3","setTransformOrigin","_ref4","setProperty","var","placement","positionArrow","_ref5","setArrowStyles","_state$elements","overrides","getArrowStyle","arrow","Object","assign","property","value","arrowSize","varRef","height","zIndex","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","_ref6","setInnerArrowStyles","_ref7","inner","querySelector","transform","background","arrowBg","top","left","position","boxShadow"],"sources":["../../src/modifiers.ts"],"sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It us useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect: ({ state }) => () => {\n    const reference = state.elements.reference as HTMLElement\n    state.elements.popper.style.width = `${reference.offsetWidth}px`\n  },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect: ({ state }) => () => {\n    setTransformOrigin(state)\n  },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect: ({ state }) => () => {\n    setInnerArrowStyles(state)\n  },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement),\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}