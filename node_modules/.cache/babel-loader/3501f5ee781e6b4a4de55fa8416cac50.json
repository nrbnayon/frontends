{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var ControlBox = props => {\n  var {\n      type = \"checkbox\",\n      _hover,\n      _invalid,\n      _disabled,\n      _focus,\n      _checked,\n      _child = {\n        opacity: 0\n      },\n      _checkedAndChild = {\n        opacity: 1\n      },\n      _checkedAndDisabled,\n      _checkedAndFocus,\n      _checkedAndHover,\n      children\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"]);\n  var checkedAndDisabled = \"input[type=\" + type + \"]:checked:disabled + &\";\n  var checkedAndHover = \"input[type=\" + type + \"]:checked:hover:not(:disabled) + &\";\n  var checkedAndFocus = \"input[type=\" + type + \"]:checked:focus + &\";\n  var disabled = \"input[type=\" + type + \"]:disabled + &\";\n  var focus = \"input[type=\" + type + \"]:focus + &\";\n  var hover = \"input[type=\" + type + \"]:hover:not(:disabled):not(:checked) + &\";\n  var checked = \"input[type=\" + type + \"]:checked + &, input[type=\" + type + \"][aria-checked=mixed] + &\";\n  var invalid = \"input[type=\" + type + \"][aria-invalid=true] + &\";\n  var child = \"& > *\";\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, rest, {\n    \"aria-hidden\": true,\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transition: \"all 120ms\",\n      flexShrink: 0,\n      [focus]: _focus,\n      [hover]: _hover,\n      [disabled]: _disabled,\n      [invalid]: _invalid,\n      [checkedAndDisabled]: _checkedAndDisabled,\n      [checkedAndFocus]: _checkedAndFocus,\n      [checkedAndHover]: _checkedAndHover,\n      [child]: _child,\n      [checked]: _extends({}, _checked, {\n        [child]: _checkedAndChild\n      })\n    }\n  }), children);\n};\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\";\n}\nexport default ControlBox;","map":{"version":3,"names":["chakra","__DEV__","React","ControlBox","props","type","_hover","_invalid","_disabled","_focus","_checked","_child","opacity","_checkedAndChild","_checkedAndDisabled","_checkedAndFocus","_checkedAndHover","children","rest","_objectWithoutPropertiesLoose","checkedAndDisabled","checkedAndHover","checkedAndFocus","disabled","focus","hover","checked","invalid","child","createElement","div","_extends","__css","display","alignItems","justifyContent","transition","flexShrink","displayName"],"sources":["../../src/control-box.tsx"],"sourcesContent":["import { chakra, SystemStyleObject, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ControlBoxOptions {\n  type?: \"checkbox\" | \"radio\"\n  _hover?: SystemStyleObject\n  _invalid?: SystemStyleObject\n  _disabled?: SystemStyleObject\n  _focus?: SystemStyleObject\n  _checked?: SystemStyleObject\n  _child?: SystemStyleObject\n  _checkedAndChild?: SystemStyleObject\n  _checkedAndDisabled?: SystemStyleObject\n  _checkedAndFocus?: SystemStyleObject\n  _checkedAndHover?: SystemStyleObject\n}\n\nexport type IControlBox = ControlBoxOptions\n\ninterface BaseControlProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof ControlBoxOptions> {}\n\nexport interface ControlBoxProps extends BaseControlProps, ControlBoxOptions {}\n\nexport const ControlBox: React.FC<ControlBoxProps> = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props\n\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`\n  const disabled = `input[type=${type}]:disabled + &`\n  const focus = `input[type=${type}]:focus + &`\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`\n  const invalid = `input[type=${type}][aria-invalid=true] + &`\n  const child = `& > *`\n\n  return (\n    <chakra.div\n      {...rest}\n      aria-hidden\n      __css={{\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transition: \"all 120ms\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: {\n          ..._checked,\n          [child]: _checkedAndChild,\n        },\n      }}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\"\n}\n\nexport default ControlBox\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,QAA2D,mBAA3D;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAuBA,OAAO,IAAMC,UAAqC,GAAIC,KAAD,IAAW;EAC9D,IAAM;MACJC,IAAI,GAAG,UADH;MAEJC,MAFI;MAGJC,QAHI;MAIJC,SAJI;MAKJC,MALI;MAMJC,QANI;MAOJC,MAAM,GAAG;QAAEC,OAAO,EAAE;MAAX,CAPL;MAQJC,gBAAgB,GAAG;QAAED,OAAO,EAAE;MAAX,CARf;MASJE,mBATI;MAUJC,gBAVI;MAWJC,gBAXI;MAYJC;IAZI,IAcFb,KAdJ;IAaKc,IAbL,GAAAC,6BAAA,CAcIf,KAdJ;EAgBA,IAAMgB,kBAAkB,mBAAiBf,IAAjB,2BAAxB;EACA,IAAMgB,eAAe,mBAAiBhB,IAAjB,uCAArB;EACA,IAAMiB,eAAe,mBAAiBjB,IAAjB,wBAArB;EACA,IAAMkB,QAAQ,mBAAiBlB,IAAjB,mBAAd;EACA,IAAMmB,KAAK,mBAAiBnB,IAAjB,gBAAX;EACA,IAAMoB,KAAK,mBAAiBpB,IAAjB,6CAAX;EACA,IAAMqB,OAAO,mBAAiBrB,IAAjB,kCAAkDA,IAAlD,8BAAb;EACA,IAAMsB,OAAO,mBAAiBtB,IAAjB,6BAAb;EACA,IAAMuB,KAAK,UAAX;EAEA,oBACE1B,KAAA,CAAA2B,aAAA,CAAC7B,MAAD,CAAQ8B,GAAR,EAAAC,QAAA,KACMb,IADN;IAEE,mBAFF;IAGEc,KAAK,EAAE;MACLC,OAAO,EAAE,aADJ;MAELC,UAAU,EAAE,QAFP;MAGLC,cAAc,EAAE,QAHX;MAILC,UAAU,EAAE,WAJP;MAKLC,UAAU,EAAE,CALP;MAML,CAACb,KAAD,GAASf,MANJ;MAOL,CAACgB,KAAD,GAASnB,MAPJ;MAQL,CAACiB,QAAD,GAAYf,SARP;MASL,CAACmB,OAAD,GAAWpB,QATN;MAUL,CAACa,kBAAD,GAAsBN,mBAVjB;MAWL,CAACQ,eAAD,GAAmBP,gBAXd;MAYL,CAACM,eAAD,GAAmBL,gBAZd;MAaL,CAACY,KAAD,GAASjB,MAbJ;MAcL,CAACe,OAAD,GAAAK,QAAA,KACKrB,QADL;QAEE,CAACkB,KAAD,GAASf;MAFX;IAdK;EAHT,IAuBGI,QAvBH,CADF;AA2BD,CAtDM;AAwDP,IAAIhB,OAAJ,EAAa;EACXE,UAAU,CAACmC,WAAX,GAAyB,YAAzB;AACD;AAED,eAAenC,UAAf"},"metadata":{},"sourceType":"module"}