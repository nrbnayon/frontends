{"ast":null,"code":"import { isDark, mode, randomColor } from \"@chakra-ui/theme-tools\";\nimport themeSizes from \"../foundations/sizes\";\nvar parts = [\"container\", \"excessLabel\", \"badge\", \"label\"];\nfunction baseStyleBadge(props) {\n  return {\n    transform: \"translate(25%, 25%)\",\n    borderRadius: \"full\",\n    border: \"0.2em solid\",\n    borderColor: mode(\"white\", \"gray.800\")(props)\n  };\n}\nfunction baseStyleExcessLabel(props) {\n  return {\n    bg: mode(\"gray.200\", \"whiteAlpha.400\")(props)\n  };\n}\nfunction baseStyleContainer(props) {\n  var {\n    name,\n    theme\n  } = props;\n  var bg = name ? randomColor({\n    string: name\n  }) : \"gray.400\";\n  var isBgDark = isDark(bg)(theme);\n  var color = \"white\";\n  if (!isBgDark) color = \"gray.800\";\n  var borderColor = mode(\"white\", \"gray.800\")(props);\n  return {\n    bg,\n    color,\n    borderColor,\n    verticalAlign: \"top\"\n  };\n}\nvar baseStyle = props => ({\n  badge: baseStyleBadge(props),\n  excessLabel: baseStyleExcessLabel(props),\n  container: baseStyleContainer(props)\n});\nfunction getSize(size) {\n  var themeSize = themeSizes[size];\n  return {\n    container: {\n      width: size,\n      height: size,\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\"\n    },\n    excessLabel: {\n      width: size,\n      height: size\n    },\n    label: {\n      fontSize: \"calc(\" + (themeSize != null ? themeSize : size) + \" / 2.5)\",\n      lineHeight: size !== \"100%\" ? themeSize != null ? themeSize : size : undefined\n    }\n  };\n}\nvar sizes = {\n  \"2xs\": getSize(\"4\"),\n  xs: getSize(\"6\"),\n  sm: getSize(\"8\"),\n  md: getSize(\"12\"),\n  lg: getSize(\"16\"),\n  xl: getSize(\"24\"),\n  \"2xl\": getSize(\"32\"),\n  full: getSize(\"100%\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"names":["isDark","mode","randomColor","themeSizes","parts","baseStyleBadge","props","transform","borderRadius","border","borderColor","baseStyleExcessLabel","bg","baseStyleContainer","name","theme","string","isBgDark","color","verticalAlign","baseStyle","badge","excessLabel","container","getSize","size","themeSize","width","height","fontSize","label","lineHeight","undefined","sizes","xs","sm","md","lg","xl","full","defaultProps"],"sources":["../../../src/components/avatar.ts"],"sourcesContent":["import { isDark, mode, randomColor } from \"@chakra-ui/theme-tools\"\nimport themeSizes from \"../foundations/sizes\"\n\nconst parts = [\"container\", \"excessLabel\", \"badge\", \"label\"]\n\nfunction baseStyleBadge(props: Record<string, any>) {\n  return {\n    transform: \"translate(25%, 25%)\",\n    borderRadius: \"full\",\n    border: \"0.2em solid\",\n    borderColor: mode(\"white\", \"gray.800\")(props),\n  }\n}\n\nfunction baseStyleExcessLabel(props: Record<string, any>) {\n  return {\n    bg: mode(\"gray.200\", \"whiteAlpha.400\")(props),\n  }\n}\n\nfunction baseStyleContainer(props: Record<string, any>) {\n  const { name, theme } = props\n  const bg = name ? randomColor({ string: name }) : \"gray.400\"\n  const isBgDark = isDark(bg)(theme)\n\n  let color = \"white\"\n  if (!isBgDark) color = \"gray.800\"\n\n  const borderColor = mode(\"white\", \"gray.800\")(props)\n\n  return {\n    bg,\n    color,\n    borderColor,\n    verticalAlign: \"top\",\n  }\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  badge: baseStyleBadge(props),\n  excessLabel: baseStyleExcessLabel(props),\n  container: baseStyleContainer(props),\n})\n\nfunction getSize(size: string) {\n  const themeSize = themeSizes[size]\n  return {\n    container: {\n      width: size,\n      height: size,\n      fontSize: `calc(${themeSize ?? size} / 2.5)`,\n    },\n    excessLabel: {\n      width: size,\n      height: size,\n    },\n    label: {\n      fontSize: `calc(${themeSize ?? size} / 2.5)`,\n      lineHeight: size !== \"100%\" ? themeSize ?? size : undefined,\n    },\n  }\n}\n\nconst sizes = {\n  \"2xs\": getSize(\"4\"),\n  xs: getSize(\"6\"),\n  sm: getSize(\"8\"),\n  md: getSize(\"12\"),\n  lg: getSize(\"16\"),\n  xl: getSize(\"24\"),\n  \"2xl\": getSize(\"32\"),\n  full: getSize(\"100%\"),\n}\n\nconst defaultProps = {\n  size: \"md\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,QAA0C,wBAA1C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,IAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,aAAd,EAA6B,OAA7B,EAAsC,OAAtC,CAAd;AAEA,SAASC,cAATA,CAAwBC,KAAxB,EAAoD;EAClD,OAAO;IACLC,SAAS,EAAE,qBADN;IAELC,YAAY,EAAE,MAFT;IAGLC,MAAM,EAAE,aAHH;IAILC,WAAW,EAAET,IAAI,CAAC,OAAD,EAAU,UAAV,CAAJ,CAA0BK,KAA1B;EAJR,CAAP;AAMD;AAED,SAASK,oBAATA,CAA8BL,KAA9B,EAA0D;EACxD,OAAO;IACLM,EAAE,EAAEX,IAAI,CAAC,UAAD,EAAa,gBAAb,CAAJ,CAAmCK,KAAnC;EADC,CAAP;AAGD;AAED,SAASO,kBAATA,CAA4BP,KAA5B,EAAwD;EACtD,IAAM;IAAEQ,IAAF;IAAQC;EAAR,IAAkBT,KAAxB;EACA,IAAMM,EAAE,GAAGE,IAAI,GAAGZ,WAAW,CAAC;IAAEc,MAAM,EAAEF;EAAV,CAAD,CAAd,GAAmC,UAAlD;EACA,IAAMG,QAAQ,GAAGjB,MAAM,CAACY,EAAD,CAAN,CAAWG,KAAX,CAAjB;EAEA,IAAIG,KAAK,GAAG,OAAZ;EACA,IAAI,CAACD,QAAL,EAAeC,KAAK,GAAG,UAAR;EAEf,IAAMR,WAAW,GAAGT,IAAI,CAAC,OAAD,EAAU,UAAV,CAAJ,CAA0BK,KAA1B,CAApB;EAEA,OAAO;IACLM,EADK;IAELM,KAFK;IAGLR,WAHK;IAILS,aAAa,EAAE;EAJV,CAAP;AAMD;AAED,IAAMC,SAAS,GAAId,KAAD,KAAiC;EACjDe,KAAK,EAAEhB,cAAc,CAACC,KAAD,CAD4B;EAEjDgB,WAAW,EAAEX,oBAAoB,CAACL,KAAD,CAFgB;EAGjDiB,SAAS,EAAEV,kBAAkB,CAACP,KAAD;AAHoB,CAAjC,CAAlB;AAMA,SAASkB,OAATA,CAAiBC,IAAjB,EAA+B;EAC7B,IAAMC,SAAS,GAAGvB,UAAU,CAACsB,IAAD,CAA5B;EACA,OAAO;IACLF,SAAS,EAAE;MACTI,KAAK,EAAEF,IADE;MAETG,MAAM,EAAEH,IAFC;MAGTI,QAAQ,aAAUH,SAAV,WAAUA,SAAV,GAAuBD,IAAvB;IAHC,CADN;IAMLH,WAAW,EAAE;MACXK,KAAK,EAAEF,IADI;MAEXG,MAAM,EAAEH;IAFG,CANR;IAULK,KAAK,EAAE;MACLD,QAAQ,aAAUH,SAAV,WAAUA,SAAV,GAAuBD,IAAvB,aADH;MAELM,UAAU,EAAEN,IAAI,KAAK,MAAT,GAAkBC,SAAlB,WAAkBA,SAAlB,GAA+BD,IAA/B,GAAsCO;IAF7C;EAVF,CAAP;AAeD;AAED,IAAMC,KAAK,GAAG;EACZ,OAAOT,OAAO,CAAC,GAAD,CADF;EAEZU,EAAE,EAAEV,OAAO,CAAC,GAAD,CAFC;EAGZW,EAAE,EAAEX,OAAO,CAAC,GAAD,CAHC;EAIZY,EAAE,EAAEZ,OAAO,CAAC,IAAD,CAJC;EAKZa,EAAE,EAAEb,OAAO,CAAC,IAAD,CALC;EAMZc,EAAE,EAAEd,OAAO,CAAC,IAAD,CANC;EAOZ,OAAOA,OAAO,CAAC,IAAD,CAPF;EAQZe,IAAI,EAAEf,OAAO,CAAC,MAAD;AARD,CAAd;AAWA,IAAMgB,YAAY,GAAG;EACnBf,IAAI,EAAE;AADa,CAArB;AAIA,eAAe;EACbrB,KADa;EAEbgB,SAFa;EAGba,KAHa;EAIbO;AAJa,CAAf"},"metadata":{},"sourceType":"module"}