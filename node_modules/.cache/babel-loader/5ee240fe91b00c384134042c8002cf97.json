{"ast":null,"code":"var _Input$baseStyle;\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport Input from \"./input\";\nimport typography from \"../foundations/typography\";\nvar parts = [\"root\", \"field\", \"stepper\", \"stepperGroup\"];\nvar {\n  variants,\n  defaultProps\n} = Input;\nvar baseStyleRoot = {\n  \"--number-input-stepper-width\": \"24px\",\n  \"--number-input-field-padding\": \"calc(var(--number-input-stepper-width) + 0.5rem)\"\n};\nvar baseStyleField = (_Input$baseStyle = Input.baseStyle) == null ? void 0 : _Input$baseStyle.field;\nvar baseStyleStepperGroup = {\n  width: \"var(--number-input-stepper-width)\"\n};\nfunction baseStyleStepper(props) {\n  return {\n    borderStart: \"1px solid\",\n    borderStartColor: mode(\"inherit\", \"whiteAlpha.300\")(props),\n    color: mode(\"inherit\", \"whiteAlpha.800\")(props),\n    _active: {\n      bg: mode(\"gray.200\", \"whiteAlpha.300\")(props)\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\"\n    }\n  };\n}\nvar baseStyle = props => ({\n  root: baseStyleRoot,\n  field: baseStyleField,\n  stepperGroup: baseStyleStepperGroup,\n  stepper: baseStyleStepper(props)\n});\nfunction getSize(size) {\n  var sizeStyle = Input.sizes[size];\n  var radius = {\n    lg: \"md\",\n    md: \"md\",\n    sm: \"sm\",\n    xs: \"sm\"\n  };\n  var resolvedFontSize = typography.fontSizes[sizeStyle.field.fontSize];\n  return {\n    field: _extends({}, sizeStyle.field, {\n      paddingInlineEnd: \"var(--number-input-field-padding)\",\n      verticalAlign: \"top\"\n    }),\n    stepper: {\n      fontSize: \"calc(\" + resolvedFontSize + \" * 0.75)\",\n      _first: {\n        borderTopEndRadius: radius[size]\n      },\n      _last: {\n        borderBottomEndRadius: radius[size],\n        mt: \"-1px\",\n        borderTopWidth: 1\n      }\n    }\n  };\n}\nvar sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\")\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  variants,\n  defaultProps\n};","map":{"version":3,"names":["mode","Input","typography","parts","variants","defaultProps","baseStyleRoot","baseStyleField","_Input$baseStyle","baseStyle","field","baseStyleStepperGroup","width","baseStyleStepper","props","borderStart","borderStartColor","color","_active","bg","_disabled","opacity","cursor","root","stepperGroup","stepper","getSize","size","sizeStyle","sizes","radius","lg","md","sm","xs","resolvedFontSize","fontSizes","fontSize","_extends","paddingInlineEnd","verticalAlign","_first","borderTopEndRadius","_last","borderBottomEndRadius","mt","borderTopWidth"],"sources":["../../../src/components/number-input.ts"],"sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\nimport Input from \"./input\"\nimport typography from \"../foundations/typography\"\n\nconst parts = [\"root\", \"field\", \"stepper\", \"stepperGroup\"]\n\nconst { variants, defaultProps } = Input\n\nconst baseStyleRoot = {\n  \"--number-input-stepper-width\": \"24px\",\n  \"--number-input-field-padding\":\n    \"calc(var(--number-input-stepper-width) + 0.5rem)\",\n}\n\nconst baseStyleField = Input.baseStyle?.field\n\nconst baseStyleStepperGroup = {\n  width: \"var(--number-input-stepper-width)\",\n}\n\nfunction baseStyleStepper(props: Record<string, any>) {\n  return {\n    borderStart: \"1px solid\",\n    borderStartColor: mode(\"inherit\", \"whiteAlpha.300\")(props),\n    color: mode(\"inherit\", \"whiteAlpha.800\")(props),\n    _active: {\n      bg: mode(\"gray.200\", \"whiteAlpha.300\")(props),\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n  }\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  root: baseStyleRoot,\n  field: baseStyleField,\n  stepperGroup: baseStyleStepperGroup,\n  stepper: baseStyleStepper(props),\n})\n\nfunction getSize(size: \"xs\" | \"sm\" | \"md\" | \"lg\") {\n  const sizeStyle = Input.sizes[size]\n\n  const radius = {\n    lg: \"md\",\n    md: \"md\",\n    sm: \"sm\",\n    xs: \"sm\",\n  }\n\n  const resolvedFontSize = typography.fontSizes[sizeStyle.field.fontSize]\n\n  return {\n    field: {\n      ...sizeStyle.field,\n      paddingInlineEnd: \"var(--number-input-field-padding)\",\n      verticalAlign: \"top\",\n    },\n    stepper: {\n      fontSize: `calc(${resolvedFontSize} * 0.75)`,\n      _first: {\n        borderTopEndRadius: radius[size],\n      },\n      _last: {\n        borderBottomEndRadius: radius[size],\n        mt: \"-1px\",\n        borderTopWidth: 1,\n      },\n    },\n  }\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  variants,\n  defaultProps,\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,IAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,cAA7B,CAAd;AAEA,IAAM;EAAEC,QAAF;EAAYC;AAAZ,IAA6BJ,KAAnC;AAEA,IAAMK,aAAa,GAAG;EACpB,gCAAgC,MADZ;EAEpB,gCACE;AAHkB,CAAtB;AAMA,IAAMC,cAAc,IAAAC,gBAAA,GAAGP,KAAK,CAACQ,SAAT,qBAAGD,gBAAA,CAAiBE,KAAxC;AAEA,IAAMC,qBAAqB,GAAG;EAC5BC,KAAK,EAAE;AADqB,CAA9B;AAIA,SAASC,gBAATA,CAA0BC,KAA1B,EAAsD;EACpD,OAAO;IACLC,WAAW,EAAE,WADR;IAELC,gBAAgB,EAAEhB,IAAI,CAAC,SAAD,EAAY,gBAAZ,CAAJ,CAAkCc,KAAlC,CAFb;IAGLG,KAAK,EAAEjB,IAAI,CAAC,SAAD,EAAY,gBAAZ,CAAJ,CAAkCc,KAAlC,CAHF;IAILI,OAAO,EAAE;MACPC,EAAE,EAAEnB,IAAI,CAAC,UAAD,EAAa,gBAAb,CAAJ,CAAmCc,KAAnC;IADG,CAJJ;IAOLM,SAAS,EAAE;MACTC,OAAO,EAAE,GADA;MAETC,MAAM,EAAE;IAFC;EAPN,CAAP;AAYD;AAED,IAAMb,SAAS,GAAIK,KAAD,KAAiC;EACjDS,IAAI,EAAEjB,aAD2C;EAEjDI,KAAK,EAAEH,cAF0C;EAGjDiB,YAAY,EAAEb,qBAHmC;EAIjDc,OAAO,EAAEZ,gBAAgB,CAACC,KAAD;AAJwB,CAAjC,CAAlB;AAOA,SAASY,OAATA,CAAiBC,IAAjB,EAAkD;EAChD,IAAMC,SAAS,GAAG3B,KAAK,CAAC4B,KAAN,CAAYF,IAAZ,CAAlB;EAEA,IAAMG,MAAM,GAAG;IACbC,EAAE,EAAE,IADS;IAEbC,EAAE,EAAE,IAFS;IAGbC,EAAE,EAAE,IAHS;IAIbC,EAAE,EAAE;EAJS,CAAf;EAOA,IAAMC,gBAAgB,GAAGjC,UAAU,CAACkC,SAAX,CAAqBR,SAAS,CAAClB,KAAV,CAAgB2B,QAArC,CAAzB;EAEA,OAAO;IACL3B,KAAK,EAAA4B,QAAA,KACAV,SAAS,CAAClB,KADV;MAEH6B,gBAAgB,EAAE,mCAFf;MAGHC,aAAa,EAAE;IAHZ,EADA;IAMLf,OAAO,EAAE;MACPY,QAAQ,YAAUF,gBAAV,aADD;MAEPM,MAAM,EAAE;QACNC,kBAAkB,EAAEZ,MAAM,CAACH,IAAD;MADpB,CAFD;MAKPgB,KAAK,EAAE;QACLC,qBAAqB,EAAEd,MAAM,CAACH,IAAD,CADxB;QAELkB,EAAE,EAAE,MAFC;QAGLC,cAAc,EAAE;MAHX;IALA;EANJ,CAAP;AAkBD;AAED,IAAMjB,KAAK,GAAG;EACZK,EAAE,EAAER,OAAO,CAAC,IAAD,CADC;EAEZO,EAAE,EAAEP,OAAO,CAAC,IAAD,CAFC;EAGZM,EAAE,EAAEN,OAAO,CAAC,IAAD,CAHC;EAIZK,EAAE,EAAEL,OAAO,CAAC,IAAD;AAJC,CAAd;AAOA,eAAe;EACbvB,KADa;EAEbM,SAFa;EAGboB,KAHa;EAIbzB,QAJa;EAKbC;AALa,CAAf"},"metadata":{},"sourceType":"module"}