{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { sortNodes, isElement, getNextIndex, getPrevIndex } from \"./utils\";\n\n/**\r\n * @internal\r\n *\r\n * Class to manage descendants and their relative indices in the DOM.\r\n * It uses `node.compareDocumentPosition(...)` under the hood\r\n */\nexport class DescendantsManager {\n  constructor() {\n    var _this = this;\n    _defineProperty(this, \"descendants\", new Map());\n    _defineProperty(this, \"register\", nodeOrOptions => {\n      if (nodeOrOptions == null) return;\n      if (isElement(nodeOrOptions)) {\n        return this.registerNode(nodeOrOptions);\n      }\n      return node => {\n        this.registerNode(node, nodeOrOptions);\n      };\n    });\n    _defineProperty(this, \"unregister\", node => {\n      this.descendants.delete(node);\n      var sorted = sortNodes(Array.from(this.descendants.keys()));\n      this.assignIndex(sorted);\n    });\n    _defineProperty(this, \"destroy\", () => {\n      this.descendants.clear();\n    });\n    _defineProperty(this, \"assignIndex\", descendants => {\n      this.descendants.forEach(descendant => {\n        var index = descendants.indexOf(descendant.node);\n        descendant.index = index;\n        descendant.node.dataset.index = descendant.index.toString();\n      });\n    });\n    _defineProperty(this, \"count\", () => this.descendants.size);\n    _defineProperty(this, \"enabledCount\", () => this.enabledValues().length);\n    _defineProperty(this, \"values\", () => {\n      var values = Array.from(this.descendants.values());\n      return values.sort((a, b) => a.index - b.index);\n    });\n    _defineProperty(this, \"enabledValues\", () => {\n      return this.values().filter(descendant => !descendant.disabled);\n    });\n    _defineProperty(this, \"item\", index => {\n      if (this.count() === 0) return undefined;\n      return this.values()[index];\n    });\n    _defineProperty(this, \"enabledItem\", index => {\n      if (this.enabledCount() === 0) return undefined;\n      return this.enabledValues()[index];\n    });\n    _defineProperty(this, \"first\", () => this.item(0));\n    _defineProperty(this, \"firstEnabled\", () => this.enabledItem(0));\n    _defineProperty(this, \"last\", () => this.item(this.descendants.size - 1));\n    _defineProperty(this, \"lastEnabled\", () => {\n      var lastIndex = this.enabledValues().length - 1;\n      return this.enabledItem(lastIndex);\n    });\n    _defineProperty(this, \"indexOf\", node => {\n      var _this$descendants$get, _this$descendants$get2;\n      if (!node) return -1;\n      return (_this$descendants$get = (_this$descendants$get2 = this.descendants.get(node)) == null ? void 0 : _this$descendants$get2.index) != null ? _this$descendants$get : -1;\n    });\n    _defineProperty(this, \"enabledIndexOf\", node => {\n      if (node == null) return -1;\n      return this.enabledValues().findIndex(i => i.node.isSameNode(node));\n    });\n    _defineProperty(this, \"next\", function (index, loop) {\n      if (loop === void 0) {\n        loop = true;\n      }\n      var next = getNextIndex(index, _this.count(), loop);\n      return _this.item(next);\n    });\n    _defineProperty(this, \"nextEnabled\", function (index, loop) {\n      if (loop === void 0) {\n        loop = true;\n      }\n      var item = _this.item(index);\n      if (!item) return;\n      var enabledIndex = _this.enabledIndexOf(item.node);\n      var nextEnabledIndex = getNextIndex(enabledIndex, _this.enabledCount(), loop);\n      return _this.enabledItem(nextEnabledIndex);\n    });\n    _defineProperty(this, \"prev\", function (index, loop) {\n      if (loop === void 0) {\n        loop = true;\n      }\n      var prev = getPrevIndex(index, _this.count() - 1, loop);\n      return _this.item(prev);\n    });\n    _defineProperty(this, \"prevEnabled\", function (index, loop) {\n      if (loop === void 0) {\n        loop = true;\n      }\n      var item = _this.item(index);\n      if (!item) return;\n      var enabledIndex = _this.enabledIndexOf(item.node);\n      var prevEnabledIndex = getPrevIndex(enabledIndex, _this.enabledCount() - 1, loop);\n      return _this.enabledItem(prevEnabledIndex);\n    });\n    _defineProperty(this, \"registerNode\", (node, options) => {\n      if (!node || this.descendants.has(node)) return;\n      var keys = Array.from(this.descendants.keys()).concat(node);\n      var sorted = sortNodes(keys);\n      if (options != null && options.disabled) {\n        options.disabled = !!options.disabled;\n      }\n      var descendant = _extends({\n        node,\n        index: -1\n      }, options);\n      this.descendants.set(node, descendant);\n      this.assignIndex(sorted);\n    });\n  }\n}","map":{"version":3,"names":["sortNodes","isElement","getNextIndex","getPrevIndex","DescendantsManager","constructor","_this","_defineProperty","Map","nodeOrOptions","registerNode","node","descendants","delete","sorted","Array","from","keys","assignIndex","clear","forEach","descendant","index","indexOf","dataset","toString","size","enabledValues","length","values","sort","a","b","filter","disabled","count","undefined","enabledCount","item","enabledItem","lastIndex","_this$descendants$get","_this$descendants$get2","get","findIndex","i","isSameNode","loop","next","enabledIndex","enabledIndexOf","nextEnabledIndex","prev","prevEnabledIndex","options","has","concat","_extends","set"],"sources":["../../src/descendant.ts"],"sourcesContent":["import { sortNodes, isElement, getNextIndex, getPrevIndex } from \"./utils\"\n\nexport type DescendantOptions<T = {}> = T & {\n  /**\n   * If `true`, the item will be registered in all nodes map\n   * but omitted from enabled nodes map\n   */\n  disabled?: boolean\n  /**\n   * The id of the item\n   */\n  id?: string\n}\n\nexport type Descendant<T, K> = DescendantOptions<K> & {\n  /**\n   * DOM element of the item\n   */\n  node: T\n  /**\n   * index of item in all nodes map and enabled nodes map\n   */\n  index: number\n}\n\n/**\n * @internal\n *\n * Class to manage descendants and their relative indices in the DOM.\n * It uses `node.compareDocumentPosition(...)` under the hood\n */\nexport class DescendantsManager<\n  T extends HTMLElement,\n  K extends Record<string, any> = {}\n> {\n  private descendants = new Map<T, Descendant<T, K>>()\n\n  register = (nodeOrOptions: T | null | DescendantOptions<K>) => {\n    if (nodeOrOptions == null) return\n\n    if (isElement(nodeOrOptions)) {\n      return this.registerNode(nodeOrOptions)\n    }\n\n    return (node: T | null) => {\n      this.registerNode(node, nodeOrOptions)\n    }\n  }\n\n  unregister = (node: T) => {\n    this.descendants.delete(node)\n    const sorted = sortNodes(Array.from(this.descendants.keys()))\n    this.assignIndex(sorted)\n  }\n\n  destroy = () => {\n    this.descendants.clear()\n  }\n\n  private assignIndex = (descendants: Node[]) => {\n    this.descendants.forEach((descendant) => {\n      const index = descendants.indexOf(descendant.node)\n      descendant.index = index\n      descendant.node.dataset.index = descendant.index.toString()\n    })\n  }\n\n  count = () => this.descendants.size\n\n  enabledCount = () => this.enabledValues().length\n\n  values = () => {\n    const values = Array.from(this.descendants.values())\n    return values.sort((a, b) => a.index - b.index)\n  }\n\n  enabledValues = () => {\n    return this.values().filter((descendant) => !descendant.disabled)\n  }\n\n  item = (index: number) => {\n    if (this.count() === 0) return undefined\n    return this.values()[index]\n  }\n\n  enabledItem = (index: number) => {\n    if (this.enabledCount() === 0) return undefined\n    return this.enabledValues()[index]\n  }\n\n  first = () => this.item(0)\n\n  firstEnabled = () => this.enabledItem(0)\n\n  last = () => this.item(this.descendants.size - 1)\n\n  lastEnabled = () => {\n    const lastIndex = this.enabledValues().length - 1\n    return this.enabledItem(lastIndex)\n  }\n\n  indexOf = (node: T | null) => {\n    if (!node) return -1\n    return this.descendants.get(node)?.index ?? -1\n  }\n\n  enabledIndexOf = (node: T | null) => {\n    if (node == null) return -1\n    return this.enabledValues().findIndex((i) => i.node.isSameNode(node))\n  }\n\n  next = (index: number, loop = true) => {\n    const next = getNextIndex(index, this.count(), loop)\n    return this.item(next)\n  }\n\n  nextEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const nextEnabledIndex = getNextIndex(\n      enabledIndex,\n      this.enabledCount(),\n      loop,\n    )\n    return this.enabledItem(nextEnabledIndex)\n  }\n\n  prev = (index: number, loop = true) => {\n    const prev = getPrevIndex(index, this.count() - 1, loop)\n    return this.item(prev)\n  }\n\n  prevEnabled = (index: number, loop = true) => {\n    const item = this.item(index)\n    if (!item) return\n    const enabledIndex = this.enabledIndexOf(item.node)\n    const prevEnabledIndex = getPrevIndex(\n      enabledIndex,\n      this.enabledCount() - 1,\n      loop,\n    )\n    return this.enabledItem(prevEnabledIndex)\n  }\n\n  private registerNode = (node: T | null, options?: DescendantOptions<K>) => {\n    if (!node || this.descendants.has(node)) return\n\n    const keys = Array.from(this.descendants.keys()).concat(node)\n    const sorted = sortNodes(keys)\n\n    if (options?.disabled) {\n      options.disabled = !!options.disabled\n    }\n\n    const descendant = { node, index: -1, ...options }\n\n    this.descendants.set(node, descendant as Descendant<T, K>)\n\n    this.assignIndex(sorted)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}