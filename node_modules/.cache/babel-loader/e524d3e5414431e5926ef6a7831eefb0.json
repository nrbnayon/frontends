{"ast":null,"code":"import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.js';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\nimport { getBoundingBox } from '../dom/projection/measure.js';\nimport { buildHTMLStyles } from './utils/build-styles.js';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\nimport { isTransformProp } from './utils/transform.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { renderHTML } from './utils/render.js';\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\nfunction getComputedStyle(element) {\n  return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n  treeType: \"dom\",\n  readValueFromInstance: function (domElement, key) {\n    if (isTransformProp(key)) {\n      var defaultType = getDefaultValueType(key);\n      return defaultType ? defaultType.default || 0 : 0;\n    } else {\n      var computedStyle = getComputedStyle(domElement);\n      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;\n    }\n  },\n  sortNodePosition: function (a, b) {\n    /**\r\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n     * to true if b preceeds a.\r\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  },\n  getBaseTarget: function (props, key) {\n    var _a;\n    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n  },\n  measureViewportBox: function (element, _a) {\n    var transformPagePoint = _a.transformPagePoint;\n    return getBoundingBox(element, transformPagePoint);\n  },\n  /**\r\n   * Reset the transform on the current Element. This is called as part\r\n   * of a batched process across the entire layout tree. To remove this write\r\n   * cycle it'd be interesting to see if it's possible to \"undo\" all the current\r\n   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\r\n   * works\r\n   */\n  resetTransform: function (element, domElement, props) {\n    var transformTemplate = props.transformTemplate;\n    domElement.style.transform = transformTemplate ? transformTemplate({}, \"\") : \"none\";\n    // Ensure that whatever happens next, we restore our transform on the next frame\n    element.scheduleRender();\n  },\n  restoreTransform: function (instance, mutableState) {\n    instance.style.transform = mutableState.style.transform;\n  },\n  removeValueFromRenderState: function (key, _a) {\n    var vars = _a.vars,\n      style = _a.style;\n    delete vars[key];\n    delete style[key];\n  },\n  /**\r\n   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\r\n   * can be animated by Motion.\r\n   */\n  makeTargetAnimatable: function (element, _a, _b, isMounted) {\n    var transformValues = _b.transformValues;\n    if (isMounted === void 0) {\n      isMounted = true;\n    }\n    var transition = _a.transition,\n      transitionEnd = _a.transitionEnd,\n      target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n    var origin = getOrigin(target, transition || {}, element);\n    /**\r\n     * If Framer has provided a function to convert `Color` etc value types, convert them\r\n     */\n    if (transformValues) {\n      if (transitionEnd) transitionEnd = transformValues(transitionEnd);\n      if (target) target = transformValues(target);\n      if (origin) origin = transformValues(origin);\n    }\n    if (isMounted) {\n      checkTargetForNewValues(element, target, origin);\n      var parsed = parseDomVariant(element, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n    return __assign({\n      transition: transition,\n      transitionEnd: transitionEnd\n    }, target);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (element, renderState, latestValues, projection, layoutState, options, props) {\n    if (element.isVisible !== undefined) {\n      renderState.style.visibility = element.isVisible ? \"visible\" : \"hidden\";\n    }\n    var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\n    buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform ? buildLayoutProjectionTransformOrigin : undefined);\n  },\n  render: renderHTML\n};\nvar htmlVisualElement = visualElement(htmlConfig);\nexport { getComputedStyle, htmlConfig, htmlVisualElement };","map":{"version":3,"names":["__rest","__assign","visualElement","getOrigin","checkTargetForNewValues","getBoundingBox","buildHTMLStyles","isCSSVariable","parseDomVariant","isTransformProp","scrapeMotionValuesFromProps","renderHTML","getDefaultValueType","buildLayoutProjectionTransformOrigin","buildLayoutProjectionTransform","getComputedStyle","element","window","htmlConfig","treeType","readValueFromInstance","domElement","key","defaultType","default","computedStyle","getPropertyValue","sortNodePosition","a","b","compareDocumentPosition","getBaseTarget","props","_a","style","measureViewportBox","transformPagePoint","resetTransform","transformTemplate","transform","scheduleRender","restoreTransform","instance","mutableState","removeValueFromRenderState","vars","makeTargetAnimatable","_b","isMounted","transformValues","transition","transitionEnd","target","origin","parsed","build","renderState","latestValues","projection","layoutState","options","isVisible","undefined","visibility","isProjectionTranform","isEnabled","isHydrated","render","htmlVisualElement"],"sources":["E:/Hasan sir project/frontend/node_modules/framer-motion/dist/es/render/html/visual-element.js"],"sourcesContent":["import { __rest, __assign } from 'tslib';\r\nimport { visualElement } from '../index.js';\r\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.js';\r\nimport { getBoundingBox } from '../dom/projection/measure.js';\r\nimport { buildHTMLStyles } from './utils/build-styles.js';\r\nimport { isCSSVariable } from '../dom/utils/is-css-variable.js';\r\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.js';\r\nimport { isTransformProp } from './utils/transform.js';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\r\nimport { renderHTML } from './utils/render.js';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.js';\r\nimport { buildLayoutProjectionTransformOrigin, buildLayoutProjectionTransform } from './utils/build-projection-transform.js';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nvar htmlConfig = {\r\n    treeType: \"dom\",\r\n    readValueFromInstance: function (domElement, key) {\r\n        if (isTransformProp(key)) {\r\n            var defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        else {\r\n            var computedStyle = getComputedStyle(domElement);\r\n            return ((isCSSVariable(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0);\r\n        }\r\n    },\r\n    sortNodePosition: function (a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    },\r\n    getBaseTarget: function (props, key) {\r\n        var _a;\r\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\r\n    },\r\n    measureViewportBox: function (element, _a) {\r\n        var transformPagePoint = _a.transformPagePoint;\r\n        return getBoundingBox(element, transformPagePoint);\r\n    },\r\n    /**\r\n     * Reset the transform on the current Element. This is called as part\r\n     * of a batched process across the entire layout tree. To remove this write\r\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\r\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\r\n     * works\r\n     */\r\n    resetTransform: function (element, domElement, props) {\r\n        var transformTemplate = props.transformTemplate;\r\n        domElement.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        // Ensure that whatever happens next, we restore our transform on the next frame\r\n        element.scheduleRender();\r\n    },\r\n    restoreTransform: function (instance, mutableState) {\r\n        instance.style.transform = mutableState.style.transform;\r\n    },\r\n    removeValueFromRenderState: function (key, _a) {\r\n        var vars = _a.vars, style = _a.style;\r\n        delete vars[key];\r\n        delete style[key];\r\n    },\r\n    /**\r\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\r\n     * can be animated by Motion.\r\n     */\r\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\r\n        var transformValues = _b.transformValues;\r\n        if (isMounted === void 0) { isMounted = true; }\r\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\r\n        var origin = getOrigin(target, transition || {}, element);\r\n        /**\r\n         * If Framer has provided a function to convert `Color` etc value types, convert them\r\n         */\r\n        if (transformValues) {\r\n            if (transitionEnd)\r\n                transitionEnd = transformValues(transitionEnd);\r\n            if (target)\r\n                target = transformValues(target);\r\n            if (origin)\r\n                origin = transformValues(origin);\r\n        }\r\n        if (isMounted) {\r\n            checkTargetForNewValues(element, target, origin);\r\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\r\n            transitionEnd = parsed.transitionEnd;\r\n            target = parsed.target;\r\n        }\r\n        return __assign({ transition: transition,\r\n            transitionEnd: transitionEnd }, target);\r\n    },\r\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n    build: function (element, renderState, latestValues, projection, layoutState, options, props) {\r\n        if (element.isVisible !== undefined) {\r\n            renderState.style.visibility = element.isVisible\r\n                ? \"visible\"\r\n                : \"hidden\";\r\n        }\r\n        var isProjectionTranform = projection.isEnabled && layoutState.isHydrated;\r\n        buildHTMLStyles(renderState, latestValues, projection, layoutState, options, props.transformTemplate, isProjectionTranform ? buildLayoutProjectionTransform : undefined, isProjectionTranform\r\n            ? buildLayoutProjectionTransformOrigin\r\n            : undefined);\r\n    },\r\n    render: renderHTML,\r\n};\r\nvar htmlVisualElement = visualElement(htmlConfig);\r\n\r\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}