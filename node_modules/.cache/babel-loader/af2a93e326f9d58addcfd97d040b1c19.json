{"ast":null,"code":"import { motionValue } from '../value/index.js';\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\nimport { startAnimation } from './utils/transitions.js';\n\n/**\r\n * Animate a single value or a `MotionValue`.\r\n *\r\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\r\n *\r\n * The second is either a value to animate to, or an array of keyframes to animate through.\r\n *\r\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\r\n *\r\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n *\r\n * useEffect(() => {\r\n *   const controls = animate(x, 100, {\r\n *     type: \"spring\",\r\n *     stiffness: 2000,\r\n *     onComplete: v => {}\r\n *   })\r\n *\r\n *   return controls.stop\r\n * })\r\n * ```\r\n *\r\n * @public\r\n */\nfunction animate(from, to, transition) {\n  if (transition === void 0) {\n    transition = {};\n  }\n  var value = isMotionValue(from) ? from : motionValue(from);\n  startAnimation(\"\", value, to, transition);\n  return {\n    stop: function () {\n      return value.stop();\n    }\n  };\n}\nexport { animate };","map":{"version":3,"names":["motionValue","isMotionValue","startAnimation","animate","from","to","transition","value","stop"],"sources":["E:/Hasan sir project/4/frontend/node_modules/framer-motion/dist/es/animation/animate.js"],"sourcesContent":["import { motionValue } from '../value/index.js';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.js';\r\nimport { startAnimation } from './utils/transitions.js';\r\n\r\n/**\r\n * Animate a single value or a `MotionValue`.\r\n *\r\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\r\n *\r\n * The second is either a value to animate to, or an array of keyframes to animate through.\r\n *\r\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\r\n *\r\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\r\n *\r\n * ```javascript\r\n * const x = useMotionValue(0)\r\n *\r\n * useEffect(() => {\r\n *   const controls = animate(x, 100, {\r\n *     type: \"spring\",\r\n *     stiffness: 2000,\r\n *     onComplete: v => {}\r\n *   })\r\n *\r\n *   return controls.stop\r\n * })\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction animate(from, to, transition) {\r\n    if (transition === void 0) { transition = {}; }\r\n    var value = isMotionValue(from) ? from : motionValue(from);\r\n    startAnimation(\"\", value, to, transition);\r\n    return {\r\n        stop: function () { return value.stop(); },\r\n    };\r\n}\r\n\r\nexport { animate };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,cAAc,QAAQ,wBAAwB;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,IAAI,EAAEC,EAAE,EAAEC,UAAU,EAAE;EACnC,IAAIA,UAAU,KAAK,KAAK,CAAC,EAAE;IAAEA,UAAU,GAAG,CAAC,CAAC;EAAE;EAC9C,IAAIC,KAAK,GAAGN,aAAa,CAACG,IAAI,CAAC,GAAGA,IAAI,GAAGJ,WAAW,CAACI,IAAI,CAAC;EAC1DF,cAAc,CAAC,EAAE,EAAEK,KAAK,EAAEF,EAAE,EAAEC,UAAU,CAAC;EACzC,OAAO;IACHE,IAAI,EAAE,SAAAA,CAAA,EAAY;MAAE,OAAOD,KAAK,CAACC,IAAI,CAAC,CAAC;IAAE;EAC7C,CAAC;AACL;AAEA,SAASL,OAAO"},"metadata":{},"sourceType":"module"}