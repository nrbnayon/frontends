{"ast":null,"code":"import { t } from \"../utils\";\nexport var border = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\"\n    }\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\"\n    }\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\"\n    }\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\"\n    }\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\"\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"]\n    }\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]\n    }\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\"borderBottomLeftRadius\", \"borderBottomRightRadius\"]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\"borderTopRightRadius\", \"borderBottomRightRadius\"])\n};\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle\n});\n/**\r\n * The prop types for border properties listed above\r\n */","map":{"version":3,"names":["t","border","borders","borderWidth","borderWidths","borderStyle","borderStyles","borderColor","colors","borderRadius","radii","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","logical","scale","property","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","assign","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle"],"sources":["../../../src/config/border.ts"],"sourcesContent":["import * as CSS from \"csstype\"\nimport { Config } from \"../utils/prop-config\"\nimport { t, Token } from \"../utils\"\n\nexport const border: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    },\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    },\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    },\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    },\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    },\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    },\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(border, {\n  rounded: border.borderRadius,\n  roundedTop: border.borderTopRadius,\n  roundedTopLeft: border.borderTopLeftRadius,\n  roundedTopRight: border.borderTopRightRadius,\n  roundedTopStart: border.borderStartStartRadius,\n  roundedTopEnd: border.borderStartEndRadius,\n  roundedBottom: border.borderBottomRadius,\n  roundedBottomLeft: border.borderBottomLeftRadius,\n  roundedBottomRight: border.borderBottomRightRadius,\n  roundedBottomStart: border.borderEndStartRadius,\n  roundedBottomEnd: border.borderEndEndRadius,\n  roundedLeft: border.borderLeftRadius,\n  roundedRight: border.borderRightRadius,\n  roundedStart: border.borderInlineStartRadius,\n  roundedEnd: border.borderInlineEndRadius,\n  borderStart: border.borderInlineStart,\n  borderEnd: border.borderInlineEnd,\n  borderTopStartRadius: border.borderStartStartRadius,\n  borderTopEndRadius: border.borderStartEndRadius,\n  borderBottomStartRadius: border.borderEndStartRadius,\n  borderBottomEndRadius: border.borderEndEndRadius,\n  borderStartRadius: border.borderInlineStartRadius,\n  borderEndRadius: border.borderInlineEndRadius,\n  borderStartWidth: border.borderInlineStartWidth,\n  borderEndWidth: border.borderInlineEndWidth,\n  borderStartColor: border.borderInlineStartColor,\n  borderEndColor: border.borderInlineEndColor,\n  borderStartStyle: border.borderInlineStartStyle,\n  borderEndStyle: border.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: Token<CSS.Property.Border | number, \"borders\">\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: Token<CSS.Property.BorderWidth | number>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: Token<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: Token<CSS.Property.BorderTop | number, \"borders\">\n  borderBlockStart?: Token<CSS.Property.BorderBlockStart | number>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockStartWidth?: Token<CSS.Property.BorderBlockStartWidth | number>\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockEndWidth?: Token<CSS.Property.BorderBlockEndWidth | number>\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: Token<CSS.Property.BorderWidth | number>\n  borderStartWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineStartWidth?: Token<CSS.Property.BorderInlineStartWidth | number>\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: Token<CSS.Property.BorderWidth | number>\n  borderEndWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineEndWidth?: Token<CSS.Property.BorderInlineEndWidth | number>\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: Token<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: Token<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: Token<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: Token<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: Token<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: Token<CSS.Property.BorderRightStyle>\n  borderEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  borderBlockStartColor?: Token<CSS.Property.BorderBlockStartColor, \"colors\">\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: Token<CSS.Property.BorderBottomColor, \"colors\">\n  borderBlockEndColor?: Token<CSS.Property.BorderBlockEndColor, \"colors\">\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: Token<CSS.Property.BorderLeftColor, \"colors\">\n  borderStartColor?: Token<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: Token<CSS.Property.BorderInlineStartColor, \"colors\">\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: Token<CSS.Property.BorderRightColor, \"colors\">\n  borderEndColor?: Token<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: Token<CSS.Property.BorderInlineEndColor, \"colors\">\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: Token<CSS.Property.BorderRight | number, \"borders\">\n\n  borderEnd?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineEnd?: Token<CSS.Property.BorderInlineEnd | number>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: Token<CSS.Property.BorderBottom | number, \"borders\">\n\n  borderBlockEnd?: Token<CSS.Property.BorderBlockEnd | number>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: Token<CSS.Property.BorderLeft | number, \"borders\">\n  borderStart?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineStart?: Token<CSS.Property.BorderInlineStart | number>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartStartRadius?: Token<\n    CSS.Property.BorderStartStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartEndRadius?: Token<\n    CSS.Property.BorderStartEndRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndStartRadius?: Token<\n    CSS.Property.BorderEndStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndEndRadius?: Token<CSS.Property.BorderEndEndRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: Token<CSS.Property.Border | number, \"borders\">\n  borderInline?: Token<CSS.Property.BorderInline | number>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: Token<CSS.Property.Border | number, \"borders\">\n  borderBlock?: Token<CSS.Property.BorderBlock | number>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}