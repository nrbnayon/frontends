{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\nclass Toaster {\n  /**\r\n   * Initialize the manager and mount it in the DOM\r\n   * inside the portal node.\r\n   *\r\n   * @todo\r\n   *\r\n   * Update toast constructor to use `PortalManager`'s node or document.body.\r\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\r\n   */\n  constructor() {\n    var _this = this;\n    _defineProperty(this, \"createToast\", void 0);\n    _defineProperty(this, \"removeAll\", void 0);\n    _defineProperty(this, \"closeToast\", void 0);\n    _defineProperty(this, \"updateToast\", void 0);\n    _defineProperty(this, \"isToastActive\", void 0);\n    _defineProperty(this, \"bindFunctions\", methods => {\n      this.createToast = methods.notify;\n      this.removeAll = methods.closeAll;\n      this.closeToast = methods.close;\n      this.updateToast = methods.update;\n      this.isToastActive = methods.isActive;\n    });\n    _defineProperty(this, \"notify\", function (message, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _this.createToast == null ? void 0 : _this.createToast(message, options);\n    });\n    _defineProperty(this, \"close\", id => {\n      var _this$closeToast;\n      (_this$closeToast = this.closeToast) == null ? void 0 : _this$closeToast.call(this, id);\n    });\n    _defineProperty(this, \"closeAll\", options => {\n      var _this$removeAll;\n      (_this$removeAll = this.removeAll) == null ? void 0 : _this$removeAll.call(this, options);\n    });\n    _defineProperty(this, \"update\", function (id, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n    });\n    _defineProperty(this, \"isActive\", id => {\n      var _this$isToastActive;\n      return (_this$isToastActive = this.isToastActive) == null ? void 0 : _this$isToastActive.call(this, id);\n    });\n    if (!isBrowser) return;\n    var portal;\n    var existingPortal = document.getElementById(portalId);\n    if (existingPortal) {\n      portal = existingPortal;\n    } else {\n      var _document$body;\n      var div = document.createElement(\"div\");\n      div.id = portalId;\n      (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n      portal = div;\n    }\n    render( /*#__PURE__*/React.createElement(ToastManager, {\n      notify: this.bindFunctions\n    }), portal);\n  }\n}\nexport var toast = new Toaster();","map":{"version":3,"names":["isBrowser","React","render","ToastManager","portalId","Toaster","constructor","_this","_defineProperty","methods","createToast","notify","removeAll","closeAll","closeToast","close","updateToast","update","isToastActive","isActive","message","options","id","_this$closeToast","call","_this$removeAll","_this$isToastActive","portal","existingPortal","document","getElementById","_document$body","div","createElement","body","appendChild","bindFunctions","toast"],"sources":["../../src/toast.class.tsx"],"sourcesContent":["import { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { ToastMethods, ToastManager } from \"./toast-manager\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\n\nconst portalId = \"chakra-toast-portal\"\n\nclass Toaster {\n  private createToast?: ToastMethods[\"notify\"]\n  private removeAll?: ToastMethods[\"closeAll\"]\n  private closeToast?: ToastMethods[\"close\"]\n  private updateToast?: ToastMethods[\"update\"]\n  private isToastActive?: ToastMethods[\"isActive\"]\n\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    if (!isBrowser) return\n\n    let portal: HTMLElement\n    const existingPortal = document.getElementById(portalId)\n\n    if (existingPortal) {\n      portal = existingPortal\n    } else {\n      const div = document.createElement(\"div\")\n      div.id = portalId\n      document.body?.appendChild(div)\n      portal = div\n    }\n\n    render(<ToastManager notify={this.bindFunctions} />, portal)\n  }\n\n  private bindFunctions = (methods: ToastMethods) => {\n    this.createToast = methods.notify\n    this.removeAll = methods.closeAll\n    this.closeToast = methods.close\n    this.updateToast = methods.update\n    this.isToastActive = methods.isActive\n  }\n\n  notify = (message: ToastMessage, options: Partial<ToastOptions> = {}) =>\n    this.createToast?.(message, options)\n\n  close = (id: ToastId) => {\n    this.closeToast?.(id)\n  }\n\n  closeAll = (options?: CloseAllToastsOptions) => {\n    this.removeAll?.(options)\n  }\n\n  update = (id: ToastId, options: Partial<ToastOptions> = {}) => {\n    this.updateToast?.(id, options)\n  }\n\n  isActive = (id: ToastId) => this.isToastActive?.(id)\n}\n\nexport const toast = new Toaster()\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAuBC,YAAvB,QAA2C,iBAA3C;AAQA,IAAMC,QAAQ,GAAG,qBAAjB;AAEA,MAAMC,OAAN,CAAc;EAOZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAAA,EAAG;IAAA,IAAAC,KAAA;IAAAC,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,wBAkBWC,OAAD,IAA2B;MACjD,KAAKC,WAAL,GAAmBD,OAAO,CAACE,MAA3B;MACA,KAAKC,SAAL,GAAiBH,OAAO,CAACI,QAAzB;MACA,KAAKC,UAAL,GAAkBL,OAAO,CAACM,KAA1B;MACA,KAAKC,WAAL,GAAmBP,OAAO,CAACQ,MAA3B;MACA,KAAKC,aAAL,GAAqBT,OAAO,CAACU,QAA7B;IACD,CAxBa;IAAAX,eAAA,iBA0BL,UAACY,OAAD,EAAwBC,OAAxB;MAAA,IAAwBA,OAAxB;QAAwBA,OAAxB,GAAyD,EAAzD;MAAA;MAAA,OACPd,KAAI,CAACG,WADE,oBACPH,KAAI,CAACG,WAAL,CAAmBU,OAAnB,EAA4BC,OAA5B,CADO;IAAA,CA1BK;IAAAb,eAAA,gBA6BLc,EAAD,IAAiB;MAAA,IAAAC,gBAAA;MACvB,CAAAA,gBAAA,QAAKT,UAAL,qBAAAS,gBAAA,CAAAC,IAAA,OAAkBF,EAAlB;IACD,CA/Ba;IAAAd,eAAA,mBAiCFa,OAAD,IAAqC;MAAA,IAAAI,eAAA;MAC9C,CAAAA,eAAA,QAAKb,SAAL,qBAAAa,eAAA,CAAAD,IAAA,OAAiBH,OAAjB;IACD,CAnCa;IAAAb,eAAA,iBAqCL,UAACc,EAAD,EAAcD,OAAd,EAAsD;MAAA,IAAxCA,OAAwC;QAAxCA,OAAwC,GAAP,EAAO;MAAA;MAC7Dd,KAAI,CAACS,WAAL,oBAAAT,KAAI,CAACS,WAAL,CAAmBM,EAAnB,EAAuBD,OAAvB;IACD,CAvCa;IAAAb,eAAA,mBAyCFc,EAAD;MAAA,IAAAI,mBAAA;MAAA,QAAAA,mBAAA,GAAiB,KAAKR,aAAtB,qBAAiBQ,mBAAA,CAAAF,IAAA,OAAqBF,EAArB,CAAjB;IAAA,CAzCG;IACZ,IAAI,CAACtB,SAAL,EAAgB;IAEhB,IAAI2B,MAAJ;IACA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB1B,QAAxB,CAAvB;IAEA,IAAIwB,cAAJ,EAAoB;MAClBD,MAAM,GAAGC,cAAT;IACD,CAFD,MAEO;MAAA,IAAAG,cAAA;MACL,IAAMC,GAAG,GAAGH,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAZ;MACAD,GAAG,CAACV,EAAJ,GAASlB,QAAT;MACA,CAAA2B,cAAA,GAAAF,QAAQ,CAACK,IAAT,qBAAAH,cAAA,CAAeI,WAAf,CAA2BH,GAA3B;MACAL,MAAM,GAAGK,GAAT;IACD;IAED9B,MAAM,eAACD,KAAA,CAAAgC,aAAA,CAAC9B,YAAD;MAAcQ,MAAM,EAAE,KAAKyB;IAA3B,EAAD,EAA+CT,MAA/C,CAAN;EACD;AAhCW;AA4Dd,OAAO,IAAMU,KAAK,GAAG,IAAIhC,OAAJ,EAAd"},"metadata":{},"sourceType":"module"}