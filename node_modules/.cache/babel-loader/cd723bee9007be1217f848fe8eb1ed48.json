{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\r\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\r\n * parameters for mappings of event names to event data types, and strictly\r\n * types method calls to the `EventEmitter` according to these event maps.\r\n *\r\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\r\n * listened to with `on` or `once`\r\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\r\n * emitted with `emit`\r\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\r\n * emitted by socket.io with `emitReserved`, and can be listened to with\r\n * `listen`.\r\n */\nclass StrictEventEmitter extends Emitter {\n  /**\r\n   * Adds the `listener` function as an event listener for `ev`.\r\n   *\r\n   * @param ev Name of the event\r\n   * @param listener Callback function\r\n   */\n  on(ev, listener) {\n    super.on(ev, listener);\n    return this;\n  }\n  /**\r\n   * Adds a one-time `listener` function as an event listener for `ev`.\r\n   *\r\n   * @param ev Name of the event\r\n   * @param listener Callback function\r\n   */\n  once(ev, listener) {\n    super.once(ev, listener);\n    return this;\n  }\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @param ev Name of the event\r\n   * @param args Values to send to listeners of this event\r\n   */\n  emit(ev) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    super.emit(ev, ...args);\n    return this;\n  }\n  /**\r\n   * Emits a reserved event.\r\n   *\r\n   * This method is `protected`, so that only a class extending\r\n   * `StrictEventEmitter` can emit its own reserved events.\r\n   *\r\n   * @param ev Reserved event name\r\n   * @param args Arguments to emit along with the event\r\n   */\n  emitReserved(ev) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    super.emit(ev, ...args);\n    return this;\n  }\n  /**\r\n   * Returns the listeners listening to an event.\r\n   *\r\n   * @param event Event name\r\n   * @returns Array of listeners subscribed to `event`\r\n   */\n  listeners(event) {\n    return super.listeners(event);\n  }\n}\nexports.StrictEventEmitter = StrictEventEmitter;","map":{"version":3,"names":["Object","defineProperty","exports","value","StrictEventEmitter","Emitter","require","on","ev","listener","once","emit","_len","arguments","length","args","Array","_key","emitReserved","_len2","_key2","listeners","event"],"sources":["E:/Hasan sir project/4/frontend/node_modules/socket.io-client/build/typed-events.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StrictEventEmitter = void 0;\r\nconst Emitter = require(\"component-emitter\");\r\n/**\r\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\r\n * parameters for mappings of event names to event data types, and strictly\r\n * types method calls to the `EventEmitter` according to these event maps.\r\n *\r\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\r\n * listened to with `on` or `once`\r\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\r\n * emitted with `emit`\r\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\r\n * emitted by socket.io with `emitReserved`, and can be listened to with\r\n * `listen`.\r\n */\r\nclass StrictEventEmitter extends Emitter {\r\n    /**\r\n     * Adds the `listener` function as an event listener for `ev`.\r\n     *\r\n     * @param ev Name of the event\r\n     * @param listener Callback function\r\n     */\r\n    on(ev, listener) {\r\n        super.on(ev, listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Adds a one-time `listener` function as an event listener for `ev`.\r\n     *\r\n     * @param ev Name of the event\r\n     * @param listener Callback function\r\n     */\r\n    once(ev, listener) {\r\n        super.once(ev, listener);\r\n        return this;\r\n    }\r\n    /**\r\n     * Emits an event.\r\n     *\r\n     * @param ev Name of the event\r\n     * @param args Values to send to listeners of this event\r\n     */\r\n    emit(ev, ...args) {\r\n        super.emit(ev, ...args);\r\n        return this;\r\n    }\r\n    /**\r\n     * Emits a reserved event.\r\n     *\r\n     * This method is `protected`, so that only a class extending\r\n     * `StrictEventEmitter` can emit its own reserved events.\r\n     *\r\n     * @param ev Reserved event name\r\n     * @param args Arguments to emit along with the event\r\n     */\r\n    emitReserved(ev, ...args) {\r\n        super.emit(ev, ...args);\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the listeners listening to an event.\r\n     *\r\n     * @param event Event name\r\n     * @returns Array of listeners subscribed to `event`\r\n     */\r\n    listeners(event) {\r\n        return super.listeners(event);\r\n    }\r\n}\r\nexports.StrictEventEmitter = StrictEventEmitter;\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,OAAO,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,kBAAkB,SAASC,OAAO,CAAC;EACrC;AACJ;AACA;AACA;AACA;AACA;EACIE,EAAEA,CAACC,EAAE,EAAEC,QAAQ,EAAE;IACb,KAAK,CAACF,EAAE,CAACC,EAAE,EAAEC,QAAQ,CAAC;IACtB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAACF,EAAE,EAAEC,QAAQ,EAAE;IACf,KAAK,CAACC,IAAI,CAACF,EAAE,EAAEC,QAAQ,CAAC;IACxB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIE,IAAIA,CAACH,EAAE,EAAW;IAAA,SAAAI,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IACZ,KAAK,CAACN,IAAI,CAACH,EAAE,EAAE,GAAGO,IAAI,CAAC;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,YAAYA,CAACV,EAAE,EAAW;IAAA,SAAAW,KAAA,GAAAN,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAG,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJL,IAAI,CAAAK,KAAA,QAAAP,SAAA,CAAAO,KAAA;IAAA;IACpB,KAAK,CAACT,IAAI,CAACH,EAAE,EAAE,GAAGO,IAAI,CAAC;IACvB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;EACIM,SAASA,CAACC,KAAK,EAAE;IACb,OAAO,KAAK,CAACD,SAAS,CAACC,KAAK,CAAC;EACjC;AACJ;AACApB,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB"},"metadata":{},"sourceType":"script"}