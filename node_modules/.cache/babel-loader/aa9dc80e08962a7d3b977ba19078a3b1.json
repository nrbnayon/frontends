{"ast":null,"code":"import { createMotionComponent } from '../../motion/index.js';\n/**\r\n * Convert any React component into a `motion` component. The provided component\r\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\r\n *\r\n * ```jsx\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   return <div ref={ref} />\r\n * })\r\n *\r\n * const MotionComponent = motion(Component)\r\n * ```\r\n *\r\n * @public\r\n */\n\nfunction createMotionProxy(createConfig) {\n  function custom(Component, customMotionComponentConfig) {\n    if (customMotionComponentConfig === void 0) {\n      customMotionComponentConfig = {};\n    }\n\n    return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n  }\n  /**\r\n   * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n   * Rather than generating them anew every render.\r\n   */\n\n\n  var componentCache = new Map();\n  return new Proxy(custom, {\n    /**\r\n     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n     * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n     * DOM component with that name.\r\n     */\n    get: function get(_target, key) {\n      /**\r\n       * If this element doesn't exist in the component cache, create it and cache.\r\n       */\n      if (!componentCache.has(key)) {\n        componentCache.set(key, custom(key));\n      }\n\n      return componentCache.get(key);\n    }\n  });\n}\n\nexport { createMotionProxy };","map":{"version":3,"sources":["E:/Hasan sir project/ChattersTwo/frontend/node_modules/framer-motion/dist/es/render/dom/motion-proxy.js"],"names":["createMotionComponent","createMotionProxy","createConfig","custom","Component","customMotionComponentConfig","componentCache","Map","Proxy","get","_target","key","has","set"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,uBAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,YAA3B,EAAyC;AACrC,WAASC,MAAT,CAAgBC,SAAhB,EAA2BC,2BAA3B,EAAwD;AACpD,QAAIA,2BAA2B,KAAK,KAAK,CAAzC,EAA4C;AAAEA,MAAAA,2BAA2B,GAAG,EAA9B;AAAmC;;AACjF,WAAOL,qBAAqB,CAACE,YAAY,CAACE,SAAD,EAAYC,2BAAZ,CAAb,CAA5B;AACH;AACD;AACJ;AACA;AACA;;;AACI,MAAIC,cAAc,GAAG,IAAIC,GAAJ,EAArB;AACA,SAAO,IAAIC,KAAJ,CAAUL,MAAV,EAAkB;AACrB;AACR;AACA;AACA;AACA;AACQM,IAAAA,GAAG,EAAE,aAAUC,OAAV,EAAmBC,GAAnB,EAAwB;AACzB;AACZ;AACA;AACY,UAAI,CAACL,cAAc,CAACM,GAAf,CAAmBD,GAAnB,CAAL,EAA8B;AAC1BL,QAAAA,cAAc,CAACO,GAAf,CAAmBF,GAAnB,EAAwBR,MAAM,CAACQ,GAAD,CAA9B;AACH;;AACD,aAAOL,cAAc,CAACG,GAAf,CAAmBE,GAAnB,CAAP;AACH;AAdoB,GAAlB,CAAP;AAgBH;;AAED,SAASV,iBAAT","sourcesContent":["import { createMotionComponent } from '../../motion/index.js';\r\n\r\n/**\r\n * Convert any React component into a `motion` component. The provided component\r\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\r\n *\r\n * ```jsx\r\n * const Component = React.forwardRef((props, ref) => {\r\n *   return <div ref={ref} />\r\n * })\r\n *\r\n * const MotionComponent = motion(Component)\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction createMotionProxy(createConfig) {\r\n    function custom(Component, customMotionComponentConfig) {\r\n        if (customMotionComponentConfig === void 0) { customMotionComponentConfig = {}; }\r\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\r\n    }\r\n    /**\r\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n    var componentCache = new Map();\r\n    return new Proxy(custom, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: function (_target, key) {\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            if (!componentCache.has(key)) {\r\n                componentCache.set(key, custom(key));\r\n            }\r\n            return componentCache.get(key);\r\n        },\r\n    });\r\n}\r\n\r\nexport { createMotionProxy };\r\n"]},"metadata":{},"sourceType":"module"}