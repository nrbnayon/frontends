{"ast":null,"code":"const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\nclass Transport extends Emitter {\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} options.\r\n   * @api private\r\n   */\n  constructor(opts) {\n    super();\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} str\r\n   * @return {Transport} for chaining\r\n   * @api public\r\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\r\n   * Opens the transport.\r\n   *\r\n   * @api public\r\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n    return this;\n  }\n\n  /**\r\n   * Closes the transport.\r\n   *\r\n   * @api private\r\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n    return this;\n  }\n\n  /**\r\n   * Sends multiple packets.\r\n   *\r\n   * @param {Array} packets\r\n   * @api private\r\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\r\n   * Called upon open\r\n   *\r\n   * @api private\r\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\r\n   * Called with data.\r\n   *\r\n   * @param {String} data\r\n   * @api private\r\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\r\n   * Called with a decoded packet.\r\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\r\n   * Called upon close.\r\n   *\r\n   * @api private\r\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\nmodule.exports = Transport;","map":{"version":3,"names":["parser","require","Emitter","debug","Transport","constructor","opts","query","readyState","socket","onError","msg","desc","err","Error","type","description","emit","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","writable","onData","data","packet","decodePacket","binaryType","onPacket","module","exports"],"sources":["E:/Hasan sir project/frontend/node_modules/engine.io-client/lib/transport.js"],"sourcesContent":["const parser = require(\"engine.io-parser\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\r\n\r\nclass Transport extends Emitter {\r\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} options.\r\n   * @api private\r\n   */\r\n  constructor(opts) {\r\n    super();\r\n\r\n    this.opts = opts;\r\n    this.query = opts.query;\r\n    this.readyState = \"\";\r\n    this.socket = opts.socket;\r\n  }\r\n\r\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} str\r\n   * @return {Transport} for chaining\r\n   * @api public\r\n   */\r\n  onError(msg, desc) {\r\n    const err = new Error(msg);\r\n    err.type = \"TransportError\";\r\n    err.description = desc;\r\n    this.emit(\"error\", err);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Opens the transport.\r\n   *\r\n   * @api public\r\n   */\r\n  open() {\r\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\r\n      this.readyState = \"opening\";\r\n      this.doOpen();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Closes the transport.\r\n   *\r\n   * @api private\r\n   */\r\n  close() {\r\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\r\n      this.doClose();\r\n      this.onClose();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sends multiple packets.\r\n   *\r\n   * @param {Array} packets\r\n   * @api private\r\n   */\r\n  send(packets) {\r\n    if (\"open\" === this.readyState) {\r\n      this.write(packets);\r\n    } else {\r\n      // this might happen if the transport was silently closed in the beforeunload event handler\r\n      debug(\"transport is not open, discarding packets\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon open\r\n   *\r\n   * @api private\r\n   */\r\n  onOpen() {\r\n    this.readyState = \"open\";\r\n    this.writable = true;\r\n    this.emit(\"open\");\r\n  }\r\n\r\n  /**\r\n   * Called with data.\r\n   *\r\n   * @param {String} data\r\n   * @api private\r\n   */\r\n  onData(data) {\r\n    const packet = parser.decodePacket(data, this.socket.binaryType);\r\n    this.onPacket(packet);\r\n  }\r\n\r\n  /**\r\n   * Called with a decoded packet.\r\n   */\r\n  onPacket(packet) {\r\n    this.emit(\"packet\", packet);\r\n  }\r\n\r\n  /**\r\n   * Called upon close.\r\n   *\r\n   * @api private\r\n   */\r\n  onClose() {\r\n    this.readyState = \"closed\";\r\n    this.emit(\"close\");\r\n  }\r\n}\r\n\r\nmodule.exports = Transport;\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC1C,MAAMC,OAAO,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC;AAE5D,MAAMG,SAAS,SAASF,OAAO,CAAC;EAC9B;AACF;AACA;AACA;AACA;AACA;EACEG,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACC,KAAK;IACvB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,MAAM,GAAGH,IAAI,CAACG,MAAM;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAE;IACjB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;IAC1BE,GAAG,CAACE,IAAI,GAAG,gBAAgB;IAC3BF,GAAG,CAACG,WAAW,GAAGJ,IAAI;IACtB,IAAI,CAACK,IAAI,CAAC,OAAO,EAAEJ,GAAG,CAAC;IACvB,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACEK,IAAIA,CAAA,EAAG;IACL,IAAI,QAAQ,KAAK,IAAI,CAACV,UAAU,IAAI,EAAE,KAAK,IAAI,CAACA,UAAU,EAAE;MAC1D,IAAI,CAACA,UAAU,GAAG,SAAS;MAC3B,IAAI,CAACW,MAAM,CAAC,CAAC;IACf;IAEA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAG;IACN,IAAI,SAAS,KAAK,IAAI,CAACZ,UAAU,IAAI,MAAM,KAAK,IAAI,CAACA,UAAU,EAAE;MAC/D,IAAI,CAACa,OAAO,CAAC,CAAC;MACd,IAAI,CAACC,OAAO,CAAC,CAAC;IAChB;IAEA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,IAAIA,CAACC,OAAO,EAAE;IACZ,IAAI,MAAM,KAAK,IAAI,CAAChB,UAAU,EAAE;MAC9B,IAAI,CAACiB,KAAK,CAACD,OAAO,CAAC;IACrB,CAAC,MAAM;MACL;MACArB,KAAK,CAAC,2CAA2C,CAAC;IACpD;EACF;;EAEA;AACF;AACA;AACA;AACA;EACEuB,MAAMA,CAAA,EAAG;IACP,IAAI,CAAClB,UAAU,GAAG,MAAM;IACxB,IAAI,CAACmB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACV,IAAI,CAAC,MAAM,CAAC;EACnB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEW,MAAMA,CAACC,IAAI,EAAE;IACX,MAAMC,MAAM,GAAG9B,MAAM,CAAC+B,YAAY,CAACF,IAAI,EAAE,IAAI,CAACpB,MAAM,CAACuB,UAAU,CAAC;IAChE,IAAI,CAACC,QAAQ,CAACH,MAAM,CAAC;EACvB;;EAEA;AACF;AACA;EACEG,QAAQA,CAACH,MAAM,EAAE;IACf,IAAI,CAACb,IAAI,CAAC,QAAQ,EAAEa,MAAM,CAAC;EAC7B;;EAEA;AACF;AACA;AACA;AACA;EACER,OAAOA,CAAA,EAAG;IACR,IAAI,CAACd,UAAU,GAAG,QAAQ;IAC1B,IAAI,CAACS,IAAI,CAAC,OAAO,CAAC;EACpB;AACF;AAEAiB,MAAM,CAACC,OAAO,GAAG/B,SAAS"},"metadata":{},"sourceType":"script"}