{"ast":null,"code":"import { keyframes } from \"@chakra-ui/system\";\nimport { isFunction, valueToPercent } from \"@chakra-ui/utils\";\nexport var spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nexport var rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nexport var progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nexport var stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\n\n/**\r\n * Get the common `aria-*` attributes for both the linear and circular\r\n * progress components.\r\n */\nexport function getProgressProps(options) {\n  var {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate\n  } = options;\n  var percent = valueToPercent(value, min, max);\n  var getAriaValueText = () => {\n    if (value == null) return undefined;\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText;\n  };\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent,\n    value\n  };\n}","map":{"version":3,"names":["keyframes","isFunction","valueToPercent","spin","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","value","min","max","valueText","getValueText","isIndeterminate","percent","getAriaValueText","undefined","bind","role"],"sources":["../../src/progress.utils.tsx"],"sourcesContent":["import { keyframes } from \"@chakra-ui/system\"\nimport { isFunction, valueToPercent } from \"@chakra-ui/utils\"\n\ntype Keyframe = ReturnType<typeof keyframes>\n\nexport const spin: Keyframe = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\",\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\",\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\",\n  },\n})\n\nexport const rotate: Keyframe = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\nexport const progress: Keyframe = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" },\n})\n\nexport const stripe: Keyframe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" },\n})\n\nexport interface GetProgressPropsOptions {\n  value?: number\n  min: number\n  max: number\n  valueText?: string\n  getValueText?(value: number, percent: number): string\n  isIndeterminate?: boolean\n}\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nexport function getProgressProps(options: GetProgressPropsOptions) {\n  const {\n    value = 0,\n    min,\n    max,\n    valueText,\n    getValueText,\n    isIndeterminate,\n  } = options\n\n  const percent = valueToPercent(value, min, max)\n\n  const getAriaValueText = () => {\n    if (value == null) return undefined\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText\n  }\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\",\n    },\n    percent,\n    value,\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AAIA,OAAO,IAAMC,IAAc,GAAGH,SAAS,CAAC;EACtC,MAAM;IACJI,eAAe,EAAE,QADb;IAEJC,gBAAgB,EAAE;EAFd,CADgC;EAKtC,OAAO;IACLD,eAAe,EAAE,UADZ;IAELC,gBAAgB,EAAE;EAFb,CAL+B;EAStC,QAAQ;IACND,eAAe,EAAE,UADX;IAENC,gBAAgB,EAAE;EAFZ;AAT8B,CAAD,CAAhC;AAeP,OAAO,IAAMC,MAAgB,GAAGN,SAAS,CAAC;EACxC,MAAM;IACJO,SAAS,EAAE;EADP,CADkC;EAIxC,QAAQ;IACNA,SAAS,EAAE;EADL;AAJgC,CAAD,CAAlC;AASP,OAAO,IAAMC,QAAkB,GAAGR,SAAS,CAAC;EAC1C,MAAM;IAAES,IAAI,EAAE;EAAR,CADoC;EAE1C,QAAQ;IAAEA,IAAI,EAAE;EAAR;AAFkC,CAAD,CAApC;AAKP,OAAO,IAAMC,MAAgB,GAAGV,SAAS,CAAC;EACxCW,IAAI,EAAE;IAAEC,kBAAkB,EAAE;EAAtB,CADkC;EAExCC,EAAE,EAAE;IAAED,kBAAkB,EAAE;EAAtB;AAFoC,CAAD,CAAlC;;AAcP;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAATA,CAA0BC,OAA1B,EAA4D;EACjE,IAAM;IACJC,KAAK,GAAG,CADJ;IAEJC,GAFI;IAGJC,GAHI;IAIJC,SAJI;IAKJC,YALI;IAMJC;EANI,IAOFN,OAPJ;EASA,IAAMO,OAAO,GAAGpB,cAAc,CAACc,KAAD,EAAQC,GAAR,EAAaC,GAAb,CAA9B;EAEA,IAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIP,KAAK,IAAI,IAAb,EAAmB,OAAOQ,SAAP;IACnB,OAAOvB,UAAU,CAACmB,YAAD,CAAV,GAA2BA,YAAY,CAACJ,KAAD,EAAQM,OAAR,CAAvC,GAA0DH,SAAjE;EACD,CAHD;EAKA,OAAO;IACLM,IAAI,EAAE;MACJ,sBAAsBJ,eAAe,GAAG,EAAH,GAAQG,SADzC;MAEJ,iBAAiBN,GAFb;MAGJ,iBAAiBD,GAHb;MAIJ,iBAAiBI,eAAe,GAAGG,SAAH,GAAeR,KAJ3C;MAKJ,kBAAkBO,gBAAgB,EAL9B;MAMJG,IAAI,EAAE;IANF,CADD;IASLJ,OATK;IAULN;EAVK,CAAP;AAYD"},"metadata":{},"sourceType":"module"}