{"ast":null,"code":"import { pipe } from \"@chakra-ui/utils\";\nimport { mergeThemeOverride } from \"../extend-theme\";\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\";\nimport { withDefaultVariant } from \"./with-default-variant\";\nimport { withDefaultSize } from \"./with-default-size\";\nexport function withDefaultProps(_ref) {\n  var {\n    defaultProps: {\n      colorScheme,\n      variant,\n      size\n    },\n    components\n  } = _ref;\n  var identity = t => t;\n  var fns = [colorScheme ? withDefaultColorScheme({\n    colorScheme,\n    components\n  }) : identity, size ? withDefaultSize({\n    size,\n    components\n  }) : identity, variant ? withDefaultVariant({\n    variant,\n    components\n  }) : identity];\n  return theme => mergeThemeOverride(pipe(...fns)(theme));\n}","map":{"version":3,"names":["pipe","mergeThemeOverride","withDefaultColorScheme","withDefaultVariant","withDefaultSize","withDefaultProps","_ref","defaultProps","colorScheme","variant","size","components","identity","t","fns","theme"],"sources":["../../../src/theme-extensions/with-default-props.ts"],"sourcesContent":["import { ChakraTheme, ComponentDefaultProps } from \"@chakra-ui/theme\"\nimport { Dict, pipe } from \"@chakra-ui/utils\"\nimport { mergeThemeOverride, ThemeOverride } from \"../extend-theme\"\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\"\nimport { withDefaultVariant } from \"./with-default-variant\"\nimport { withDefaultSize } from \"./with-default-size\"\n\nexport function withDefaultProps<\n  BaseTheme extends ChakraTheme,\n  Override extends ThemeOverride<BaseTheme>\n>({\n  defaultProps: { colorScheme, variant, size },\n  components,\n}: {\n  defaultProps: ComponentDefaultProps\n  components?: string[] | Dict\n}) {\n  const identity = <T>(t: T) => t\n  const fns = [\n    colorScheme\n      ? withDefaultColorScheme({ colorScheme, components })\n      : identity,\n    size ? withDefaultSize({ size, components }) : identity,\n    variant ? withDefaultVariant({ variant, components }) : identity,\n  ]\n\n  return (theme: Override) => mergeThemeOverride<BaseTheme>(pipe(...fns)(theme))\n}\n"],"mappings":"AACA,SAAeA,IAAf,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAkD,iBAAlD;AACA,SAASC,sBAAT,QAAuC,6BAAvC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,OAAO,SAASC,gBAATA,CAAAC,IAAA,EASJ;EAAA,IAND;IACAC,YAAY,EAAE;MAAEC,WAAF;MAAeC,OAAf;MAAwBC;IAAxB,CADd;IAEAC;EAFA,CAMC,GAAAL,IAAA;EACD,IAAMM,QAAQ,GAAOC,CAAJ,IAAaA,CAA9B;EACA,IAAMC,GAAG,GAAG,CACVN,WAAW,GACPN,sBAAsB,CAAC;IAAEM,WAAF;IAAeG;EAAf,CAAD,CADf,GAEPC,QAHM,EAIVF,IAAI,GAAGN,eAAe,CAAC;IAAEM,IAAF;IAAQC;EAAR,CAAD,CAAlB,GAA2CC,QAJrC,EAKVH,OAAO,GAAGN,kBAAkB,CAAC;IAAEM,OAAF;IAAWE;EAAX,CAAD,CAArB,GAAiDC,QAL9C,CAAZ;EAQA,OAAQG,KAAD,IAAqBd,kBAAkB,CAAYD,IAAI,CAAC,GAAGc,GAAJ,CAAJ,CAAaC,KAAb,CAAZ,CAA9C;AACD"},"metadata":{},"sourceType":"module"}