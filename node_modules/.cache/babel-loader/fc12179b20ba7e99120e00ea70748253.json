{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useSlider } from \"./use-slider\";\nvar [SliderProvider, useSliderContext] = createContext({\n  name: \"SliderContext\",\n  errorMessage: \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />\"\n});\nexport { SliderProvider, useSliderContext };\n\n/**\r\n * The Slider is used to allow users to make selections from a range of values.\r\n * It provides context and functionality for all slider components\r\n *\r\n * @see Docs     https://chakra-ui.com/docs/form/slider\r\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider\r\n */\nexport var Slider = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useMultiStyleConfig(\"Slider\", props);\n  var ownProps = omitThemingProps(props);\n  var _useSlider = useSlider(ownProps),\n    {\n      getInputProps,\n      getRootProps\n    } = _useSlider,\n    context = _objectWithoutPropertiesLoose(_useSlider, [\"getInputProps\", \"getRootProps\"]);\n  var rootProps = getRootProps();\n  var inputProps = getInputProps({}, ref);\n  var rootStyles = _extends({\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\"\n  }, styles.container);\n  return /*#__PURE__*/React.createElement(SliderProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, rootProps, {\n    className: \"chakra-slider\",\n    __css: rootStyles\n  }), props.children, /*#__PURE__*/React.createElement(\"input\", inputProps))));\n});\nSlider.defaultProps = {\n  orientation: \"horizontal\"\n};\nif (__DEV__) {\n  Slider.displayName = \"Slider\";\n}\n\n/**\r\n * Slider component that acts as the handle used to select predefined\r\n * values by dragging its handle along the track\r\n */\nexport var SliderThumb = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    getThumbProps\n  } = useSliderContext();\n  var styles = useStyles();\n  var thumbStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0\n  }, styles.thumb);\n  var thumbProps = getThumbProps(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, thumbProps, {\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: thumbStyles\n  }));\n});\nif (__DEV__) {\n  SliderThumb.displayName = \"SliderThumb\";\n}\nexport var SliderTrack = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    getTrackProps\n  } = useSliderContext();\n  var styles = useStyles();\n  var trackStyles = _extends({\n    overflow: \"hidden\"\n  }, styles.track);\n  var trackProps = getTrackProps(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, trackProps, {\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: trackStyles\n  }));\n});\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\";\n}\nexport var SliderFilledTrack = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    getInnerTrackProps\n  } = useSliderContext();\n  var styles = useStyles();\n  var trackStyles = _extends({\n    width: \"inherit\",\n    height: \"inherit\"\n  }, styles.filledTrack);\n  var trackProps = getInnerTrackProps(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, trackProps, {\n    className: \"chakra-slider__filled-track\",\n    __css: trackStyles\n  }));\n});\nif (__DEV__) {\n  SliderFilledTrack.displayName = \"SliderFilledTrack\";\n}\n\n/**\r\n * SliderMark is used to provide names for specific Slider\r\n * values by defining labels or markers along the track.\r\n *\r\n * @see Docs https://chakra-ui.com/docs/components/slider\r\n */\nexport var SliderMark = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    getMarkerProps\n  } = useSliderContext();\n  var markProps = getMarkerProps(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, markProps, {\n    className: cx(\"chakra-slider__marker\", props.className)\n  }));\n});\nif (__DEV__) {\n  SliderMark.displayName = \"SliderMark\";\n}","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","__DEV__","createContext","React","useSlider","SliderProvider","useSliderContext","name","errorMessage","Slider","props","ref","styles","ownProps","_useSlider","getInputProps","getRootProps","context","_objectWithoutPropertiesLoose","rootProps","inputProps","rootStyles","_extends","display","position","cursor","container","createElement","value","div","className","__css","children","defaultProps","orientation","displayName","SliderThumb","getThumbProps","thumbStyles","alignItems","justifyContent","outline","thumb","thumbProps","SliderTrack","getTrackProps","trackStyles","overflow","track","trackProps","SliderFilledTrack","getInnerTrackProps","width","height","filledTrack","SliderMark","getMarkerProps","markProps"],"sources":["../../src/slider.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  errorMessage:\n    \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <Slider />\",\n})\n\nexport { SliderProvider, useSliderContext }\n\ntype Omitted = \"size\" | \"defaultValue\" | \"onChange\"\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, Omitted> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices/#slider\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Slider\", props)\n  const ownProps = omitThemingProps(props)\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  const rootStyles: SystemStyleObject = {\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    ...styles.container,\n  }\n\n  return (\n    <SliderProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div {...rootProps} className=\"chakra-slider\" __css={rootStyles}>\n          {props.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </StylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.defaultProps = {\n  orientation: \"horizontal\",\n}\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\"\n}\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n\n  const styles = useStyles()\n\n  const thumbStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    outline: 0,\n    ...styles.thumb,\n  }\n\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={thumbStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderThumb.displayName = \"SliderThumb\"\n}\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n\n  const styles = useStyles()\n  const trackStyles = {\n    overflow: \"hidden\",\n    ...styles.track,\n  }\n\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={trackStyles}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\"\n}\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n\n    const styles = useStyles()\n    const trackStyles = {\n      width: \"inherit\",\n      height: \"inherit\",\n      ...styles.filledTrack,\n    }\n\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className=\"chakra-slider__filled-track\"\n        __css={trackStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  SliderFilledTrack.displayName = \"SliderFilledTrack\"\n}\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/docs/components/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n    />\n  )\n})\n\nif (__DEV__) {\n  SliderMark.displayName = \"SliderMark\"\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}