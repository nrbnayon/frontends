{"ast":null,"code":"/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst {\n  pick\n} = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\r\n * Empty function\r\n */\n\nfunction empty() {}\nconst hasXHR2 = function () {\n  const xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nclass XHR extends Polling {\n  /**\r\n   * XHR Polling constructor.\r\n   *\r\n   * @param {Object} opts\r\n   * @api public\r\n   */\n  constructor(opts) {\n    super(opts);\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\r\n     * XHR supports binary\r\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\r\n   * Creates a request.\r\n   *\r\n   * @param {String} method\r\n   * @api private\r\n   */\n  request(opts = {}) {\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\r\n   * Sends data.\r\n   *\r\n   * @param {String} data to send.\r\n   * @param {Function} called upon flush.\r\n   * @api private\r\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\r\n   * Starts a poll cycle.\r\n   *\r\n   * @api private\r\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\nclass Request extends Emitter {\n  /**\r\n   * Request constructor\r\n   *\r\n   * @param {Object} options\r\n   * @api public\r\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n\n  /**\r\n   * Creates the XHR object and sends the request.\r\n   *\r\n   * @api private\r\n   */\n  create() {\n    const opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new XMLHttpRequest(opts);\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\r\n   * Called upon successful response.\r\n   *\r\n   * @api private\r\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\r\n   * Called if we have data.\r\n   *\r\n   * @api private\r\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\r\n   * Called upon error.\r\n   *\r\n   * @api private\r\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\r\n   * Cleans up house.\r\n   *\r\n   * @api private\r\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n    this.xhr = null;\n  }\n\n  /**\r\n   * Called upon load.\r\n   *\r\n   * @api private\r\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\r\n   * Check if it has XDomainRequest.\r\n   *\r\n   * @api private\r\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\r\n   * Aborts the request.\r\n   *\r\n   * @api public\r\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\nmodule.exports = XHR;\nmodule.exports.Request = Request;","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","pick","globalThis","debug","empty","hasXHR2","xhr","xdomain","responseType","XHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","Object","assign","Request","uri","doWrite","data","fn","req","method","on","err","onError","doPoll","onData","bind","pollXhr","async","undefined","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","XDomainRequest","enablesXDR","attachEvent","unloadHandler","addEventListener","terminationEvent","module","exports"],"sources":["E:/Hasan sir project/frontend/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\r\n\r\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\r\nconst Polling = require(\"./polling\");\r\nconst Emitter = require(\"component-emitter\");\r\nconst { pick } = require(\"../util\");\r\nconst globalThis = require(\"../globalThis\");\r\n\r\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty() {}\r\n\r\nconst hasXHR2 = (function() {\r\n  const xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\nclass XHR extends Polling {\r\n  /**\r\n   * XHR Polling constructor.\r\n   *\r\n   * @param {Object} opts\r\n   * @api public\r\n   */\r\n  constructor(opts) {\r\n    super(opts);\r\n\r\n    if (typeof location !== \"undefined\") {\r\n      const isSSL = \"https:\" === location.protocol;\r\n      let port = location.port;\r\n\r\n      // some user agents have empty `location.port`\r\n      if (!port) {\r\n        port = isSSL ? 443 : 80;\r\n      }\r\n\r\n      this.xd =\r\n        (typeof location !== \"undefined\" &&\r\n          opts.hostname !== location.hostname) ||\r\n        port !== opts.port;\r\n      this.xs = opts.secure !== isSSL;\r\n    }\r\n    /**\r\n     * XHR supports binary\r\n     */\r\n    const forceBase64 = opts && opts.forceBase64;\r\n    this.supportsBinary = hasXHR2 && !forceBase64;\r\n  }\r\n\r\n  /**\r\n   * Creates a request.\r\n   *\r\n   * @param {String} method\r\n   * @api private\r\n   */\r\n  request(opts = {}) {\r\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\r\n    return new Request(this.uri(), opts);\r\n  }\r\n\r\n  /**\r\n   * Sends data.\r\n   *\r\n   * @param {String} data to send.\r\n   * @param {Function} called upon flush.\r\n   * @api private\r\n   */\r\n  doWrite(data, fn) {\r\n    const req = this.request({\r\n      method: \"POST\",\r\n      data: data\r\n    });\r\n    req.on(\"success\", fn);\r\n    req.on(\"error\", err => {\r\n      this.onError(\"xhr post error\", err);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Starts a poll cycle.\r\n   *\r\n   * @api private\r\n   */\r\n  doPoll() {\r\n    debug(\"xhr poll\");\r\n    const req = this.request();\r\n    req.on(\"data\", this.onData.bind(this));\r\n    req.on(\"error\", err => {\r\n      this.onError(\"xhr poll error\", err);\r\n    });\r\n    this.pollXhr = req;\r\n  }\r\n}\r\n\r\nclass Request extends Emitter {\r\n  /**\r\n   * Request constructor\r\n   *\r\n   * @param {Object} options\r\n   * @api public\r\n   */\r\n  constructor(uri, opts) {\r\n    super();\r\n    this.opts = opts;\r\n\r\n    this.method = opts.method || \"GET\";\r\n    this.uri = uri;\r\n    this.async = false !== opts.async;\r\n    this.data = undefined !== opts.data ? opts.data : null;\r\n\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Creates the XHR object and sends the request.\r\n   *\r\n   * @api private\r\n   */\r\n  create() {\r\n    const opts = pick(\r\n      this.opts,\r\n      \"agent\",\r\n      \"enablesXDR\",\r\n      \"pfx\",\r\n      \"key\",\r\n      \"passphrase\",\r\n      \"cert\",\r\n      \"ca\",\r\n      \"ciphers\",\r\n      \"rejectUnauthorized\",\r\n      \"autoUnref\"\r\n    );\r\n    opts.xdomain = !!this.opts.xd;\r\n    opts.xscheme = !!this.opts.xs;\r\n\r\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\r\n\r\n    try {\r\n      debug(\"xhr open %s: %s\", this.method, this.uri);\r\n      xhr.open(this.method, this.uri, this.async);\r\n      try {\r\n        if (this.opts.extraHeaders) {\r\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n          for (let i in this.opts.extraHeaders) {\r\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\r\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {}\r\n\r\n      if (\"POST\" === this.method) {\r\n        try {\r\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\r\n        } catch (e) {}\r\n      }\r\n\r\n      try {\r\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\r\n      } catch (e) {}\r\n\r\n      // ie6 check\r\n      if (\"withCredentials\" in xhr) {\r\n        xhr.withCredentials = this.opts.withCredentials;\r\n      }\r\n\r\n      if (this.opts.requestTimeout) {\r\n        xhr.timeout = this.opts.requestTimeout;\r\n      }\r\n\r\n      if (this.hasXDR()) {\r\n        xhr.onload = () => {\r\n          this.onLoad();\r\n        };\r\n        xhr.onerror = () => {\r\n          this.onError(xhr.responseText);\r\n        };\r\n      } else {\r\n        xhr.onreadystatechange = () => {\r\n          if (4 !== xhr.readyState) return;\r\n          if (200 === xhr.status || 1223 === xhr.status) {\r\n            this.onLoad();\r\n          } else {\r\n            // make sure the `error` event handler that's user-set\r\n            // does not throw in the same tick and gets caught here\r\n            setTimeout(() => {\r\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\r\n            }, 0);\r\n          }\r\n        };\r\n      }\r\n\r\n      debug(\"xhr data %s\", this.data);\r\n      xhr.send(this.data);\r\n    } catch (e) {\r\n      // Need to defer since .create() is called directly from the constructor\r\n      // and thus the 'error' event can only be only bound *after* this exception\r\n      // occurs.  Therefore, also, we cannot throw here at all.\r\n      setTimeout(() => {\r\n        this.onError(e);\r\n      }, 0);\r\n      return;\r\n    }\r\n\r\n    if (typeof document !== \"undefined\") {\r\n      this.index = Request.requestsCount++;\r\n      Request.requests[this.index] = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called upon successful response.\r\n   *\r\n   * @api private\r\n   */\r\n  onSuccess() {\r\n    this.emit(\"success\");\r\n    this.cleanup();\r\n  }\r\n\r\n  /**\r\n   * Called if we have data.\r\n   *\r\n   * @api private\r\n   */\r\n  onData(data) {\r\n    this.emit(\"data\", data);\r\n    this.onSuccess();\r\n  }\r\n\r\n  /**\r\n   * Called upon error.\r\n   *\r\n   * @api private\r\n   */\r\n  onError(err) {\r\n    this.emit(\"error\", err);\r\n    this.cleanup(true);\r\n  }\r\n\r\n  /**\r\n   * Cleans up house.\r\n   *\r\n   * @api private\r\n   */\r\n  cleanup(fromError) {\r\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\r\n      return;\r\n    }\r\n    // xmlhttprequest\r\n    if (this.hasXDR()) {\r\n      this.xhr.onload = this.xhr.onerror = empty;\r\n    } else {\r\n      this.xhr.onreadystatechange = empty;\r\n    }\r\n\r\n    if (fromError) {\r\n      try {\r\n        this.xhr.abort();\r\n      } catch (e) {}\r\n    }\r\n\r\n    if (typeof document !== \"undefined\") {\r\n      delete Request.requests[this.index];\r\n    }\r\n\r\n    this.xhr = null;\r\n  }\r\n\r\n  /**\r\n   * Called upon load.\r\n   *\r\n   * @api private\r\n   */\r\n  onLoad() {\r\n    const data = this.xhr.responseText;\r\n    if (data !== null) {\r\n      this.onData(data);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if it has XDomainRequest.\r\n   *\r\n   * @api private\r\n   */\r\n  hasXDR() {\r\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\r\n  }\r\n\r\n  /**\r\n   * Aborts the request.\r\n   *\r\n   * @api public\r\n   */\r\n  abort() {\r\n    this.cleanup();\r\n  }\r\n}\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (typeof document !== \"undefined\") {\r\n  if (typeof attachEvent === \"function\") {\r\n    attachEvent(\"onunload\", unloadHandler);\r\n  } else if (typeof addEventListener === \"function\") {\r\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\r\n    addEventListener(terminationEvent, unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler() {\r\n  for (let i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}