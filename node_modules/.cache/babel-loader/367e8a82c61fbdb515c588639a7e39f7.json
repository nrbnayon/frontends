{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar useIsFirstRender = () => {\n  var isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\nexport var Skeleton = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Skeleton\", props);\n  var isFirstRender = useIsFirstRender();\n  var _omitThemingProps = omitThemingProps(props),\n    {\n      isLoaded,\n      fadeDuration,\n      className\n    } = _omitThemingProps,\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"className\"]);\n  var _className = cx(\"chakra-skeleton\", className);\n  if (isLoaded) {\n    var animation = isFirstRender ? \"none\" : fade + \" \" + fadeDuration + \"s\";\n    return /*#__PURE__*/React.createElement(chakra.div, _extends({\n      ref: ref,\n      className: _className,\n      __css: {\n        animation\n      }\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(StyledSkeleton, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: styles\n  }));\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\";\n}\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nexport var SkeletonText = props => {\n  var {\n      noOfLines = defaultNoOfLines,\n      spacing = \"0.5rem\",\n      skeletonHeight = \"0.5rem\",\n      className,\n      startColor,\n      endColor,\n      isLoaded,\n      fadeDuration,\n      speed,\n      children\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"children\"]);\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n  var getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  var _className = cx(\"chakra-skeleton__group\", className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest), numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      // skip other lines\n      return null;\n    }\n    var sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({\n      key: numbers.length.toString() + number,\n      startColor: startColor,\n      endColor: endColor,\n      isLoaded: isLoaded,\n      fadeDuration: fadeDuration,\n      speed: speed\n    }, sizeProps),\n    // allows animating the children\n    index === 0 ? children : undefined);\n  }));\n};\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\";\n}\nexport var SkeletonCircle = _ref => {\n  var {\n      size = \"2rem\"\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"size\"]);\n  return /*#__PURE__*/React.createElement(Skeleton, _extends({\n    borderRadius: \"full\",\n    boxSize: size\n  }, rest));\n};\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\";\n}","map":{"version":3,"names":["useBreakpointValue","chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","cx","__DEV__","React","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","fade","from","opacity","to","useIsFirstRender","isFirstRender","useRef","useEffect","current","Skeleton","props","ref","styles","_omitThemingProps","isLoaded","fadeDuration","className","rest","_objectWithoutPropertiesLoose","_className","animation","createElement","div","_extends","__css","defaultProps","speed","displayName","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","noOfLines","spacing","skeletonHeight","startColor","endColor","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","undefined","SkeletonCircle","_ref","size","borderRadius","boxSize"],"sources":["../../src/skeleton.tsx"],"sourcesContent":["import { useBreakpointValue } from \"@chakra-ui/media-query\"\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface SkeletonOptions {\n  /**\n   * The color at the animation start\n   */\n  startColor?: string\n  /**\n   * The color at the animation end\n   */\n  endColor?: string\n  /**\n   * If `true`, it'll render its children with a nice fade transition\n   */\n  isLoaded?: boolean\n  /**\n   * The animation speed in seconds\n   * @default\n   * 0.8\n   */\n  speed?: number\n  /**\n   * The fadeIn duration in seconds\n   *\n   * @default\n   * 0.4\n   */\n  fadeDuration?: number\n}\n\nconst StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\",\n    },\n  },\n})\n\nexport type ISkeleton = SkeletonOptions\n\nexport interface SkeletonProps\n  extends HTMLChakraProps<\"div\">,\n    SkeletonOptions,\n    ThemingProps<\"Skeleton\"> {}\n\nconst fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 },\n})\n\nconst useIsFirstRender = () => {\n  const isFirstRender = React.useRef(true)\n\n  React.useEffect(() => {\n    isFirstRender.current = false\n  }, [])\n\n  return isFirstRender.current\n}\n\nexport const Skeleton = forwardRef<SkeletonProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props)\n  const isFirstRender = useIsFirstRender()\n\n  const {\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-skeleton\", className)\n\n  if (isLoaded) {\n    const animation = isFirstRender ? \"none\" : `${fade} ${fadeDuration}s`\n\n    return (\n      <chakra.div\n        ref={ref}\n        className={_className}\n        __css={{ animation }}\n        {...rest}\n      />\n    )\n  }\n\n  return (\n    <StyledSkeleton ref={ref} className={_className} {...rest} __css={styles} />\n  )\n})\n\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8,\n}\n\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\"\n}\n\nfunction range(count: number) {\n  return Array(count)\n    .fill(1)\n    .map((_, index) => index + 1)\n}\n\nexport interface SkeletonTextProps extends SkeletonProps {\n  spacing?: SkeletonProps[\"margin\"]\n  skeletonHeight?: SkeletonProps[\"height\"]\n  startColor?: SkeletonProps[\"startColor\"]\n  endColor?: SkeletonProps[\"endColor\"]\n  isLoaded?: SkeletonProps[\"isLoaded\"]\n}\n\nconst defaultNoOfLines = 3\n\nexport const SkeletonText: React.FC<SkeletonTextProps> = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props\n\n  const noOfLinesValue =\n    useBreakpointValue(\n      typeof noOfLines === \"number\" ? [noOfLines] : noOfLines,\n    ) || defaultNoOfLines\n  const numbers = range(noOfLinesValue)\n\n  const getWidth = (index: number) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\"\n    }\n    return \"100%\"\n  }\n\n  const _className = cx(\"chakra-skeleton__group\", className)\n\n  return (\n    <chakra.div className={_className} {...rest}>\n      {numbers.map((number, index) => {\n        if (isLoaded && index > 0) {\n          // skip other lines\n          return null\n        }\n\n        const sizeProps = isLoaded\n          ? null\n          : {\n              mb: number === numbers.length ? \"0\" : spacing,\n              width: getWidth(number),\n              height: skeletonHeight,\n            }\n\n        return (\n          <Skeleton\n            key={numbers.length.toString() + number}\n            startColor={startColor}\n            endColor={endColor}\n            isLoaded={isLoaded}\n            fadeDuration={fadeDuration}\n            speed={speed}\n            {...sizeProps}\n          >\n            {\n              // allows animating the children\n              index === 0 ? children : undefined\n            }\n          </Skeleton>\n        )\n      })}\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\"\n}\n\nexport const SkeletonCircle: React.FC<SkeletonProps> = ({\n  size = \"2rem\",\n  ...rest\n}) => <Skeleton borderRadius=\"full\" boxSize={size} {...rest} />\n\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\"\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}