{"ast":null,"code":"import { mode } from \"@chakra-ui/theme-tools\";\nvar parts = [\"overlay\", \"dialogContainer\", \"dialog\", \"header\", \"closeButton\", \"body\", \"footer\"];\nvar baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\"\n};\nfunction baseStyleDialogContainer(props) {\n  var {\n    isCentered,\n    scrollBehavior\n  } = props;\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\"\n  };\n}\nfunction baseStyleDialog(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100% - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props)\n  };\n}\nvar baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\"\n};\nvar baseStyleCloseButton = {\n  position: \"absolute\",\n  top: 2,\n  insetEnd: 3\n};\nfunction baseStyleBody(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined\n  };\n}\nvar baseStyleFooter = {\n  px: 6,\n  py: 4\n};\nvar baseStyle = props => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  closeButton: baseStyleCloseButton,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter\n});\n/**\r\n * Since the `maxWidth` prop references theme.sizes internally,\r\n * we can leverage that to size our modals.\r\n */\n\nfunction getSize(value) {\n  if (value === \"full\") {\n    return {\n      dialog: {\n        maxW: \"100vw\",\n        minH: \"100vh\"\n      }\n    };\n  }\n  return {\n    dialog: {\n      maxW: value\n    }\n  };\n}\nvar sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"names":["mode","parts","baseStyleOverlay","bg","zIndex","baseStyleDialogContainer","props","isCentered","scrollBehavior","display","justifyContent","alignItems","overflow","baseStyleDialog","borderRadius","color","my","maxH","undefined","boxShadow","baseStyleHeader","px","py","fontSize","fontWeight","baseStyleCloseButton","position","top","insetEnd","baseStyleBody","flex","baseStyleFooter","baseStyle","overlay","dialogContainer","dialog","header","closeButton","body","footer","getSize","value","maxW","minH","sizes","xs","sm","md","lg","xl","full","defaultProps","size"],"sources":["../../../src/components/modal.ts"],"sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\n  \"overlay\",\n  \"dialogContainer\",\n  \"dialog\",\n  \"header\",\n  \"closeButton\",\n  \"body\",\n  \"footer\",\n]\n\nconst baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\",\n}\n\ntype Dict = Record<string, any>\n\nfunction baseStyleDialogContainer(props: Dict) {\n  const { isCentered, scrollBehavior } = props\n\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\",\n  }\n}\n\nfunction baseStyleDialog(props: Dict) {\n  const { scrollBehavior } = props\n\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100% - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props),\n  }\n}\n\nconst baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\",\n}\n\nconst baseStyleCloseButton = {\n  position: \"absolute\",\n  top: 2,\n  insetEnd: 3,\n}\n\nfunction baseStyleBody(props: Dict) {\n  const { scrollBehavior } = props\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined,\n  }\n}\n\nconst baseStyleFooter = {\n  px: 6,\n  py: 4,\n}\n\nconst baseStyle = (props: Dict) => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  closeButton: baseStyleCloseButton,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter,\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { dialog: { maxW: \"100vw\", minH: \"100vh\" } }\n  }\n  return { dialog: { maxW: value } }\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\"),\n}\n\nconst defaultProps = {\n  size: \"md\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}