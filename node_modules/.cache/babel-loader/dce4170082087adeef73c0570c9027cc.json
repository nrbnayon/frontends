{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { PinInputDescendantsProvider, PinInputProvider, usePinInput, usePinInputField } from \"./use-pin-input\";\nexport var PinInput = props => {\n  var styles = useStyleConfig(\"PinInput\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    {\n      children\n    } = _omitThemingProps,\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"children\"]);\n  var _usePinInput = usePinInput(rest),\n    {\n      descendants\n    } = _usePinInput,\n    context = _objectWithoutPropertiesLoose(_usePinInput, [\"descendants\"]);\n  var clones = getValidChildren(children).map(child => /*#__PURE__*/React.cloneElement(child, {\n    __css: styles\n  }));\n  return /*#__PURE__*/React.createElement(PinInputDescendantsProvider, {\n    value: descendants\n  }, /*#__PURE__*/React.createElement(PinInputProvider, {\n    value: context\n  }, clones));\n};\nif (__DEV__) {\n  PinInput.displayName = \"PinInput\";\n}\nexport var PinInputField = /*#__PURE__*/forwardRef((props, ref) => {\n  var inputProps = usePinInputField(props, ref);\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, inputProps, {\n    className: cx(\"chakra-pin-input\", props.className)\n  }));\n});\nif (__DEV__) {\n  PinInputField.displayName = \"PinInputField\";\n}","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","getValidChildren","React","PinInputDescendantsProvider","PinInputProvider","usePinInput","usePinInputField","PinInput","props","styles","_omitThemingProps","children","rest","_objectWithoutPropertiesLoose","_usePinInput","descendants","context","clones","map","child","cloneElement","__css","createElement","value","displayName","PinInputField","ref","inputProps","input","_extends","className"],"sources":["../../src/pin-input.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { getValidChildren } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  PinInputDescendantsProvider,\n  PinInputProvider,\n  usePinInput,\n  usePinInputField,\n  UsePinInputProps,\n} from \"./use-pin-input\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n}\n\nexport interface PinInputProps\n  extends UsePinInputProps,\n    ThemingProps<\"PinInput\">,\n    InputOptions {\n  /**\n   * The children of the pin input component\n   */\n  children: React.ReactNode\n}\n\nexport const PinInput: React.FC<PinInputProps> = (props) => {\n  const styles = useStyleConfig(\"PinInput\", props)\n\n  const { children, ...rest } = omitThemingProps(props)\n  const { descendants, ...context } = usePinInput(rest)\n\n  const clones = getValidChildren(children).map((child) =>\n    React.cloneElement(child, { __css: styles }),\n  )\n\n  return (\n    <PinInputDescendantsProvider value={descendants}>\n      <PinInputProvider value={context}>{clones}</PinInputProvider>\n    </PinInputDescendantsProvider>\n  )\n}\n\nif (__DEV__) {\n  PinInput.displayName = \"PinInput\"\n}\n\nexport interface PinInputFieldProps extends HTMLChakraProps<\"input\"> {}\n\nexport const PinInputField = forwardRef<PinInputFieldProps, \"input\">(\n  (props, ref) => {\n    const inputProps = usePinInputField(props, ref)\n    return (\n      <chakra.input\n        {...inputProps}\n        className={cx(\"chakra-pin-input\", props.className)}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  PinInputField.displayName = \"PinInputField\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAKEC,cALF,QAOO,mBAPP;AAQA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,2BADF,EAEEC,gBAFF,EAGEC,WAHF,EAIEC,gBAJF,QAMO,iBANP;AAiCA,OAAO,IAAMC,QAAiC,GAAIC,KAAD,IAAW;EAC1D,IAAMC,MAAM,GAAGX,cAAc,CAAC,UAAD,EAAaU,KAAb,CAA7B;EAEA,IAAAE,iBAAA,GAA8Bb,gBAAgB,CAACW,KAAD,CAA9C;IAAM;MAAEG;IAAF,CAAN,GAAAD,iBAAA;IAAqBE,IAArB,GAAAC,6BAAA,CAAAH,iBAAA;EACA,IAAAI,YAAA,GAAoCT,WAAW,CAACO,IAAD,CAA/C;IAAM;MAAEG;IAAF,CAAN,GAAAD,YAAA;IAAwBE,OAAxB,GAAAH,6BAAA,CAAAC,YAAA;EAEA,IAAMG,MAAM,GAAGhB,gBAAgB,CAACU,QAAD,CAAhB,CAA2BO,GAA3B,CAAgCC,KAAD,iBAC5CjB,KAAK,CAACkB,YAAN,CAAmBD,KAAnB,EAA0B;IAAEE,KAAK,EAAEZ;EAAT,CAA1B,CADa,CAAf;EAIA,oBACEP,KAAA,CAAAoB,aAAA,CAACnB,2BAAD;IAA6BoB,KAAK,EAAER;EAApC,gBACEb,KAAA,CAAAoB,aAAA,CAAClB,gBAAD;IAAkBmB,KAAK,EAAEP;EAAzB,GAAmCC,MAAnC,CADF,CADF;AAKD,CAfM;AAiBP,IAAIjB,OAAJ,EAAa;EACXO,QAAQ,CAACiB,WAAT,GAAuB,UAAvB;AACD;AAID,OAAO,IAAMC,aAAa,gBAAG7B,UAAU,CACrC,CAACY,KAAD,EAAQkB,GAAR,KAAgB;EACd,IAAMC,UAAU,GAAGrB,gBAAgB,CAACE,KAAD,EAAQkB,GAAR,CAAnC;EACA,oBACExB,KAAA,CAAAoB,aAAA,CAAC3B,MAAD,CAAQiC,KAAR,EAAAC,QAAA,KACMF,UADN;IAEEG,SAAS,EAAE/B,EAAE,CAAC,kBAAD,EAAqBS,KAAK,CAACsB,SAA3B;EAFf,GADF;AAMD,CAToC,CAAhC;AAYP,IAAI9B,OAAJ,EAAa;EACXyB,aAAa,CAACD,WAAd,GAA4B,eAA5B;AACD"},"metadata":{},"sourceType":"module"}