{"ast":null,"code":"export { default as mergeWith } from \"lodash.mergewith\";\nexport function omit(object, keys) {\n  var result = {};\n  Object.keys(object).forEach(key => {\n    if (keys.includes(key)) return;\n    result[key] = object[key];\n  });\n  return result;\n}\nexport function pick(object, keys) {\n  var result = {};\n  keys.forEach(key => {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  });\n  return result;\n}\nexport function split(object, keys) {\n  var picked = {};\n  var omitted = {};\n  Object.keys(object).forEach(key => {\n    if (keys.includes(key)) {\n      picked[key] = object[key];\n    } else {\n      omitted[key] = object[key];\n    }\n  });\n  return [picked, omitted];\n}\n/**\r\n * Get value from a deeply nested object using a string path.\r\n * Memoizes the value.\r\n * @param obj - the object\r\n * @param path - the string path\r\n * @param def  - the fallback value\r\n */\n\nexport function get(obj, path, fallback, index) {\n  var key = typeof path === \"string\" ? path.split(\".\") : [path];\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break;\n    obj = obj[key[index]];\n  }\n  return obj === undefined ? fallback : obj;\n}\nexport var memoize = fn => {\n  var cache = new WeakMap();\n  var memoizedFn = (obj, path, fallback, index) => {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback);\n    }\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map());\n    }\n    var map = cache.get(obj);\n    if (map.has(path)) {\n      return map.get(path);\n    }\n    var value = fn(obj, path, fallback, index);\n    map.set(path, value);\n    return value;\n  };\n  return memoizedFn;\n};\nexport var memoizedGet = memoize(get);\n/**\r\n * Get value from deeply nested object, based on path\r\n * It returns the path value if not found in object\r\n *\r\n * @param path - the string path or value\r\n * @param scale - the string path or value\r\n */\n\nexport function getWithDefault(path, scale) {\n  return memoizedGet(scale, path, path);\n}\n\n/**\r\n * Returns the items of an object that meet the condition specified in a callback function.\r\n *\r\n * @param object the object to loop through\r\n * @param fn The filter function\r\n */\nexport function objectFilter(object, fn) {\n  var result = {};\n  Object.keys(object).forEach(key => {\n    var value = object[key];\n    var shouldPass = fn(value, key, object);\n    if (shouldPass) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\nexport var filterUndefined = object => objectFilter(object, val => val !== null && val !== undefined);\nexport var objectKeys = obj => Object.keys(obj);\n/**\r\n * Object.entries polyfill for Nodev10 compatibility\r\n */\n\nexport var fromEntries = entries => entries.reduce((carry, _ref) => {\n  var [key, value] = _ref;\n  carry[key] = value;\n  return carry;\n}, {});\n/**\r\n * Get the CSS variable ref stored in the theme\r\n */\n\nexport var getCSSVar = (theme, scale, value) => {\n  var _theme$__cssMap$$varR, _theme$__cssMap$;\n  return (_theme$__cssMap$$varR = (_theme$__cssMap$ = theme.__cssMap[scale + \".\" + value]) == null ? void 0 : _theme$__cssMap$.varRef) != null ? _theme$__cssMap$$varR : value;\n};","map":{"version":3,"names":["default","mergeWith","omit","object","keys","result","Object","forEach","key","includes","pick","split","picked","omitted","get","obj","path","fallback","index","length","undefined","memoize","fn","cache","WeakMap","memoizedFn","has","set","Map","map","value","memoizedGet","getWithDefault","scale","objectFilter","shouldPass","filterUndefined","val","objectKeys","fromEntries","entries","reduce","carry","_ref","getCSSVar","theme","_theme$__cssMap$$varR","_theme$__cssMap$","__cssMap","varRef"],"sources":["../../src/object.ts"],"sourcesContent":["import type { Dict, Omit } from \"./types\"\n\nexport { default as mergeWith } from \"lodash.mergewith\"\n\nexport function omit<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    if (keys.includes(key as K)) return\n    result[key] = object[key]\n  })\n\n  return result as Omit<T, K>\n}\n\nexport function pick<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result = {} as { [P in K]: T[P] }\n\n  keys.forEach((key) => {\n    if (key in object) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nexport function split<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const picked: Dict = {}\n  const omitted: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    if (keys.includes(key as T[K])) {\n      picked[key] = object[key]\n    } else {\n      omitted[key] = object[key]\n    }\n  })\n\n  return [picked, omitted] as [{ [P in K]: T[P] }, Omit<T, K>]\n}\n\n/**\n * Get value from a deeply nested object using a string path.\n * Memoizes the value.\n * @param obj - the object\n * @param path - the string path\n * @param def  - the fallback value\n */\nexport function get(\n  obj: object,\n  path: string | number,\n  fallback?: any,\n  index?: number,\n) {\n  const key = typeof path === \"string\" ? path.split(\".\") : [path]\n\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break\n    obj = obj[key[index]]\n  }\n\n  return obj === undefined ? fallback : obj\n}\n\ntype Get = (\n  obj: Readonly<object>,\n  path: string | number,\n  fallback?: any,\n  index?: number,\n) => any\n\nexport const memoize = (fn: Get) => {\n  const cache = new WeakMap()\n\n  const memoizedFn: Get = (obj, path, fallback, index) => {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback)\n    }\n\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map())\n    }\n\n    const map = cache.get(obj)\n\n    if (map.has(path)) {\n      return map.get(path)\n    }\n\n    const value = fn(obj, path, fallback, index)\n\n    map.set(path, value)\n\n    return value\n  }\n\n  return memoizedFn\n}\n\nexport const memoizedGet = memoize(get)\n\n/**\n * Get value from deeply nested object, based on path\n * It returns the path value if not found in object\n *\n * @param path - the string path or value\n * @param scale - the string path or value\n */\nexport function getWithDefault(path: any, scale: any) {\n  return memoizedGet(scale, path, path)\n}\n\ntype FilterFn<T> = (value: any, key: string, object: T) => boolean\n\n/**\n * Returns the items of an object that meet the condition specified in a callback function.\n *\n * @param object the object to loop through\n * @param fn The filter function\n */\nexport function objectFilter<T extends Dict>(object: T, fn: FilterFn<T>) {\n  const result: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    const value = object[key]\n    const shouldPass = fn(value, key, object)\n    if (shouldPass) {\n      result[key] = value\n    }\n  })\n\n  return result\n}\n\nexport const filterUndefined = (object: Dict) =>\n  objectFilter(object, (val) => val !== null && val !== undefined)\n\nexport const objectKeys = <T extends Dict>(obj: T) =>\n  (Object.keys(obj) as unknown) as (keyof T)[]\n\n/**\n * Object.entries polyfill for Nodev10 compatibility\n */\nexport const fromEntries = <T extends unknown>(entries: [string, any][]) =>\n  entries.reduce((carry, [key, value]) => {\n    carry[key] = value\n    return carry\n  }, {}) as T\n\n/**\n * Get the CSS variable ref stored in the theme\n */\nexport const getCSSVar = (theme: Dict, scale: string, value: any) =>\n  theme.__cssMap[`${scale}.${value}`]?.varRef ?? value\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}