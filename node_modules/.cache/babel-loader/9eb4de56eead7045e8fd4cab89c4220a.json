{"ast":null,"code":"import { isCssVar, isNumber, isString } from \"@chakra-ui/utils\";\nimport { backdropFilterTemplate, filterTemplate, getRingTemplate, getTransformGpuTemplate, getTransformTemplate, flexDirectionTemplate } from \"./templates\";\nimport { gradientTransform } from \"./parse-gradient\";\nvar analyzeCSSValue = value => {\n  var num = parseFloat(value.toString());\n  var unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit\n  };\n};\nvar wrap = str => value => str + \"(\" + value + \")\";\nexport var transformFunctions = {\n  filter(value) {\n    return value !== \"auto\" ? value : filterTemplate;\n  },\n  backdropFilter(value) {\n    return value !== \"auto\" ? value : backdropFilterTemplate;\n  },\n  ring(value) {\n    return getRingTemplate(transformFunctions.px(value));\n  },\n  bgClip(value) {\n    return value === \"text\" ? {\n      color: \"transparent\",\n      backgroundClip: \"text\"\n    } : {\n      backgroundClip: value\n    };\n  },\n  transform(value) {\n    if (value === \"auto\") return getTransformTemplate();\n    if (value === \"auto-gpu\") return getTransformGpuTemplate();\n    return value;\n  },\n  px(value) {\n    if (value == null) return value;\n    var {\n      unitless\n    } = analyzeCSSValue(value);\n    return unitless || isNumber(value) ? value + \"px\" : value;\n  },\n  fraction(value) {\n    return !isNumber(value) || value > 1 ? value : value * 100 + \"%\";\n  },\n  float(value, theme) {\n    var map = {\n      left: \"right\",\n      right: \"left\"\n    };\n    return theme.direction === \"rtl\" ? map[value] : value;\n  },\n  degree(value) {\n    if (isCssVar(value) || value == null) return value;\n    var unitless = isString(value) && !value.endsWith(\"deg\");\n    return isNumber(value) || unitless ? value + \"deg\" : value;\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage(value) {\n    return isString(value) && !value.startsWith(\"url\") ? \"url(\" + value + \")\" : value;\n  },\n  outline(value) {\n    var isNoneOrZero = String(value) === \"0\" || String(value) === \"none\";\n    return value !== null && isNoneOrZero ? {\n      outline: \"2px solid transparent\",\n      outlineOffset: \"2px\"\n    } : {\n      outline: value\n    };\n  },\n  flexDirection(value) {\n    var _flexDirectionTemplat;\n    var {\n      space,\n      divide\n    } = (_flexDirectionTemplat = flexDirectionTemplate[value]) != null ? _flexDirectionTemplat : {};\n    var result = {\n      flexDirection: value\n    };\n    if (space) result[space] = 1;\n    if (divide) result[divide] = 1;\n    return result;\n  }\n};","map":{"version":3,"names":["isCssVar","isNumber","isString","backdropFilterTemplate","filterTemplate","getRingTemplate","getTransformGpuTemplate","getTransformTemplate","flexDirectionTemplate","gradientTransform","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","wrap","str","transformFunctions","filter","backdropFilter","ring","px","bgClip","color","backgroundClip","transform","fraction","float","theme","map","left","right","direction","degree","endsWith","gradient","blur","opacity","brightness","contrast","dropShadow","grayscale","hueRotate","invert","saturate","sepia","bgImage","startsWith","outline","isNoneOrZero","outlineOffset","flexDirection","_flexDirectionTemplat","space","divide","result"],"sources":["../../../src/utils/transform-functions.ts"],"sourcesContent":["import { Dict, isCssVar, isNumber, isString } from \"@chakra-ui/utils\"\nimport {\n  backdropFilterTemplate,\n  filterTemplate,\n  getRingTemplate,\n  getTransformGpuTemplate,\n  getTransformTemplate,\n  flexDirectionTemplate,\n} from \"./templates\"\nimport { gradientTransform } from \"./parse-gradient\"\n\nconst analyzeCSSValue = (value: number | string) => {\n  const num = parseFloat(value.toString())\n  const unit = value.toString().replace(String(num), \"\")\n  return { unitless: !unit, value: num, unit }\n}\n\nconst wrap = (str: string) => (value: any) => `${str}(${value})`\n\nexport const transformFunctions = {\n  filter(value: any) {\n    return value !== \"auto\" ? value : filterTemplate\n  },\n  backdropFilter(value: any) {\n    return value !== \"auto\" ? value : backdropFilterTemplate\n  },\n  ring(value: string) {\n    return getRingTemplate(transformFunctions.px(value))\n  },\n  bgClip(value: string) {\n    return value === \"text\"\n      ? { color: \"transparent\", backgroundClip: \"text\" }\n      : { backgroundClip: value }\n  },\n  transform(value: any) {\n    if (value === \"auto\") return getTransformTemplate()\n    if (value === \"auto-gpu\") return getTransformGpuTemplate()\n    return value\n  },\n  px(value: number | string) {\n    if (value == null) return value\n    const { unitless } = analyzeCSSValue(value)\n    return unitless || isNumber(value) ? `${value}px` : value\n  },\n  fraction(value: any) {\n    return !isNumber(value) || value > 1 ? value : `${value * 100}%`\n  },\n  float(value: any, theme: Dict) {\n    const map = { left: \"right\", right: \"left\" }\n    return theme.direction === \"rtl\" ? map[value] : value\n  },\n  degree(value: any) {\n    if (isCssVar(value) || value == null) return value\n    const unitless = isString(value) && !value.endsWith(\"deg\")\n    return isNumber(value) || unitless ? `${value}deg` : value\n  },\n  gradient: gradientTransform,\n  blur: wrap(\"blur\"),\n  opacity: wrap(\"opacity\"),\n  brightness: wrap(\"brightness\"),\n  contrast: wrap(\"contrast\"),\n  dropShadow: wrap(\"drop-shadow\"),\n  grayscale: wrap(\"grayscale\"),\n  hueRotate: wrap(\"hue-rotate\"),\n  invert: wrap(\"invert\"),\n  saturate: wrap(\"saturate\"),\n  sepia: wrap(\"sepia\"),\n  bgImage(value: any) {\n    return isString(value) && !value.startsWith(\"url\") ? `url(${value})` : value\n  },\n  outline(value: any) {\n    const isNoneOrZero = String(value) === \"0\" || String(value) === \"none\"\n    return value !== null && isNoneOrZero\n      ? { outline: \"2px solid transparent\", outlineOffset: \"2px\" }\n      : { outline: value }\n  },\n  flexDirection(value: any) {\n    const { space, divide } = flexDirectionTemplate[value] ?? {}\n    const result = { flexDirection: value }\n    if (space) result[space] = 1\n    if (divide) result[divide] = 1\n    return result\n  },\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}