{"ast":null,"code":"import { isObject, runIfFn } from \"@chakra-ui/utils\";\n/**\r\n * Expands an array or object syntax responsive style.\r\n *\r\n * @example\r\n * expandResponsive({ mx: [1, 2] })\r\n * // or\r\n * expandResponsive({ mx: { base: 1, sm: 2 } })\r\n *\r\n * // => { mx: 1, \"@media(min-width:<sm>)\": { mx: 2 } }\r\n */\n\nexport var expandResponsive = styles => theme => {\n  /**\r\n   * Before any style can be processed, the user needs to call `toCSSVar`\r\n   * which analyzes the theme's breakpoint and appends a `__breakpoints` property\r\n   * to the theme with more details of the breakpoints.\r\n   *\r\n   * To learn more, go here: packages/utils/src/responsive.ts #analyzeBreakpoints\r\n   */\n  if (!theme.__breakpoints) return styles;\n  var {\n    isResponsive,\n    toArrayValue,\n    media: medias\n  } = theme.__breakpoints;\n  var computedStyles = {};\n  for (var key in styles) {\n    var value = runIfFn(styles[key], theme);\n    if (value == null) continue; // converts the object responsive syntax to array syntax\n\n    value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value;\n    if (!Array.isArray(value)) {\n      computedStyles[key] = value;\n      continue;\n    }\n    var queries = value.slice(0, medias.length).length;\n    for (var index = 0; index < queries; index += 1) {\n      var media = medias == null ? void 0 : medias[index];\n      if (!media) {\n        computedStyles[key] = value[index];\n        continue;\n      }\n      computedStyles[media] = computedStyles[media] || {};\n      if (value[index] == null) {\n        continue;\n      }\n      computedStyles[media][key] = value[index];\n    }\n  }\n  return computedStyles;\n};","map":{"version":3,"names":["isObject","runIfFn","expandResponsive","styles","theme","__breakpoints","isResponsive","toArrayValue","media","medias","computedStyles","key","value","Array","isArray","queries","slice","length","index"],"sources":["../../../src/utils/expand-responsive.ts"],"sourcesContent":["import { Dict, isObject, runIfFn } from \"@chakra-ui/utils\"\n\n/**\n * Expands an array or object syntax responsive style.\n *\n * @example\n * expandResponsive({ mx: [1, 2] })\n * // or\n * expandResponsive({ mx: { base: 1, sm: 2 } })\n *\n * // => { mx: 1, \"@media(min-width:<sm>)\": { mx: 2 } }\n */\nexport const expandResponsive = (styles: Dict) => (theme: Dict) => {\n  /**\n   * Before any style can be processed, the user needs to call `toCSSVar`\n   * which analyzes the theme's breakpoint and appends a `__breakpoints` property\n   * to the theme with more details of the breakpoints.\n   *\n   * To learn more, go here: packages/utils/src/responsive.ts #analyzeBreakpoints\n   */\n  if (!theme.__breakpoints) return styles\n  const { isResponsive, toArrayValue, media: medias } = theme.__breakpoints\n\n  const computedStyles: Dict = {}\n\n  for (const key in styles) {\n    let value = runIfFn(styles[key], theme)\n\n    if (value == null) continue\n\n    // converts the object responsive syntax to array syntax\n    value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value\n\n    if (!Array.isArray(value)) {\n      computedStyles[key] = value\n      continue\n    }\n\n    const queries = value.slice(0, medias.length).length\n\n    for (let index = 0; index < queries; index += 1) {\n      const media = medias?.[index]\n\n      if (!media) {\n        computedStyles[key] = value[index]\n        continue\n      }\n\n      computedStyles[media] = computedStyles[media] || {}\n\n      if (value[index] == null) {\n        continue\n      }\n\n      computedStyles[media][key] = value[index]\n    }\n  }\n\n  return computedStyles\n}\n"],"mappings":"AAAA,SAAeA,QAAf,EAAyBC,OAAzB,QAAwC,kBAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,gBAAgB,GAAIC,MAAD,IAAmBC,KAAD,IAAiB;EACjE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,IAAI,CAACA,KAAK,CAACC,aAAX,EAA0B,OAAOF,MAAP;EAC1B,IAAM;IAAEG,YAAF;IAAgBC,YAAhB;IAA8BC,KAAK,EAAEC;EAArC,IAAgDL,KAAK,CAACC,aAA5D;EAEA,IAAMK,cAAoB,GAAG,EAA7B;EAEA,KAAK,IAAMC,GAAX,IAAkBR,MAAlB,EAA0B;IACxB,IAAIS,KAAK,GAAGX,OAAO,CAACE,MAAM,CAACQ,GAAD,CAAP,EAAcP,KAAd,CAAnB;IAEA,IAAIQ,KAAK,IAAI,IAAb,EAAmB,SAHK,CAKxB;;IACAA,KAAK,GAAGZ,QAAQ,CAACY,KAAD,CAAR,IAAmBN,YAAY,CAACM,KAAD,CAA/B,GAAyCL,YAAY,CAACK,KAAD,CAArD,GAA+DA,KAAvE;IAEA,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;MACzBF,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAtB;MACA;IACD;IAED,IAAMG,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeP,MAAM,CAACQ,MAAtB,EAA8BA,MAA9C;IAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,OAA5B,EAAqCG,KAAK,IAAI,CAA9C,EAAiD;MAC/C,IAAMV,KAAK,GAAGC,MAAH,oBAAGA,MAAM,CAAGS,KAAH,CAApB;MAEA,IAAI,CAACV,KAAL,EAAY;QACVE,cAAc,CAACC,GAAD,CAAd,GAAsBC,KAAK,CAACM,KAAD,CAA3B;QACA;MACD;MAEDR,cAAc,CAACF,KAAD,CAAd,GAAwBE,cAAc,CAACF,KAAD,CAAd,IAAyB,EAAjD;MAEA,IAAII,KAAK,CAACM,KAAD,CAAL,IAAgB,IAApB,EAA0B;QACxB;MACD;MAEDR,cAAc,CAACF,KAAD,CAAd,CAAsBG,GAAtB,IAA6BC,KAAK,CAACM,KAAD,CAAlC;IACD;EACF;EAED,OAAOR,cAAP;AACD,CA/CM"},"metadata":{},"sourceType":"module"}