{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { dataAttr, isRightClick } from \"@chakra-ui/utils\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useEventListeners } from \"./use-event-listeners\";\nfunction isValidElement(event) {\n  var element = event.target;\n  var {\n    tagName,\n    isContentEditable\n  } = element;\n  return tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true;\n}\n/**\r\n * useClickable implements all the interactions of a native `button`\r\n * component with support for making it focusable even if it is disabled.\r\n *\r\n * It can be used with both native button elements or other elements (like `div`).\r\n */\n\nexport function useClickable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n      ref: htmlRef,\n      isDisabled,\n      isFocusable,\n      clickOnEnter = true,\n      clickOnSpace = true,\n      onMouseDown,\n      onMouseUp,\n      onClick,\n      onKeyDown,\n      onKeyUp,\n      tabIndex: tabIndexProp,\n      onMouseOver,\n      onMouseLeave\n    } = props,\n    htmlProps = _objectWithoutPropertiesLoose(props, [\"ref\", \"isDisabled\", \"isFocusable\", \"clickOnEnter\", \"clickOnSpace\", \"onMouseDown\", \"onMouseUp\", \"onClick\", \"onKeyDown\", \"onKeyUp\", \"tabIndex\", \"onMouseOver\", \"onMouseLeave\"]);\n  /**\r\n   * We'll use this to track if the element is a button element\r\n   */\n\n  var [isButton, setIsButton] = React.useState(true);\n  /**\r\n   * For custom button implementation, we'll use this to track when\r\n   * we mouse down on the button, to enable use style its \":active\" style\r\n   */\n\n  var [isPressed, setIsPressed] = React.useState(false);\n  var listeners = useEventListeners();\n  /**\r\n   * The ref callback that fires as soon as the dom node is ready\r\n   */\n\n  var refCallback = node => {\n    if (!node) return;\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false);\n    }\n  };\n  var tabIndex = isButton ? tabIndexProp : tabIndexProp || 0;\n  var trulyDisabled = isDisabled && !isFocusable;\n  var handleClick = React.useCallback(event => {\n    if (isDisabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    var self = event.currentTarget;\n    self.focus();\n    onClick == null ? void 0 : onClick(event);\n  }, [isDisabled, onClick]);\n  var onDocumentKeyUp = React.useCallback(e => {\n    if (isPressed && isValidElement(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsPressed(false); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      listeners.remove(document, \"keyup\", onDocumentKeyUp, false);\n    }\n  }, [isPressed, listeners]);\n  var handleKeyDown = React.useCallback(event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (isDisabled || event.defaultPrevented || event.metaKey) {\n      return;\n    }\n    if (!isValidElement(event.nativeEvent) || isButton) return;\n    var shouldClickOnEnter = clickOnEnter && event.key === \"Enter\";\n    var shouldClickOnSpace = clickOnSpace && event.key === \" \";\n    if (shouldClickOnSpace) {\n      event.preventDefault();\n      setIsPressed(true);\n    }\n    if (shouldClickOnEnter) {\n      event.preventDefault();\n      var self = event.currentTarget;\n      self.click();\n    }\n    listeners.add(document, \"keyup\", onDocumentKeyUp, false);\n  }, [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace, listeners, onDocumentKeyUp]);\n  var handleKeyUp = React.useCallback(event => {\n    onKeyUp == null ? void 0 : onKeyUp(event);\n    if (isDisabled || event.defaultPrevented || event.metaKey) return;\n    if (!isValidElement(event.nativeEvent) || isButton) return;\n    var shouldClickOnSpace = clickOnSpace && event.key === \" \";\n    if (shouldClickOnSpace) {\n      event.preventDefault();\n      setIsPressed(false);\n      var self = event.currentTarget;\n      self.click();\n    }\n  }, [clickOnSpace, isButton, isDisabled, onKeyUp]);\n  var onDocumentMouseUp = React.useCallback(event => {\n    if (event.button !== 0) return;\n    setIsPressed(false);\n    listeners.remove(document, \"mouseup\", onDocumentMouseUp, false);\n  }, [listeners]);\n  var handleMouseDown = React.useCallback(event => {\n    if (isRightClick(event)) return;\n    if (isDisabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (!isButton) {\n      setIsPressed(true);\n    }\n    var target = event.currentTarget;\n    target.focus({\n      preventScroll: true\n    });\n    listeners.add(document, \"mouseup\", onDocumentMouseUp, false);\n    onMouseDown == null ? void 0 : onMouseDown(event);\n  }, [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp]);\n  var handleMouseUp = React.useCallback(event => {\n    if (isRightClick(event)) return;\n    if (!isButton) {\n      setIsPressed(false);\n    }\n    onMouseUp == null ? void 0 : onMouseUp(event);\n  }, [onMouseUp, isButton]);\n  var handleMouseOver = React.useCallback(event => {\n    if (isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [isDisabled, onMouseOver]);\n  var handleMouseLeave = React.useCallback(event => {\n    if (isPressed) {\n      event.preventDefault();\n      setIsPressed(false);\n    }\n    onMouseLeave == null ? void 0 : onMouseLeave(event);\n  }, [isPressed, onMouseLeave]);\n  var ref = mergeRefs(htmlRef, refCallback);\n  if (isButton) {\n    return _extends({}, htmlProps, {\n      ref,\n      type: \"button\",\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave\n    });\n  }\n  return _extends({}, htmlProps, {\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? \"true\" : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave\n  });\n}","map":{"version":3,"names":["dataAttr","isRightClick","mergeRefs","React","useEventListeners","isValidElement","event","element","target","tagName","isContentEditable","useClickable","props","ref","htmlRef","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndex","tabIndexProp","onMouseOver","onMouseLeave","htmlProps","_objectWithoutPropertiesLoose","isButton","setIsButton","useState","isPressed","setIsPressed","listeners","refCallback","node","trulyDisabled","handleClick","useCallback","stopPropagation","preventDefault","self","currentTarget","focus","onDocumentKeyUp","e","remove","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","shouldClickOnEnter","key","shouldClickOnSpace","click","add","handleKeyUp","onDocumentMouseUp","button","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","_extends","type","undefined","disabled","role"],"sources":["../../src/use-clickable.ts"],"sourcesContent":["import { dataAttr, isRightClick } from \"@chakra-ui/utils\"\nimport { mergeRefs } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useEventListeners } from \"./use-event-listeners\"\n\nexport interface UseClickableProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element\n   */\n  ref?: React.Ref<HTMLElement>\n}\n\nfunction isValidElement(event: KeyboardEvent): boolean {\n  const element = event.target as HTMLElement\n  const { tagName, isContentEditable } = element\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    onMouseLeave,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = React.useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n  const [isPressed, setIsPressed] = React.useState(false)\n\n  const listeners = useEventListeners()\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = (node: any) => {\n    if (!node) return\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (isPressed && isValidElement(e)) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setIsPressed(false)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = React.useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n      setIsPressed(false)\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsPressed(true)\n      }\n\n      const target = event.currentTarget as HTMLElement\n      target.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (!isButton) {\n        setIsPressed(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        event.preventDefault()\n        setIsPressed(false)\n      }\n      onMouseLeave?.(event)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}