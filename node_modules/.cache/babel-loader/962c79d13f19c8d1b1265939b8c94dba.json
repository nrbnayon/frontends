{"ast":null,"code":"/**\r\n * Unmemoized version of {@link useRefToCallback}\r\n * @see {@link useRefToCallback}\r\n * @param ref\r\n */\nexport function refToCallback(ref) {\n  return function (newValue) {\n    if (typeof ref === 'function') {\n      ref(newValue);\n    } else if (ref) {\n      ref.current = newValue;\n    }\n  };\n}\nvar nullCallback = function () {\n  return null;\n};\n// lets maintain a weak ref to, well, ref :)\n// not using `kashe` to keep this package small\nvar weakMem = new WeakMap();\nvar weakMemoize = function (ref) {\n  var usedRef = ref || nullCallback;\n  if (weakMem.has(usedRef)) {\n    return weakMem.get(usedRef);\n  }\n  var cb = refToCallback(usedRef);\n  weakMem.set(usedRef, cb);\n  return cb;\n};\n/**\r\n * Transforms a given `ref` into `callback`.\r\n *\r\n * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\r\n *\r\n * @param {ReactRef} ref\r\n * @returns {Function}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#reftocallback\r\n *\r\n * @example\r\n * const ref = useRef(0);\r\n * const setRef = useRefToCallback(ref);\r\n * ðŸ‘‰ setRef(10);\r\n * âœ… ref.current === 10\r\n */\nexport function useRefToCallback(ref) {\n  return weakMemoize(ref);\n}","map":{"version":3,"names":["refToCallback","ref","newValue","current","nullCallback","weakMem","WeakMap","weakMemoize","usedRef","has","get","cb","set","useRefToCallback"],"sources":["E:/Hasan sir project/ChattersTwo/frontend/node_modules/use-callback-ref/dist/es2015/refToCallback.js"],"sourcesContent":["/**\r\n * Unmemoized version of {@link useRefToCallback}\r\n * @see {@link useRefToCallback}\r\n * @param ref\r\n */\r\nexport function refToCallback(ref) {\r\n    return function (newValue) {\r\n        if (typeof ref === 'function') {\r\n            ref(newValue);\r\n        }\r\n        else if (ref) {\r\n            ref.current = newValue;\r\n        }\r\n    };\r\n}\r\nvar nullCallback = function () { return null; };\r\n// lets maintain a weak ref to, well, ref :)\r\n// not using `kashe` to keep this package small\r\nvar weakMem = new WeakMap();\r\nvar weakMemoize = function (ref) {\r\n    var usedRef = ref || nullCallback;\r\n    if (weakMem.has(usedRef)) {\r\n        return weakMem.get(usedRef);\r\n    }\r\n    var cb = refToCallback(usedRef);\r\n    weakMem.set(usedRef, cb);\r\n    return cb;\r\n};\r\n/**\r\n * Transforms a given `ref` into `callback`.\r\n *\r\n * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\r\n *\r\n * @param {ReactRef} ref\r\n * @returns {Function}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#reftocallback\r\n *\r\n * @example\r\n * const ref = useRef(0);\r\n * const setRef = useRefToCallback(ref);\r\n * ðŸ‘‰ setRef(10);\r\n * âœ… ref.current === 10\r\n */\r\nexport function useRefToCallback(ref) {\r\n    return weakMemoize(ref);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,GAAG,EAAE;EAC/B,OAAO,UAAUC,QAAQ,EAAE;IACvB,IAAI,OAAOD,GAAG,KAAK,UAAU,EAAE;MAC3BA,GAAG,CAACC,QAAQ,CAAC;IACjB,CAAC,MACI,IAAID,GAAG,EAAE;MACVA,GAAG,CAACE,OAAO,GAAGD,QAAQ;IAC1B;EACJ,CAAC;AACL;AACA,IAAIE,YAAY,GAAG,SAAAA,CAAA,EAAY;EAAE,OAAO,IAAI;AAAE,CAAC;AAC/C;AACA;AACA,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;AAC3B,IAAIC,WAAW,GAAG,SAAAA,CAAUN,GAAG,EAAE;EAC7B,IAAIO,OAAO,GAAGP,GAAG,IAAIG,YAAY;EACjC,IAAIC,OAAO,CAACI,GAAG,CAACD,OAAO,CAAC,EAAE;IACtB,OAAOH,OAAO,CAACK,GAAG,CAACF,OAAO,CAAC;EAC/B;EACA,IAAIG,EAAE,GAAGX,aAAa,CAACQ,OAAO,CAAC;EAC/BH,OAAO,CAACO,GAAG,CAACJ,OAAO,EAAEG,EAAE,CAAC;EACxB,OAAOA,EAAE;AACb,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAACZ,GAAG,EAAE;EAClC,OAAOM,WAAW,CAACN,GAAG,CAAC;AAC3B"},"metadata":{},"sourceType":"module"}