{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { useEffect } from \"react\";\n/**\r\n * Proper state management for nested modals.\r\n * Simplified, but inspired by material-ui's ModalManager class.\r\n */\n\nclass ModalManager {\n  constructor() {\n    _defineProperty(this, \"modals\", void 0);\n    this.modals = [];\n  }\n  add(modal) {\n    this.modals.push(modal);\n  }\n  remove(modal) {\n    this.modals = this.modals.filter(_modal => _modal !== modal);\n  }\n  isTopModal(modal) {\n    var topmostModal = this.modals[this.modals.length - 1];\n    return topmostModal === modal;\n  }\n}\nexport var manager = new ModalManager();\nexport function useModalManager(ref, isOpen) {\n  useEffect(() => {\n    if (isOpen) {\n      manager.add(ref);\n    }\n    return () => {\n      manager.remove(ref);\n    };\n  }, [isOpen, ref]);\n}","map":{"version":3,"names":["useEffect","ModalManager","constructor","_defineProperty","modals","add","modal","push","remove","filter","_modal","isTopModal","topmostModal","length","manager","useModalManager","ref","isOpen"],"sources":["../../src/modal-manager.ts"],"sourcesContent":["import { useEffect, Ref } from \"react\"\n\n/**\n * Proper state management for nested modals.\n * Simplified, but inspired by material-ui's ModalManager class.\n */\nclass ModalManager {\n  modals: any[]\n  constructor() {\n    this.modals = []\n  }\n\n  add(modal: any) {\n    this.modals.push(modal)\n  }\n\n  remove(modal: any) {\n    this.modals = this.modals.filter((_modal) => _modal !== modal)\n  }\n\n  isTopModal(modal: any) {\n    const topmostModal = this.modals[this.modals.length - 1]\n    return topmostModal === modal\n  }\n}\n\nexport const manager = new ModalManager()\n\nexport function useModalManager(ref: Ref<any>, isOpen?: boolean) {\n  useEffect(() => {\n    if (isOpen) {\n      manager.add(ref)\n    }\n    return () => {\n      manager.remove(ref)\n    }\n  }, [isOpen, ref])\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA+B,OAA/B;AAEA;AACA;AACA;AACA;;AACA,MAAMC,YAAN,CAAmB;EAEjBC,WAAWA,CAAA,EAAG;IAAAC,eAAA;IACZ,KAAKC,MAAL,GAAc,EAAd;EACD;EAEDC,GAAGA,CAACC,KAAD,EAAa;IACd,KAAKF,MAAL,CAAYG,IAAZ,CAAiBD,KAAjB;EACD;EAEDE,MAAMA,CAACF,KAAD,EAAa;IACjB,KAAKF,MAAL,GAAc,KAAKA,MAAL,CAAYK,MAAZ,CAAoBC,MAAD,IAAYA,MAAM,KAAKJ,KAA1C,CAAd;EACD;EAEDK,UAAUA,CAACL,KAAD,EAAa;IACrB,IAAMM,YAAY,GAAG,KAAKR,MAAL,CAAY,KAAKA,MAAL,CAAYS,MAAZ,GAAqB,CAAjC,CAArB;IACA,OAAOD,YAAY,KAAKN,KAAxB;EACD;AAjBgB;AAoBnB,OAAO,IAAMQ,OAAO,GAAG,IAAIb,YAAJ,EAAhB;AAEP,OAAO,SAASc,eAATA,CAAyBC,GAAzB,EAAwCC,MAAxC,EAA0D;EAC/DjB,SAAS,CAAC,MAAM;IACd,IAAIiB,MAAJ,EAAY;MACVH,OAAO,CAACT,GAAR,CAAYW,GAAZ;IACD;IACD,OAAO,MAAM;MACXF,OAAO,CAACN,MAAR,CAAeQ,GAAf;IACD,CAFD;EAGD,CAPQ,EAON,CAACC,MAAD,EAASD,GAAT,CAPM,CAAT;AAQD"},"metadata":{},"sourceType":"module"}