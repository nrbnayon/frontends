{"ast":null,"code":"import { useCallbackRef } from './useRef';\nimport { assignRef } from './assignRef';\n/**\r\n * Create a _lense_ on Ref, making it possible to transform ref value\r\n * @param {ReactRef} ref\r\n * @param {Function} transformer. ðŸ‘‰ Ref would be __NOT updated__ on `transformer` update.\r\n * @returns {RefObject}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\r\n * @example\r\n *\r\n * const ResizableWithRef = forwardRef((props, ref) =>\r\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\r\n * );\r\n */\n\nexport function useTransformRef(ref, transformer) {\n  return useCallbackRef(undefined, function (value) {\n    return assignRef(ref, transformer(value));\n  });\n}","map":{"version":3,"sources":["E:/Project File/Chatters-a-mern-app/frontend/node_modules/use-callback-ref/dist/es2015/useTransformRef.js"],"names":["useCallbackRef","assignRef","useTransformRef","ref","transformer","undefined","value"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,WAA9B,EAA2C;AAC9C,SAAOJ,cAAc,CAACK,SAAD,EAAY,UAAUC,KAAV,EAAiB;AAC9C,WAAOL,SAAS,CAACE,GAAD,EAAMC,WAAW,CAACE,KAAD,CAAjB,CAAhB;AACH,GAFoB,CAArB;AAGH","sourcesContent":["import { useCallbackRef } from './useRef';\r\nimport { assignRef } from './assignRef';\r\n/**\r\n * Create a _lense_ on Ref, making it possible to transform ref value\r\n * @param {ReactRef} ref\r\n * @param {Function} transformer. ðŸ‘‰ Ref would be __NOT updated__ on `transformer` update.\r\n * @returns {RefObject}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\r\n * @example\r\n *\r\n * const ResizableWithRef = forwardRef((props, ref) =>\r\n *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\r\n * );\r\n */\r\nexport function useTransformRef(ref, transformer) {\r\n    return useCallbackRef(undefined, function (value) {\r\n        return assignRef(ref, transformer(value));\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}