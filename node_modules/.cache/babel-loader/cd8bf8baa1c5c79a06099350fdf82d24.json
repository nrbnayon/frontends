{"ast":null,"code":"import { __assign } from 'tslib';\nimport { useContext, useRef, useMemo } from 'react';\nimport { animate } from 'popmotion';\nimport { isMotionValue } from './utils/is-motion-value.js';\nimport { useMotionValue } from './use-motion-value.js';\nimport { useOnChange } from './use-on-change.js';\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\n\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\nfunction useSpring(source, config) {\n  if (config === void 0) {\n    config = {};\n  }\n  var isStatic = useContext(MotionConfigContext).isStatic;\n  var activeSpringAnimation = useRef(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  useMemo(function () {\n    return value.attach(function (v, set) {\n      /**\r\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\r\n       * at that level, but this will work for now\r\n       */\n      if (isStatic) return set(v);\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n      activeSpringAnimation.current = animate(__assign(__assign({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config), {\n        onUpdate: set\n      }));\n      return value.get();\n    });\n  }, Object.values(config));\n  useOnChange(source, function (v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\nexport { useSpring };","map":{"version":3,"names":["__assign","useContext","useRef","useMemo","animate","isMotionValue","useMotionValue","useOnChange","MotionConfigContext","useSpring","source","config","isStatic","activeSpringAnimation","value","get","attach","v","set","current","stop","from","to","velocity","getVelocity","onUpdate","Object","values","parseFloat"],"sources":["E:/Hasan sir project/ChattersTwo/frontend/node_modules/framer-motion/dist/es/value/use-spring.js"],"sourcesContent":["import { __assign } from 'tslib';\r\nimport { useContext, useRef, useMemo } from 'react';\r\nimport { animate } from 'popmotion';\r\nimport { isMotionValue } from './utils/is-motion-value.js';\r\nimport { useMotionValue } from './use-motion-value.js';\r\nimport { useOnChange } from './use-on-change.js';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.js';\r\n\r\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config) {\r\n    if (config === void 0) { config = {}; }\r\n    var isStatic = useContext(MotionConfigContext).isStatic;\r\n    var activeSpringAnimation = useRef(null);\r\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\r\n    useMemo(function () {\r\n        return value.attach(function (v, set) {\r\n            /**\r\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\r\n             * at that level, but this will work for now\r\n             */\r\n            if (isStatic)\r\n                return set(v);\r\n            if (activeSpringAnimation.current) {\r\n                activeSpringAnimation.current.stop();\r\n            }\r\n            activeSpringAnimation.current = animate(__assign(__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config), { onUpdate: set }));\r\n            return value.get();\r\n        });\r\n    }, Object.values(config));\r\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\r\n    return value;\r\n}\r\n\r\nexport { useSpring };\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,mBAAmB,QAAQ,mCAAmC;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC/B,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;IAAEA,MAAM,GAAG,CAAC,CAAC;EAAE;EACtC,IAAIC,QAAQ,GAAGX,UAAU,CAACO,mBAAmB,CAAC,CAACI,QAAQ;EACvD,IAAIC,qBAAqB,GAAGX,MAAM,CAAC,IAAI,CAAC;EACxC,IAAIY,KAAK,GAAGR,cAAc,CAACD,aAAa,CAACK,MAAM,CAAC,GAAGA,MAAM,CAACK,GAAG,CAAC,CAAC,GAAGL,MAAM,CAAC;EACzEP,OAAO,CAAC,YAAY;IAChB,OAAOW,KAAK,CAACE,MAAM,CAAC,UAAUC,CAAC,EAAEC,GAAG,EAAE;MAClC;AACZ;AACA;AACA;MACY,IAAIN,QAAQ,EACR,OAAOM,GAAG,CAACD,CAAC,CAAC;MACjB,IAAIJ,qBAAqB,CAACM,OAAO,EAAE;QAC/BN,qBAAqB,CAACM,OAAO,CAACC,IAAI,CAAC,CAAC;MACxC;MACAP,qBAAqB,CAACM,OAAO,GAAGf,OAAO,CAACJ,QAAQ,CAACA,QAAQ,CAAC;QAAEqB,IAAI,EAAEP,KAAK,CAACC,GAAG,CAAC,CAAC;QAAEO,EAAE,EAAEL,CAAC;QAAEM,QAAQ,EAAET,KAAK,CAACU,WAAW,CAAC;MAAE,CAAC,EAAEb,MAAM,CAAC,EAAE;QAAEc,QAAQ,EAAEP;MAAI,CAAC,CAAC,CAAC;MACnJ,OAAOJ,KAAK,CAACC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAEW,MAAM,CAACC,MAAM,CAAChB,MAAM,CAAC,CAAC;EACzBJ,WAAW,CAACG,MAAM,EAAE,UAAUO,CAAC,EAAE;IAAE,OAAOH,KAAK,CAACI,GAAG,CAACU,UAAU,CAACX,CAAC,CAAC,CAAC;EAAE,CAAC,CAAC;EACtE,OAAOH,KAAK;AAChB;AAEA,SAASL,SAAS"},"metadata":{},"sourceType":"module"}