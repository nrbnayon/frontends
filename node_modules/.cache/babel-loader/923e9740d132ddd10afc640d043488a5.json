{"ast":null,"code":"import { isCustomValue } from '../../utils/resolve-value.js';\nimport { isMotionValue } from './is-motion-value.js';\n\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\nfunction resolveMotionValue(value) {\n  var unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\nexport { resolveMotionValue };","map":{"version":3,"names":["isCustomValue","isMotionValue","resolveMotionValue","value","unwrappedValue","get","toValue"],"sources":["E:/Hasan sir project/frontend/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.js"],"sourcesContent":["import { isCustomValue } from '../../utils/resolve-value.js';\r\nimport { isMotionValue } from './is-motion-value.js';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\r\nfunction resolveMotionValue(value) {\r\n    var unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,aAAa,QAAQ,sBAAsB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC/B,IAAIC,cAAc,GAAGH,aAAa,CAACE,KAAK,CAAC,GAAGA,KAAK,CAACE,GAAG,CAAC,CAAC,GAAGF,KAAK;EAC/D,OAAOH,aAAa,CAACI,cAAc,CAAC,GAC9BA,cAAc,CAACE,OAAO,CAAC,CAAC,GACxBF,cAAc;AACxB;AAEA,SAASF,kBAAkB"},"metadata":{},"sourceType":"module"}