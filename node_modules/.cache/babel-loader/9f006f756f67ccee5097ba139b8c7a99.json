{"ast":null,"code":"import { isBrowser, __DEV__ } from \"@chakra-ui/utils\";\nimport React, { createContext, useContext, useMemo, useState } from \"react\";\nimport { ssrDocument } from \"./mock-document\";\nimport { ssrWindow } from \"./mock-window\";\nvar mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument\n};\nvar defaultEnv = isBrowser ? {\n  window,\n  document\n} : mockEnv;\nvar EnvironmentContext = /*#__PURE__*/createContext(defaultEnv);\nif (__DEV__) {\n  EnvironmentContext.displayName = \"EnvironmentContext\";\n}\nexport function useEnvironment() {\n  return useContext(EnvironmentContext);\n}\nexport function EnvironmentProvider(props) {\n  var {\n    children,\n    environment: environmentProp\n  } = props;\n  var [node, setNode] = useState(null);\n  var context = useMemo(() => {\n    var _ref;\n    var doc = node == null ? void 0 : node.ownerDocument;\n    var win = node == null ? void 0 : node.ownerDocument.defaultView;\n    var nodeEnv = doc ? {\n      document: doc,\n      window: win\n    } : undefined;\n    var env = (_ref = environmentProp != null ? environmentProp : nodeEnv) != null ? _ref : defaultEnv;\n    return env;\n  }, [node, environmentProp]);\n  var showEnvGetter = !node && !environmentProp;\n  return /*#__PURE__*/React.createElement(EnvironmentContext.Provider, {\n    value: context\n  }, children, showEnvGetter && /*#__PURE__*/React.createElement(\"span\", {\n    ref: el => {\n      if (el) setNode(el);\n    }\n  }));\n}\nif (__DEV__) {\n  EnvironmentProvider.displayName = \"EnvironmentProvider\";\n}","map":{"version":3,"names":["isBrowser","__DEV__","React","createContext","useContext","useMemo","useState","ssrDocument","ssrWindow","mockEnv","window","document","defaultEnv","EnvironmentContext","displayName","useEnvironment","EnvironmentProvider","props","children","environment","environmentProp","node","setNode","context","_ref","doc","ownerDocument","win","defaultView","nodeEnv","undefined","env","showEnvGetter","createElement","Provider","value","ref","el"],"sources":["../../src/env.tsx"],"sourcesContent":["import { isBrowser, __DEV__ } from \"@chakra-ui/utils\"\nimport React, { createContext, useContext, useMemo, useState } from \"react\"\nimport { ssrDocument } from \"./mock-document\"\nimport { ssrWindow } from \"./mock-window\"\n\ninterface Environment {\n  window: Window\n  document: Document\n}\n\nconst mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument,\n}\n\nconst defaultEnv: Environment = isBrowser ? { window, document } : mockEnv\n\nconst EnvironmentContext = createContext(defaultEnv)\n\nif (__DEV__) {\n  EnvironmentContext.displayName = \"EnvironmentContext\"\n}\n\nexport function useEnvironment() {\n  return useContext(EnvironmentContext)\n}\n\nexport interface EnvironmentProviderProps {\n  children: React.ReactNode\n  environment?: Environment\n}\n\nexport function EnvironmentProvider(props: EnvironmentProviderProps) {\n  const { children, environment: environmentProp } = props\n  const [node, setNode] = useState<HTMLElement | null>(null)\n\n  const context = useMemo(() => {\n    const doc = node?.ownerDocument\n    const win = node?.ownerDocument.defaultView\n    const nodeEnv = doc ? { document: doc, window: win } : undefined\n    const env = environmentProp ?? nodeEnv ?? defaultEnv\n    return env as Environment\n  }, [node, environmentProp])\n\n  const showEnvGetter = !node && !environmentProp\n\n  return (\n    <EnvironmentContext.Provider value={context}>\n      {children}\n      {showEnvGetter && (\n        <span\n          ref={(el) => {\n            if (el) setNode(el)\n          }}\n        />\n      )}\n    </EnvironmentContext.Provider>\n  )\n}\n\nif (__DEV__) {\n  EnvironmentProvider.displayName = \"EnvironmentProvider\"\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,kBAAnC;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,QAApD,QAAoE,OAApE;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,eAA1B;AAOA,IAAMC,OAAO,GAAG;EACdC,MAAM,EAAEF,SADM;EAEdG,QAAQ,EAAEJ;AAFI,CAAhB;AAKA,IAAMK,UAAuB,GAAGZ,SAAS,GAAG;EAAEU,MAAF;EAAUC;AAAV,CAAH,GAA0BF,OAAnE;AAEA,IAAMI,kBAAkB,gBAAGV,aAAa,CAACS,UAAD,CAAxC;AAEA,IAAIX,OAAJ,EAAa;EACXY,kBAAkB,CAACC,WAAnB,GAAiC,oBAAjC;AACD;AAED,OAAO,SAASC,cAATA,CAAA,EAA0B;EAC/B,OAAOX,UAAU,CAACS,kBAAD,CAAjB;AACD;AAOD,OAAO,SAASG,mBAATA,CAA6BC,KAA7B,EAA8D;EACnE,IAAM;IAAEC,QAAF;IAAYC,WAAW,EAAEC;EAAzB,IAA6CH,KAAnD;EACA,IAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAqB,IAArB,CAAhC;EAEA,IAAMiB,OAAO,GAAGlB,OAAO,CAAC,MAAM;IAAA,IAAAmB,IAAA;IAC5B,IAAMC,GAAG,GAAGJ,IAAH,oBAAGA,IAAI,CAAEK,aAAlB;IACA,IAAMC,GAAG,GAAGN,IAAH,oBAAGA,IAAI,CAAEK,aAAN,CAAoBE,WAAhC;IACA,IAAMC,OAAO,GAAGJ,GAAG,GAAG;MAAEd,QAAQ,EAAEc,GAAZ;MAAiBf,MAAM,EAAEiB;IAAzB,CAAH,GAAoCG,SAAvD;IACA,IAAMC,GAAG,IAAAP,IAAA,GAAGJ,eAAH,WAAGA,eAAH,GAAsBS,OAAtB,YAAAL,IAAA,GAAiCZ,UAA1C;IACA,OAAOmB,GAAP;EACD,CANsB,EAMpB,CAACV,IAAD,EAAOD,eAAP,CANoB,CAAvB;EAQA,IAAMY,aAAa,GAAG,CAACX,IAAD,IAAS,CAACD,eAAhC;EAEA,oBACElB,KAAA,CAAA+B,aAAA,CAACpB,kBAAD,CAAoBqB,QAApB;IAA6BC,KAAK,EAAEZ;EAApC,GACGL,QADH,EAEGc,aAAa,iBACZ9B,KAAA,CAAA+B,aAAA;IACEG,GAAG,EAAGC,EAAD,IAAQ;MACX,IAAIA,EAAJ,EAAQf,OAAO,CAACe,EAAD,CAAP;IACT;EAHH,EAHJ,CADF;AAYD;AAED,IAAIpC,OAAJ,EAAa;EACXe,mBAAmB,CAACF,WAApB,GAAkC,qBAAlC;AACD"},"metadata":{},"sourceType":"module"}