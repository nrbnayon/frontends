{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var LinkOverlay = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      isExternal,\n      target,\n      rel,\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"isExternal\", \"target\", \"rel\", \"className\"]);\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({}, rest, {\n    ref: ref,\n    className: cx(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  }));\n});\n\n/**\r\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\r\n *\r\n * @see Docs https://www.chakra-ui.com/docs/link-overlay\r\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\r\n */\nexport var LinkBox = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className\n    } = props,\n    rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    position: \"relative\"\n  }, rest, {\n    className: cx(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  }));\n});","map":{"version":3,"names":["chakra","forwardRef","cx","React","LinkOverlay","props","ref","isExternal","target","rel","className","rest","_objectWithoutPropertiesLoose","createElement","a","_extends","__css","position","content","cursor","display","top","left","zIndex","width","height","LinkBox","div"],"sources":["../../src/link-box.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">((props, ref) => {\n  const { isExternal, target, rel, className, ...rest } = props\n  return (\n    <chakra.a\n      {...rest}\n      ref={ref}\n      className={cx(\"chakra-linkbox__overlay\", className)}\n      rel={isExternal ? \"noopener noreferrer\" : rel}\n      target={isExternal ? \"_blank\" : target}\n      __css={{\n        position: \"static\",\n        \"&::before\": {\n          content: \"''\",\n          cursor: \"inherit\",\n          display: \"block\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          zIndex: 0,\n          width: \"100%\",\n          height: \"100%\",\n        },\n      }}\n    />\n  )\n})\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://www.chakra-ui.com/docs/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">((props, ref) => {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAoD,mBAApD;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AASA,OAAO,IAAMC,WAAW,gBAAGH,UAAU,CAAwB,CAACI,KAAD,EAAQC,GAAR,KAAgB;EAC3E,IAAM;MAAEC,UAAF;MAAcC,MAAd;MAAsBC,GAAtB;MAA2BC;IAA3B,IAAkDL,KAAxD;IAA+CM,IAA/C,GAAAC,6BAAA,CAAwDP,KAAxD;EACA,oBACEF,KAAA,CAAAU,aAAA,CAACb,MAAD,CAAQc,CAAR,EAAAC,QAAA,KACMJ,IADN;IAEEL,GAAG,EAAEA,GAFP;IAGEI,SAAS,EAAER,EAAE,CAAC,yBAAD,EAA4BQ,SAA5B,CAHf;IAIED,GAAG,EAAEF,UAAU,GAAG,qBAAH,GAA2BE,GAJ5C;IAKED,MAAM,EAAED,UAAU,GAAG,QAAH,GAAcC,MALlC;IAMEQ,KAAK,EAAE;MACLC,QAAQ,EAAE,QADL;MAEL,aAAa;QACXC,OAAO,EAAE,IADE;QAEXC,MAAM,EAAE,SAFG;QAGXC,OAAO,EAAE,OAHE;QAIXH,QAAQ,EAAE,UAJC;QAKXI,GAAG,EAAE,CALM;QAMXC,IAAI,EAAE,CANK;QAOXC,MAAM,EAAE,CAPG;QAQXC,KAAK,EAAE,MARI;QASXC,MAAM,EAAE;MATG;IAFR;EANT,GADF;AAuBD,CAzBoC,CAA9B;;AA6BP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,OAAO,gBAAGzB,UAAU,CAAsB,CAACI,KAAD,EAAQC,GAAR,KAAgB;EACrE,IAAM;MAAEI;IAAF,IAAyBL,KAA/B;IAAsBM,IAAtB,GAAAC,6BAAA,CAA+BP,KAA/B;EAEA,oBACEF,KAAA,CAAAU,aAAA,CAACb,MAAD,CAAQ2B,GAAR,EAAAZ,QAAA;IACET,GAAG,EAAEA,GADP;IAEEW,QAAQ,EAAC;EAFX,GAGMN,IAHN;IAIED,SAAS,EAAER,EAAE,CAAC,gBAAD,EAAmBQ,SAAnB,CAJf;IAKEM,KAAK,EAAE;MACL;MACA,sDAAsD;QACpDC,QAAQ,EAAE,UAD0C;QAEpDM,MAAM,EAAE;MAF4C;IAFjD;EALT,GADF;AAeD,CAlBgC,CAA1B"},"metadata":{},"sourceType":"module"}