{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext();const ChatProvider=_ref=>{let{children}=_ref;const[selectedChat,setSelectedChat]=useState();const[user,setUser]=useState();const[notification,setNotification]=useState([]);const[chats,setChats]=useState();const history=useHistory();useEffect(()=>{const userInfo=JSON.parse(localStorage.getItem(\"userInfo\"));setUser(userInfo);if(!userInfo)history.push(\"/\");// eslint-disable-next-line react-hooks/exhaustive-deps\n},[history]);return/*#__PURE__*/_jsx(ChatContext.Provider,{value:{selectedChat,setSelectedChat,user,setUser,notification,setNotification,chats,setChats},children:children});};export const ChatState=()=>{return useContext(ChatContext);};export default ChatProvider;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useHistory","jsx","_jsx","ChatContext","ChatProvider","_ref","children","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","history","userInfo","JSON","parse","localStorage","getItem","push","Provider","value","ChatState"],"sources":["E:/Hasan sir project/4/frontend/src/Context/ChatProvider.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,UAAU,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAClD,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAClC,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAEpC,KAAM,CAAAgB,OAAO,CAAGf,UAAU,CAAC,CAAC,CAE5BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAC7DV,OAAO,CAACM,QAAQ,CAAC,CAEjB,GAAI,CAACA,QAAQ,CAAED,OAAO,CAACM,IAAI,CAAC,GAAG,CAAC,CAChC;AACF,CAAC,CAAE,CAACN,OAAO,CAAC,CAAC,CAEb,mBACEb,IAAA,CAACC,WAAW,CAACmB,QAAQ,EACnBC,KAAK,CAAE,CACLhB,YAAY,CACZC,eAAe,CACfC,IAAI,CACJC,OAAO,CACPC,YAAY,CACZC,eAAe,CACfC,KAAK,CACLC,QACF,CAAE,CAAAR,QAAA,CAEDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkB,SAAS,CAAGA,CAAA,GAAM,CAC7B,MAAO,CAAA3B,UAAU,CAACM,WAAW,CAAC,CAChC,CAAC,CAED,cAAe,CAAAC,YAAY"},"metadata":{},"sourceType":"module"}