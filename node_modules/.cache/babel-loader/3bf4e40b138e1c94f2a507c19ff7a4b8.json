{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { warn } from \"@chakra-ui/utils\";\nexport var createBreakpoints = config => {\n  warn({\n    condition: true,\n    message: [\"[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon\", \"simply pass the breakpoints as an object. Remove the createBreakpoint(..) call\"].join(\"\")\n  });\n  return _extends({\n    base: \"0em\"\n  }, config);\n};","map":{"version":3,"names":["warn","createBreakpoints","config","condition","message","join","_extends","base"],"sources":["../../src/create-breakpoints.ts"],"sourcesContent":["import { warn } from \"@chakra-ui/utils\"\n\nexport interface BaseBreakpointConfig {\n  sm: string\n  md: string\n  lg: string\n  xl: string\n  \"2xl\"?: string\n  [key: string]: string | undefined\n}\n\nexport type Breakpoints<T> = T & { base: \"0em\" }\n\nexport const createBreakpoints = <T extends BaseBreakpointConfig>(\n  config: T,\n): Breakpoints<T> => {\n  warn({\n    condition: true,\n    message: [\n      `[chakra-ui]: createBreakpoints(...) will be deprecated pretty soon`,\n      `simply pass the breakpoints as an object. Remove the createBreakpoint(..) call`,\n    ].join(\"\"),\n  })\n  return { base: \"0em\", ...config }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AAaA,OAAO,IAAMC,iBAAiB,GAC5BC,MAD+B,IAEZ;EACnBF,IAAI,CAAC;IACHG,SAAS,EAAE,IADR;IAEHC,OAAO,EAAE,yJAGPC,IAHO,CAGF,EAHE;EAFN,CAAD,CAAJ;EAOA,OAAAC,QAAA;IAASC,IAAI,EAAE;EAAf,GAAyBL,MAAzB;AACD,CAXM"},"metadata":{},"sourceType":"module"}