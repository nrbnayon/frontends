{"ast":null,"code":"import { motionValue } from '../../value/index.js';\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n  for (var key in next) {\n    var nextValue = next[key];\n    var prevValue = prev[key];\n    if (isMotionValue(nextValue)) {\n      /**\r\n       * If this is a motion value found in props or style, we want to add it\r\n       * to our visual element's motion value map.\r\n       */\n      element.addValue(key, nextValue);\n    } else if (isMotionValue(prevValue)) {\n      /**\r\n       * If we're swapping to a new motion value, create a new motion value\r\n       * from that\r\n       */\n      element.addValue(key, motionValue(nextValue));\n    } else if (prevValue !== nextValue) {\n      /**\r\n       * If this is a flat value that has changed, update the motion value\r\n       * or create one if it doesn't exist. We only want to do this if we're\r\n       * not handling the value with our animation state.\r\n       */\n      if (element.hasValue(key)) {\n        var existingValue = element.getValue(key);\n        // TODO: Only update values that aren't being animated or even looked at\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  }\n  // Handle removed values\n  for (var key in prev) {\n    if (next[key] === undefined) element.removeValue(key);\n  }\n  return next;\n}\nexport { updateMotionValuesFromProps };","map":{"version":3,"names":["motionValue","isMotionValue","updateMotionValuesFromProps","element","next","prev","_a","key","nextValue","prevValue","addValue","hasValue","existingValue","getValue","hasAnimated","set","getStaticValue","undefined","removeValue"],"sources":["E:/Hasan sir project/frontend/node_modules/framer-motion/dist/es/render/utils/motion-values.js"],"sourcesContent":["import { motionValue } from '../../value/index.js';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.js';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    var _a;\r\n    for (var key in next) {\r\n        var nextValue = next[key];\r\n        var prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping to a new motion value, create a new motion value\r\n             * from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue));\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                var existingValue = element.getValue(key);\r\n                // TODO: Only update values that aren't being animated or even looked at\r\n                !existingValue.hasAnimated && existingValue.set(nextValue);\r\n            }\r\n            else {\r\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (var key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,sCAAsC;AAEpE,SAASC,2BAA2BA,CAACC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACtD,IAAIC,EAAE;EACN,KAAK,IAAIC,GAAG,IAAIH,IAAI,EAAE;IAClB,IAAII,SAAS,GAAGJ,IAAI,CAACG,GAAG,CAAC;IACzB,IAAIE,SAAS,GAAGJ,IAAI,CAACE,GAAG,CAAC;IACzB,IAAIN,aAAa,CAACO,SAAS,CAAC,EAAE;MAC1B;AACZ;AACA;AACA;MACYL,OAAO,CAACO,QAAQ,CAACH,GAAG,EAAEC,SAAS,CAAC;IACpC,CAAC,MACI,IAAIP,aAAa,CAACQ,SAAS,CAAC,EAAE;MAC/B;AACZ;AACA;AACA;MACYN,OAAO,CAACO,QAAQ,CAACH,GAAG,EAAEP,WAAW,CAACQ,SAAS,CAAC,CAAC;IACjD,CAAC,MACI,IAAIC,SAAS,KAAKD,SAAS,EAAE;MAC9B;AACZ;AACA;AACA;AACA;MACY,IAAIL,OAAO,CAACQ,QAAQ,CAACJ,GAAG,CAAC,EAAE;QACvB,IAAIK,aAAa,GAAGT,OAAO,CAACU,QAAQ,CAACN,GAAG,CAAC;QACzC;QACA,CAACK,aAAa,CAACE,WAAW,IAAIF,aAAa,CAACG,GAAG,CAACP,SAAS,CAAC;MAC9D,CAAC,MACI;QACDL,OAAO,CAACO,QAAQ,CAACH,GAAG,EAAEP,WAAW,CAAC,CAACM,EAAE,GAAGH,OAAO,CAACa,cAAc,CAACT,GAAG,CAAC,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,SAAS,CAAC,CAAC;MACrH;IACJ;EACJ;EACA;EACA,KAAK,IAAID,GAAG,IAAIF,IAAI,EAAE;IAClB,IAAID,IAAI,CAACG,GAAG,CAAC,KAAKU,SAAS,EACvBd,OAAO,CAACe,WAAW,CAACX,GAAG,CAAC;EAChC;EACA,OAAOH,IAAI;AACf;AAEA,SAASF,2BAA2B"},"metadata":{},"sourceType":"module"}