{"ast":null,"code":"// Number assertions\nexport function isNumber(value) {\n  return typeof value === \"number\";\n}\nexport function isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nexport function isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport function isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n} // Function assertions\n\nexport function isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nexport function isDefined(value) {\n  return typeof value !== \"undefined\" && value !== undefined;\n}\nexport function isUndefined(value) {\n  return typeof value === \"undefined\" || value === undefined;\n} // Object assertions\n\nexport function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nexport function isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nexport function isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nexport function isNull(value) {\n  return value == null;\n} // String assertions\n\nexport function isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nexport function isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Empty assertions\n\nexport function isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nexport var __DEV__ = process.env.NODE_ENV !== \"production\";\nexport var __TEST__ = process.env.NODE_ENV === \"test\";\nexport function isRefObject(val) {\n  return \"current\" in val;\n}\nexport function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}","map":{"version":3,"names":["isNumber","value","isNotNumber","Number","isNaN","isFinite","isNumeric","parseFloat","isArray","Array","isEmptyArray","length","isFunction","isDefined","undefined","isUndefined","isObject","type","isEmptyObject","Object","keys","isNotEmptyObject","isNull","isString","prototype","toString","call","isCssVar","test","isEmpty","__DEV__","process","env","NODE_ENV","__TEST__","isRefObject","val","isInputEvent","target"],"sources":["../../src/assertion.ts"],"sourcesContent":["import { Dict } from \"./types\"\n\n// Number assertions\nexport function isNumber(value: any): value is number {\n  return typeof value === \"number\"\n}\n\nexport function isNotNumber(value: any) {\n  return (\n    typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value)\n  )\n}\n\nexport function isNumeric(value: any) {\n  return value != null && value - parseFloat(value) + 1 >= 0\n}\n\n// Array assertions\nexport function isArray<T>(value: any): value is Array<T> {\n  return Array.isArray(value)\n}\n\nexport function isEmptyArray(value: any) {\n  return isArray(value) && value.length === 0\n}\n\n// Function assertions\nexport function isFunction<T extends Function = Function>(\n  value: any,\n): value is T {\n  return typeof value === \"function\"\n}\n\n// Generic assertions\nexport function isDefined(value: any) {\n  return typeof value !== \"undefined\" && value !== undefined\n}\n\nexport function isUndefined(value: any): value is undefined {\n  return typeof value === \"undefined\" || value === undefined\n}\n\n// Object assertions\nexport function isObject(value: any): value is Dict {\n  const type = typeof value\n  return (\n    value != null &&\n    (type === \"object\" || type === \"function\") &&\n    !isArray(value)\n  )\n}\n\nexport function isEmptyObject(value: any) {\n  return isObject(value) && Object.keys(value).length === 0\n}\n\nexport function isNotEmptyObject(value: any): value is object {\n  return value && !isEmptyObject(value)\n}\n\nexport function isNull(value: any): value is null {\n  return value == null\n}\n\n// String assertions\nexport function isString(value: any): value is string {\n  return Object.prototype.toString.call(value) === \"[object String]\"\n}\n\nexport function isCssVar(value: string): boolean {\n  return /^var\\(--.+\\)$/.test(value)\n}\n\n// Empty assertions\nexport function isEmpty(value: any): boolean {\n  if (isArray(value)) return isEmptyArray(value)\n  if (isObject(value)) return isEmptyObject(value)\n  if (value == null || value === \"\") return true\n  return false\n}\n\nexport const __DEV__ = process.env.NODE_ENV !== \"production\"\n\nexport const __TEST__ = process.env.NODE_ENV === \"test\"\n\nexport function isRefObject(val: any): val is { current: any } {\n  return \"current\" in val\n}\n\nexport function isInputEvent(\n  value: any,\n): value is { target: HTMLInputElement } {\n  return value && isObject(value) && isObject(value.target)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}