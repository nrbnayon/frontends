{"ast":null,"code":"export function getOwnerWindow(node) {\n  var _getOwnerDocument$def, _getOwnerDocument;\n  return node instanceof Element ? (_getOwnerDocument$def = (_getOwnerDocument = getOwnerDocument(node)) == null ? void 0 : _getOwnerDocument.defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nexport function getOwnerDocument(node) {\n  var _node$ownerDocument;\n  return node instanceof Element ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nexport function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nexport var isBrowser = canUseDOM();\nexport var dataAttr = condition => condition ? \"\" : undefined;\nexport var ariaAttr = condition => condition ? true : undefined;\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  if (!parent) return false;\n  return parent === child || parent.contains(child);\n}\nexport function addDomEvent(target, eventName, handler, options) {\n  target.addEventListener(eventName, handler, options);\n  return () => {\n    target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\r\n * Get the normalized event key across all browsers\r\n * @param event keyboard event\r\n */\n\nexport function normalizeEventKey(event) {\n  var {\n    key,\n    keyCode\n  } = event;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport function getRelatedTarget(event) {\n  var _event$target, _ref, _event$relatedTarget;\n  var target = (_event$target = event.target) != null ? _event$target : event.currentTarget;\n  var activeElement = getActiveElement(target);\n  var originalTarget = event.nativeEvent.explicitOriginalTarget;\n  return (_ref = (_event$relatedTarget = event.relatedTarget) != null ? _event$relatedTarget : originalTarget) != null ? _ref : activeElement;\n}\nexport function isRightClick(event) {\n  return event.button !== 0;\n}","map":{"version":3,"names":["getOwnerWindow","node","_getOwnerDocument$def","_getOwnerDocument","Element","getOwnerDocument","defaultView","window","_node$ownerDocument","ownerDocument","document","canUseDOM","createElement","isBrowser","dataAttr","condition","undefined","ariaAttr","cx","_len","arguments","length","classNames","Array","_key","filter","Boolean","join","getActiveElement","doc","activeElement","contains","parent","child","addDomEvent","target","eventName","handler","options","addEventListener","removeEventListener","normalizeEventKey","event","key","keyCode","isArrowKey","indexOf","eventKey","getRelatedTarget","_event$target","_ref","_event$relatedTarget","currentTarget","originalTarget","nativeEvent","explicitOriginalTarget","relatedTarget","isRightClick","button"],"sources":["../../src/dom.ts"],"sourcesContent":["import { Booleanish, EventKeys } from \"./types\"\n\nexport function getOwnerWindow(node?: HTMLElement | null): Window {\n  return node instanceof Element\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: HTMLElement | null): Document {\n  return node instanceof Element ? node.ownerDocument ?? document : document\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(\n  event: Pick<KeyboardEvent, \"key\" | \"keyCode\">,\n) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget(\n  event: Pick<FocusEvent, \"relatedTarget\" | \"target\" | \"currentTarget\">,\n) {\n  const target = (event.target ?? event.currentTarget) as HTMLElement\n  const activeElement = getActiveElement(target)\n  const originalTarget = (event as any).nativeEvent.explicitOriginalTarget\n  return (event.relatedTarget ?? originalTarget ?? activeElement) as HTMLElement\n}\n\nexport function isRightClick(event: Pick<MouseEvent, \"button\">): boolean {\n  return event.button !== 0\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}