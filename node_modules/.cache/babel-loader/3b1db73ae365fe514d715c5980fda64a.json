{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar toVar = (value, fallback) => ({\n  var: value,\n  varRef: fallback ? \"var(\" + value + \", \" + fallback + \")\" : \"var(\" + value + \")\"\n});\nexport var cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\")\n};\nexport function getBoxShadow(placement) {\n  if (placement.includes(\"top\")) return \"1px 1px 1px 0 var(--popper-arrow-shadow-color)\";\n  if (placement.includes(\"bottom\")) return \"-1px -1px 1px 0 var(--popper-arrow-shadow-color)\";\n  if (placement.includes(\"right\")) return \"-1px 1px 1px 0 var(--popper-arrow-shadow-color)\";\n  if (placement.includes(\"left\")) return \"1px -1px 1px 0 var(--popper-arrow-shadow-color)\";\n}\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nexport var toTransformOrigin = placement => transforms[placement];\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\nexport function getEventListenerOptions(value) {\n  var eventListeners;\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: _extends({}, defaultEventListeners, value)\n    };\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners\n    };\n  }\n  return eventListeners;\n}","map":{"version":3,"names":["toVar","value","fallback","var","varRef","cssVars","arrowShadowColor","arrowSize","arrowSizeHalf","arrowBg","transformOrigin","arrowOffset","getBoxShadow","placement","includes","transforms","top","bottom","left","right","toTransformOrigin","defaultEventListeners","scroll","resize","getEventListenerOptions","eventListeners","enabled","options","_extends"],"sources":["../../src/utils.ts"],"sourcesContent":["import { Placement } from \"@popperjs/core\"\n\nconst toVar = (value: string, fallback?: string) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`,\n})\n\nexport const cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\"),\n} as const\n\nexport function getBoxShadow(placement: Placement) {\n  if (placement.includes(\"top\"))\n    return `1px 1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"bottom\"))\n    return `-1px -1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"right\"))\n    return `-1px 1px 1px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"left\"))\n    return `1px -1px 1px 0 var(--popper-arrow-shadow-color)`\n}\n\nconst transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) => transforms[placement]\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nexport function getEventListenerOptions(\n  value?: boolean | Partial<typeof defaultEventListeners>,\n) {\n  let eventListeners: {\n    enabled?: boolean\n    options?: typeof defaultEventListeners\n  }\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners, ...value },\n    }\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners,\n    }\n  }\n  return eventListeners\n}\n"],"mappings":";;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGA,CAACC,KAAD,EAAgBC,QAAhB,MAAuC;EACnDC,GAAG,EAAEF,KAD8C;EAEnDG,MAAM,EAAEF,QAAQ,YAAUD,KAAV,UAAoBC,QAApB,kBAAyCD,KAAzC;AAFmC,CAAvC,CAAd;AAKA,OAAO,IAAMI,OAAO,GAAG;EACrBC,gBAAgB,EAAEN,KAAK,CAAC,6BAAD,CADF;EAErBO,SAAS,EAAEP,KAAK,CAAC,qBAAD,EAAwB,KAAxB,CAFK;EAGrBQ,aAAa,EAAER,KAAK,CAAC,0BAAD,CAHC;EAIrBS,OAAO,EAAET,KAAK,CAAC,mBAAD,CAJO;EAKrBU,eAAe,EAAEV,KAAK,CAAC,2BAAD,CALD;EAMrBW,WAAW,EAAEX,KAAK,CAAC,uBAAD;AANG,CAAhB;AASP,OAAO,SAASY,YAATA,CAAsBC,SAAtB,EAA4C;EACjD,IAAIA,SAAS,CAACC,QAAV,CAAmB,KAAnB,CAAJ,EACE;EACF,IAAID,SAAS,CAACC,QAAV,CAAmB,QAAnB,CAAJ,EACE;EACF,IAAID,SAAS,CAACC,QAAV,CAAmB,OAAnB,CAAJ,EACE;EACF,IAAID,SAAS,CAACC,QAAV,CAAmB,MAAnB,CAAJ,EACE;AACH;AAED,IAAMC,UAAU,GAAG;EACjBC,GAAG,EAAE,eADY;EAEjB,aAAa,aAFI;EAGjB,WAAW,cAHM;EAKjBC,MAAM,EAAE,YALS;EAMjB,gBAAgB,UANC;EAOjB,cAAc,WAPG;EASjBC,IAAI,EAAE,cATW;EAUjB,cAAc,WAVG;EAWjB,YAAY,cAXK;EAajBC,KAAK,EAAE,aAbU;EAcjB,eAAe,UAdE;EAejB,aAAa;AAfI,CAAnB;AAkBA,OAAO,IAAMC,iBAAiB,GAAIP,SAAD,IAA0BE,UAAU,CAACF,SAAD,CAA9D;AAEP,IAAMQ,qBAAqB,GAAG;EAC5BC,MAAM,EAAE,IADoB;EAE5BC,MAAM,EAAE;AAFoB,CAA9B;AAKA,OAAO,SAASC,uBAATA,CACLvB,KADK,EAEL;EACA,IAAIwB,cAAJ;EAIA,IAAI,OAAOxB,KAAP,KAAiB,QAArB,EAA+B;IAC7BwB,cAAc,GAAG;MACfC,OAAO,EAAE,IADM;MAEfC,OAAO,EAAAC,QAAA,KAAOP,qBAAP,EAAiCpB,KAAjC;IAFQ,CAAjB;EAID,CALD,MAKO;IACLwB,cAAc,GAAG;MACfC,OAAO,EAAEzB,KADM;MAEf0B,OAAO,EAAEN;IAFM,CAAjB;EAID;EACD,OAAOI,cAAP;AACD"},"metadata":{},"sourceType":"module"}