{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { mergeWith, objectKeys } from \"@chakra-ui/utils\";\nimport { background, border, color, effect, filter, flexbox, grid, interactivity, layout, list, others, position, ring, space, textDecoration, transform, transition, typography } from \"./config\";\nimport { pseudoPropNames, pseudoSelectors } from \"./pseudos\";\nexport var systemProps = mergeWith({}, background, border, color, flexbox, layout, filter, ring, interactivity, grid, others, position, effect, space, typography, textDecoration, transform, list, transition);\nvar layoutSystem = Object.assign({}, space, layout, flexbox, grid, position);\nexport var layoutPropNames = objectKeys(layoutSystem);\nexport var propNames = [...objectKeys(systemProps), ...pseudoPropNames];\nvar styleProps = _extends({}, systemProps, pseudoSelectors);\nexport var isStyleProp = prop => prop in styleProps;","map":{"version":3,"names":["mergeWith","objectKeys","background","border","color","effect","filter","flexbox","grid","interactivity","layout","list","others","position","ring","space","textDecoration","transform","transition","typography","pseudoPropNames","pseudoSelectors","systemProps","layoutSystem","Object","assign","layoutPropNames","propNames","styleProps","_extends","isStyleProp","prop"],"sources":["../../src/system.ts"],"sourcesContent":["import { mergeWith, objectKeys } from \"@chakra-ui/utils\"\nimport {\n  background,\n  border,\n  color,\n  effect,\n  filter,\n  flexbox,\n  grid,\n  interactivity,\n  layout,\n  list,\n  others,\n  position,\n  ring,\n  space,\n  textDecoration,\n  transform,\n  transition,\n  typography,\n} from \"./config\"\nimport { pseudoPropNames, pseudoSelectors } from \"./pseudos\"\n\nexport const systemProps = mergeWith(\n  {},\n  background,\n  border,\n  color,\n  flexbox,\n  layout,\n  filter,\n  ring,\n  interactivity,\n  grid,\n  others,\n  position,\n  effect,\n  space,\n  typography,\n  textDecoration,\n  transform,\n  list,\n  transition,\n)\n\nconst layoutSystem = Object.assign({}, space, layout, flexbox, grid, position)\nexport const layoutPropNames = objectKeys(layoutSystem)\n\nexport const propNames = [...objectKeys(systemProps), ...pseudoPropNames]\nconst styleProps = { ...systemProps, ...pseudoSelectors }\n\nexport const isStyleProp = (prop: string) => prop in styleProps\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,EAQEC,aARF,EASEC,MATF,EAUEC,IAVF,EAWEC,MAXF,EAYEC,QAZF,EAaEC,IAbF,EAcEC,KAdF,EAeEC,cAfF,EAgBEC,SAhBF,EAiBEC,UAjBF,EAkBEC,UAlBF,QAmBO,UAnBP;AAoBA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,WAAjD;AAEA,OAAO,IAAMC,WAAW,GAAGtB,SAAS,CAClC,EADkC,EAElCE,UAFkC,EAGlCC,MAHkC,EAIlCC,KAJkC,EAKlCG,OALkC,EAMlCG,MANkC,EAOlCJ,MAPkC,EAQlCQ,IARkC,EASlCL,aATkC,EAUlCD,IAVkC,EAWlCI,MAXkC,EAYlCC,QAZkC,EAalCR,MAbkC,EAclCU,KAdkC,EAelCI,UAfkC,EAgBlCH,cAhBkC,EAiBlCC,SAjBkC,EAkBlCN,IAlBkC,EAmBlCO,UAnBkC,CAA7B;AAsBP,IAAMK,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyBL,MAAzB,EAAiCH,OAAjC,EAA0CC,IAA1C,EAAgDK,QAAhD,CAArB;AACA,OAAO,IAAMa,eAAe,GAAGzB,UAAU,CAACsB,YAAD,CAAlC;AAEP,OAAO,IAAMI,SAAS,GAAG,CAAC,GAAG1B,UAAU,CAACqB,WAAD,CAAd,EAA6B,GAAGF,eAAhC,CAAlB;AACP,IAAMQ,UAAU,GAAAC,QAAA,KAAQP,WAAR,EAAwBD,eAAxB,CAAhB;AAEA,OAAO,IAAMS,WAAW,GAAIC,IAAD,IAAkBA,IAAI,IAAIH,UAA9C"},"metadata":{},"sourceType":"module"}