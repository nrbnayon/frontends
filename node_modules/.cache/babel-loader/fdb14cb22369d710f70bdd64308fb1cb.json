{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n\n/**\r\n * Used to render texts or paragraphs.\r\n *\r\n * @see Docs https://chakra-ui.com/docs/typography/text\r\n */\nexport var Text = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyleConfig(\"Text\", props);\n  var _omitThemingProps = omitThemingProps(props),\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"align\", \"decoration\", \"casing\"]);\n  var aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /*#__PURE__*/React.createElement(chakra.p, _extends({\n    ref: ref,\n    className: cx(\"chakra-text\", props.className)\n  }, aliasedProps, rest, {\n    __css: styles\n  }));\n});\nif (__DEV__) {\n  Text.displayName = \"Text\";\n}","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","useStyleConfig","cx","__DEV__","filterUndefined","React","Text","props","ref","styles","_omitThemingProps","rest","_objectWithoutPropertiesLoose","aliasedProps","textAlign","align","textDecoration","decoration","textTransform","casing","createElement","p","_extends","className","__css","displayName"],"sources":["../../src/text.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/docs/typography/text\n */\nexport const Text = forwardRef<TextProps, \"p\">((props, ref) => {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(\n    props,\n  )\n\n  const aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Text.displayName = \"Text\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,gBAHF,EAMEC,cANF,QAQO,mBARP;AASA,SAASC,EAAT,EAAaC,OAAb,EAAsBC,eAAtB,QAA6C,kBAA7C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAoBA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,IAAI,gBAAGP,UAAU,CAAiB,CAACQ,KAAD,EAAQC,GAAR,KAAgB;EAC7D,IAAMC,MAAM,GAAGR,cAAc,CAAC,MAAD,EAASM,KAAT,CAA7B;EACA,IAAAG,iBAAA,GAA0DV,gBAAgB,CACxEO,KADwE,CAA1E;IAAiDI,IAAjD,GAAAC,6BAAA,CAAAF,iBAAA;EAIA,IAAMG,YAAY,GAAGT,eAAe,CAAC;IACnCU,SAAS,EAAEP,KAAK,CAACQ,KADkB;IAEnCC,cAAc,EAAET,KAAK,CAACU,UAFa;IAGnCC,aAAa,EAAEX,KAAK,CAACY;EAHc,CAAD,CAApC;EAMA,oBACEd,KAAA,CAAAe,aAAA,CAACtB,MAAD,CAAQuB,CAAR,EAAAC,QAAA;IACEd,GAAG,EAAEA,GADP;IAEEe,SAAS,EAAErB,EAAE,CAAC,aAAD,EAAgBK,KAAK,CAACgB,SAAtB;EAFf,GAGMV,YAHN,EAIMF,IAJN;IAKEa,KAAK,EAAEf;EALT,GADF;AASD,CArB6B,CAAvB;AAuBP,IAAIN,OAAJ,EAAa;EACXG,IAAI,CAACmB,WAAL,GAAmB,MAAnB;AACD"},"metadata":{},"sourceType":"module"}